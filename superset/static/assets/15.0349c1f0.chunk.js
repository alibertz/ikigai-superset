(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[15],{

/***/ "./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js":
/*!********************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CompositeLayer; });\n/* harmony import */ var _layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./layer */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../debug */ \"./node_modules/@deck.gl/core/dist/esm/debug/index.js\");\n/* harmony import */ var _utils_flatten__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/flatten */ \"./node_modules/@deck.gl/core/dist/esm/utils/flatten.js\");\n\n\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\nclass CompositeLayer extends _layer__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return this.internalState && this.internalState.subLayers || [];\n  }\n\n  initializeState() {}\n\n  setState(updateObject) {\n    super.setState(updateObject);\n    this.setNeedsUpdate();\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    const {\n      object\n    } = info;\n    const isDataWrapped = object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    info.object = object.__source.object;\n    info.index = object.__source.index;\n    return info;\n  }\n\n  renderLayers() {\n    return null;\n  }\n\n  filterSubLayer(context) {\n    return true;\n  }\n\n  shouldRenderSubLayer(id, data) {\n    const {\n      _subLayerProps: overridingProps\n    } = this.props;\n    return data && data.length || overridingProps && overridingProps[id];\n  }\n\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {\n      _subLayerProps: overridingProps\n    } = this.props;\n    return overridingProps && overridingProps[id] && overridingProps[id].type || DefaultLayerClass;\n  }\n\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x && x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n\n        return accessor(x, i);\n      };\n    }\n\n    return accessor;\n  }\n\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      fetch\n    };\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers = overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      const subLayerPropTypes = sublayerProps.type ? sublayerProps.type._propTypes : {};\n\n      for (const key in overridingSublayerProps) {\n        const propType = subLayerPropTypes[key] || propTypes[key];\n\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(newProps, sublayerProps, overridingSublayerProps);\n    newProps.id = \"\".concat(this.props.id, \"-\").concat(sublayerId);\n    newProps.updateTriggers = {\n      all: this.props.updateTriggers.all,\n      ...sublayerProps.updateTriggers,\n      ...overridingSublayerTriggers\n    };\n\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _updateAutoHighlight(info) {\n    for (const layer of this.getSubLayers()) {\n      layer.updateAutoHighlight(info);\n    }\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  _renderLayers() {\n    let {\n      subLayers\n    } = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      subLayers = Object(_utils_flatten__WEBPACK_IMPORTED_MODULE_2__[\"flatten\"])(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n\n    Object(_debug__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n\n}\nCompositeLayer.layerName = 'CompositeLayer';\n//# sourceMappingURL=composite-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Tesselator; });\n/* harmony import */ var _iterable_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterable-utils */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _typed_array_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typed-array-manager */ \"./node_modules/@deck.gl/core/dist/esm/utils/typed-array-manager.js\");\n/* harmony import */ var _assert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./assert */ \"./node_modules/@deck.gl/core/dist/esm/utils/assert.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/buffer.js\");\n\n\n\n\nclass Tesselator {\n  constructor(opts = {}) {\n    const {\n      attributes = {}\n    } = opts;\n    this.typedArrayManager = _typed_array_manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n    this.indexStarts = null;\n    this.vertexStarts = null;\n    this.vertexCount = 0;\n    this.instanceCount = 0;\n    this.attributes = {};\n    this._attributeDefs = attributes;\n    this.opts = opts;\n    this.updateGeometry(opts);\n    Object.seal(this);\n  }\n\n  updateGeometry(opts) {\n    Object.assign(this.opts, opts);\n    const {\n      data,\n      buffers = {},\n      getGeometry,\n      geometryBuffer,\n      positionFormat,\n      dataChanged,\n      normalize = true\n    } = this.opts;\n    this.data = data;\n    this.getGeometry = getGeometry;\n    this.positionSize = geometryBuffer && geometryBuffer.size || (positionFormat === 'XY' ? 2 : 3);\n    this.buffers = buffers;\n    this.normalize = normalize;\n\n    if (geometryBuffer) {\n      Object(_assert__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data.startIndices);\n      this.getGeometry = this.getGeometryFromBuffer(geometryBuffer);\n\n      if (!normalize) {\n        buffers.positions = geometryBuffer;\n      }\n    }\n\n    this.geometryBuffer = buffers.positions;\n\n    if (Array.isArray(dataChanged)) {\n      for (const dataRange of dataChanged) {\n        this._rebuildGeometry(dataRange);\n      }\n    } else {\n      this._rebuildGeometry();\n    }\n  }\n\n  updatePartialGeometry({\n    startRow,\n    endRow\n  }) {\n    this._rebuildGeometry({\n      startRow,\n      endRow\n    });\n  }\n\n  normalizeGeometry(geometry) {\n    return geometry;\n  }\n\n  updateGeometryAttributes(geometry, startIndex, size) {\n    throw new Error('Not implemented');\n  }\n\n  getGeometrySize(geometry) {\n    throw new Error('Not implemented');\n  }\n\n  getGeometryFromBuffer(geometryBuffer) {\n    const value = geometryBuffer.value || geometryBuffer;\n    Object(_assert__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(ArrayBuffer.isView(value));\n    return Object(_iterable_utils__WEBPACK_IMPORTED_MODULE_0__[\"getAccessorFromBuffer\"])(value, {\n      size: this.positionSize,\n      offset: geometryBuffer.offset,\n      stride: geometryBuffer.stride,\n      startIndices: this.data.startIndices\n    });\n  }\n\n  _allocate(instanceCount, copy) {\n    const {\n      attributes,\n      buffers,\n      _attributeDefs,\n      typedArrayManager\n    } = this;\n\n    for (const name in _attributeDefs) {\n      if (name in buffers) {\n        typedArrayManager.release(attributes[name]);\n        attributes[name] = null;\n      } else {\n        const def = _attributeDefs[name];\n        def.copy = copy;\n        attributes[name] = typedArrayManager.allocate(attributes[name], instanceCount, def);\n      }\n    }\n  }\n\n  _forEachGeometry(visitor, startRow, endRow) {\n    const {\n      data,\n      getGeometry\n    } = this;\n    const {\n      iterable,\n      objectInfo\n    } = Object(_iterable_utils__WEBPACK_IMPORTED_MODULE_0__[\"createIterable\"])(data, startRow, endRow);\n\n    for (const object of iterable) {\n      objectInfo.index++;\n      const geometry = getGeometry(object, objectInfo);\n      visitor(geometry, objectInfo.index);\n    }\n  }\n\n  _rebuildGeometry(dataRange) {\n    if (!this.data || !this.getGeometry) {\n      return;\n    }\n\n    let {\n      indexStarts,\n      vertexStarts,\n      instanceCount\n    } = this;\n    const {\n      data,\n      geometryBuffer\n    } = this;\n    const {\n      startRow = 0,\n      endRow = Infinity\n    } = dataRange || {};\n    const normalizedData = {};\n\n    if (!dataRange) {\n      indexStarts = [0];\n      vertexStarts = [0];\n    }\n\n    if (this.normalize || !geometryBuffer) {\n      this._forEachGeometry((geometry, dataIndex) => {\n        geometry = this.normalizeGeometry(geometry);\n        normalizedData[dataIndex] = geometry;\n        vertexStarts[dataIndex + 1] = vertexStarts[dataIndex] + this.getGeometrySize(geometry);\n      }, startRow, endRow);\n\n      instanceCount = vertexStarts[vertexStarts.length - 1];\n    } else if (geometryBuffer.buffer instanceof _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n      const byteStride = geometryBuffer.stride || this.positionSize * 4;\n      vertexStarts = data.startIndices;\n      instanceCount = vertexStarts[data.length] || geometryBuffer.buffer.byteLength / byteStride;\n    } else {\n      const bufferValue = geometryBuffer.value || geometryBuffer;\n      const elementStride = geometryBuffer.stride / bufferValue.BYTES_PER_ELEMENT || this.positionSize;\n      vertexStarts = data.startIndices;\n      instanceCount = vertexStarts[data.length] || bufferValue.length / elementStride;\n    }\n\n    this._allocate(instanceCount, Boolean(dataRange));\n\n    this.indexStarts = indexStarts;\n    this.vertexStarts = vertexStarts;\n    this.instanceCount = instanceCount;\n    const context = {};\n\n    this._forEachGeometry((geometry, dataIndex) => {\n      geometry = normalizedData[dataIndex] || geometry;\n      context.vertexStart = vertexStarts[dataIndex];\n      context.indexStart = indexStarts[dataIndex];\n      const vertexEnd = dataIndex < vertexStarts.length - 1 ? vertexStarts[dataIndex + 1] : instanceCount;\n      context.geometrySize = vertexEnd - vertexStarts[dataIndex];\n      context.geometryIndex = dataIndex;\n      this.updateGeometryAttributes(geometry, context);\n    }, startRow, endRow);\n\n    this.vertexCount = indexStarts[indexStarts.length - 1];\n  }\n\n}\n//# sourceMappingURL=tesselator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js ***!
  \*******************************************************************************/
/*! exports provided: binaryToFeatureForAccesor, findIndexBinary, calculatePickingColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"binaryToFeatureForAccesor\", function() { return binaryToFeatureForAccesor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findIndexBinary\", function() { return findIndexBinary; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculatePickingColors\", function() { return calculatePickingColors; });\nconst GEOM_TYPES = ['points', 'lines', 'polygons'];\nfunction binaryToFeatureForAccesor(data, index) {\n  if (!data) {\n    return null;\n  }\n\n  const featureIndex = 'startIndices' in data ? data.startIndices[index] : index;\n  const geometryIndex = data.featureIds.value[featureIndex];\n\n  if (featureIndex !== -1) {\n    return getPropertiesForIndex(data, geometryIndex, featureIndex);\n  }\n\n  return null;\n}\n\nfunction getPropertiesForIndex(data, propertiesIndex, numericPropsIndex) {\n  const feature = {\n    properties: { ...data.properties[propertiesIndex]\n    }\n  };\n\n  for (const prop in data.numericProps) {\n    feature.properties[prop] = data.numericProps[prop].value[numericPropsIndex];\n  }\n\n  return feature;\n}\n\nfunction findIndexBinary(data, uniqueIdProperty, featureId) {\n  if (!data) {\n    return -1;\n  }\n\n  for (const gt of GEOM_TYPES) {\n    const index = findIndexByType(data, uniqueIdProperty, featureId, gt);\n\n    if (index !== -1) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nfunction findIndexByType(data, uniqueIdProperty, featureId, geomType) {\n  if (!data) {\n    return -1;\n  }\n\n  if (!(geomType in data) || !data[geomType].positions.value.length) return -1;\n  let index = -1;\n\n  if (data[geomType].numericProps[uniqueIdProperty]) {\n    index = data[geomType].numericProps[uniqueIdProperty].value.indexOf(featureId);\n  } else {\n    const propertyIndex = data[geomType].properties.findIndex(elem => elem[uniqueIdProperty] === featureId);\n    index = data[geomType].featureIds.value.indexOf(propertyIndex);\n  }\n\n  return index;\n}\n\nfunction calculatePickingColors(geojsonBinary, encodePickingColor) {\n  const pickingColors = {\n    points: null,\n    lines: null,\n    polygons: null\n  };\n\n  for (const key in pickingColors) {\n    const featureIds = geojsonBinary[key].globalFeatureIds.value;\n    pickingColors[key] = new Uint8ClampedArray(featureIds.length * 3);\n    const pickingColor = [];\n\n    for (let i = 0; i < featureIds.length; i++) {\n      encodePickingColor(featureIds[i], pickingColor);\n      pickingColors[key][i * 3 + 0] = pickingColor[0];\n      pickingColors[key][i * 3 + 1] = pickingColor[1];\n      pickingColors[key][i * 3 + 2] = pickingColor[2];\n    }\n  }\n\n  return pickingColors;\n}\n//# sourceMappingURL=geojson-binary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi1iaW5hcnkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi1iaW5hcnkuanM/M2ViOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBHRU9NX1RZUEVTID0gWydwb2ludHMnLCAnbGluZXMnLCAncG9seWdvbnMnXTtcbmV4cG9ydCBmdW5jdGlvbiBiaW5hcnlUb0ZlYXR1cmVGb3JBY2Nlc29yKGRhdGEsIGluZGV4KSB7XG4gIGlmICghZGF0YSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgZmVhdHVyZUluZGV4ID0gJ3N0YXJ0SW5kaWNlcycgaW4gZGF0YSA/IGRhdGEuc3RhcnRJbmRpY2VzW2luZGV4XSA6IGluZGV4O1xuICBjb25zdCBnZW9tZXRyeUluZGV4ID0gZGF0YS5mZWF0dXJlSWRzLnZhbHVlW2ZlYXR1cmVJbmRleF07XG5cbiAgaWYgKGZlYXR1cmVJbmRleCAhPT0gLTEpIHtcbiAgICByZXR1cm4gZ2V0UHJvcGVydGllc0ZvckluZGV4KGRhdGEsIGdlb21ldHJ5SW5kZXgsIGZlYXR1cmVJbmRleCk7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gZ2V0UHJvcGVydGllc0ZvckluZGV4KGRhdGEsIHByb3BlcnRpZXNJbmRleCwgbnVtZXJpY1Byb3BzSW5kZXgpIHtcbiAgY29uc3QgZmVhdHVyZSA9IHtcbiAgICBwcm9wZXJ0aWVzOiB7IC4uLmRhdGEucHJvcGVydGllc1twcm9wZXJ0aWVzSW5kZXhdXG4gICAgfVxuICB9O1xuXG4gIGZvciAoY29uc3QgcHJvcCBpbiBkYXRhLm51bWVyaWNQcm9wcykge1xuICAgIGZlYXR1cmUucHJvcGVydGllc1twcm9wXSA9IGRhdGEubnVtZXJpY1Byb3BzW3Byb3BdLnZhbHVlW251bWVyaWNQcm9wc0luZGV4XTtcbiAgfVxuXG4gIHJldHVybiBmZWF0dXJlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZEluZGV4QmluYXJ5KGRhdGEsIHVuaXF1ZUlkUHJvcGVydHksIGZlYXR1cmVJZCkge1xuICBpZiAoIWRhdGEpIHtcbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICBmb3IgKGNvbnN0IGd0IG9mIEdFT01fVFlQRVMpIHtcbiAgICBjb25zdCBpbmRleCA9IGZpbmRJbmRleEJ5VHlwZShkYXRhLCB1bmlxdWVJZFByb3BlcnR5LCBmZWF0dXJlSWQsIGd0KTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHJldHVybiBpbmRleDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLTE7XG59XG5cbmZ1bmN0aW9uIGZpbmRJbmRleEJ5VHlwZShkYXRhLCB1bmlxdWVJZFByb3BlcnR5LCBmZWF0dXJlSWQsIGdlb21UeXBlKSB7XG4gIGlmICghZGF0YSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIGlmICghKGdlb21UeXBlIGluIGRhdGEpIHx8ICFkYXRhW2dlb21UeXBlXS5wb3NpdGlvbnMudmFsdWUubGVuZ3RoKSByZXR1cm4gLTE7XG4gIGxldCBpbmRleCA9IC0xO1xuXG4gIGlmIChkYXRhW2dlb21UeXBlXS5udW1lcmljUHJvcHNbdW5pcXVlSWRQcm9wZXJ0eV0pIHtcbiAgICBpbmRleCA9IGRhdGFbZ2VvbVR5cGVdLm51bWVyaWNQcm9wc1t1bmlxdWVJZFByb3BlcnR5XS52YWx1ZS5pbmRleE9mKGZlYXR1cmVJZCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgcHJvcGVydHlJbmRleCA9IGRhdGFbZ2VvbVR5cGVdLnByb3BlcnRpZXMuZmluZEluZGV4KGVsZW0gPT4gZWxlbVt1bmlxdWVJZFByb3BlcnR5XSA9PT0gZmVhdHVyZUlkKTtcbiAgICBpbmRleCA9IGRhdGFbZ2VvbVR5cGVdLmZlYXR1cmVJZHMudmFsdWUuaW5kZXhPZihwcm9wZXJ0eUluZGV4KTtcbiAgfVxuXG4gIHJldHVybiBpbmRleDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVBpY2tpbmdDb2xvcnMoZ2VvanNvbkJpbmFyeSwgZW5jb2RlUGlja2luZ0NvbG9yKSB7XG4gIGNvbnN0IHBpY2tpbmdDb2xvcnMgPSB7XG4gICAgcG9pbnRzOiBudWxsLFxuICAgIGxpbmVzOiBudWxsLFxuICAgIHBvbHlnb25zOiBudWxsXG4gIH07XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gcGlja2luZ0NvbG9ycykge1xuICAgIGNvbnN0IGZlYXR1cmVJZHMgPSBnZW9qc29uQmluYXJ5W2tleV0uZ2xvYmFsRmVhdHVyZUlkcy52YWx1ZTtcbiAgICBwaWNraW5nQ29sb3JzW2tleV0gPSBuZXcgVWludDhDbGFtcGVkQXJyYXkoZmVhdHVyZUlkcy5sZW5ndGggKiAzKTtcbiAgICBjb25zdCBwaWNraW5nQ29sb3IgPSBbXTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmVhdHVyZUlkcy5sZW5ndGg7IGkrKykge1xuICAgICAgZW5jb2RlUGlja2luZ0NvbG9yKGZlYXR1cmVJZHNbaV0sIHBpY2tpbmdDb2xvcik7XG4gICAgICBwaWNraW5nQ29sb3JzW2tleV1baSAqIDMgKyAwXSA9IHBpY2tpbmdDb2xvclswXTtcbiAgICAgIHBpY2tpbmdDb2xvcnNba2V5XVtpICogMyArIDFdID0gcGlja2luZ0NvbG9yWzFdO1xuICAgICAgcGlja2luZ0NvbG9yc1trZXldW2kgKiAzICsgMl0gPSBwaWNraW5nQ29sb3JbMl07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBpY2tpbmdDb2xvcnM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZW9qc29uLWJpbmFyeS5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js ***!
  \************************************************************************************/
/*! exports provided: createLayerPropsFromFeatures, createLayerPropsFromBinary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createLayerPropsFromFeatures\", function() { return createLayerPropsFromFeatures; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createLayerPropsFromBinary\", function() { return createLayerPropsFromBinary; });\n/* harmony import */ var _geojson_binary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geojson-binary */ \"./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js\");\n\n\nfunction createEmptyLayerProps() {\n  return {\n    points: {},\n    lines: {},\n    polygons: {},\n    polygonsOutline: {}\n  };\n}\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nfunction createLayerPropsFromFeatures(features, featuresDiff) {\n  const layerProps = createEmptyLayerProps();\n  const {\n    pointFeatures,\n    lineFeatures,\n    polygonFeatures,\n    polygonOutlineFeatures\n  } = features;\n  layerProps.points.data = pointFeatures;\n\n  layerProps.points._dataDiff = featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures);\n\n  layerProps.points.getPosition = getCoordinates;\n  layerProps.lines.data = lineFeatures;\n\n  layerProps.lines._dataDiff = featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures);\n\n  layerProps.lines.getPath = getCoordinates;\n  layerProps.polygons.data = polygonFeatures;\n\n  layerProps.polygons._dataDiff = featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures);\n\n  layerProps.polygons.getPolygon = getCoordinates;\n  layerProps.polygonsOutline.data = polygonOutlineFeatures;\n\n  layerProps.polygonsOutline._dataDiff = featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures);\n\n  layerProps.polygonsOutline.getPath = getCoordinates;\n  return layerProps;\n}\nfunction createLayerPropsFromBinary(geojsonBinary, encodePickingColor) {\n  const layerProps = createEmptyLayerProps();\n  const {\n    points,\n    lines,\n    polygons\n  } = geojsonBinary;\n  const customPickingColors = Object(_geojson_binary__WEBPACK_IMPORTED_MODULE_0__[\"calculatePickingColors\"])(geojsonBinary, encodePickingColor);\n  layerProps.points.data = {\n    length: points.positions.value.length / points.positions.size,\n    attributes: {\n      getPosition: points.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.points\n      }\n    },\n    properties: points.properties,\n    numericProps: points.numericProps,\n    featureIds: points.featureIds\n  };\n  layerProps.lines.data = {\n    length: lines.pathIndices.value.length - 1,\n    startIndices: lines.pathIndices.value,\n    attributes: {\n      getPath: lines.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.lines\n      }\n    },\n    properties: lines.properties,\n    numericProps: lines.numericProps,\n    featureIds: lines.featureIds\n  };\n  layerProps.lines._pathType = 'open';\n  layerProps.polygons.data = {\n    length: polygons.polygonIndices.value.length - 1,\n    startIndices: polygons.polygonIndices.value,\n    attributes: {\n      getPolygon: polygons.positions,\n      pickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygons._normalize = false;\n\n  if (polygons.triangles) {\n    layerProps.polygons.data.attributes.indices = polygons.triangles.value;\n  }\n\n  layerProps.polygonsOutline.data = {\n    length: polygons.primitivePolygonIndices.value.length - 1,\n    startIndices: polygons.primitivePolygonIndices.value,\n    attributes: {\n      getPath: polygons.positions,\n      instancePickingColors: {\n        size: 3,\n        value: customPickingColors.polygons\n      }\n    },\n    properties: polygons.properties,\n    numericProps: polygons.numericProps,\n    featureIds: polygons.featureIds\n  };\n  layerProps.polygonsOutline._pathType = 'open';\n  return layerProps;\n}\n//# sourceMappingURL=geojson-layer-props.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi1sYXllci1wcm9wcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vZ2VvanNvbi1sYXllci9nZW9qc29uLWxheWVyLXByb3BzLmpzP2YzMzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FsY3VsYXRlUGlja2luZ0NvbG9ycyB9IGZyb20gJy4vZ2VvanNvbi1iaW5hcnknO1xuXG5mdW5jdGlvbiBjcmVhdGVFbXB0eUxheWVyUHJvcHMoKSB7XG4gIHJldHVybiB7XG4gICAgcG9pbnRzOiB7fSxcbiAgICBsaW5lczoge30sXG4gICAgcG9seWdvbnM6IHt9LFxuICAgIHBvbHlnb25zT3V0bGluZToge31cbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0Q29vcmRpbmF0ZXMoZikge1xuICByZXR1cm4gZi5nZW9tZXRyeS5jb29yZGluYXRlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUxheWVyUHJvcHNGcm9tRmVhdHVyZXMoZmVhdHVyZXMsIGZlYXR1cmVzRGlmZikge1xuICBjb25zdCBsYXllclByb3BzID0gY3JlYXRlRW1wdHlMYXllclByb3BzKCk7XG4gIGNvbnN0IHtcbiAgICBwb2ludEZlYXR1cmVzLFxuICAgIGxpbmVGZWF0dXJlcyxcbiAgICBwb2x5Z29uRmVhdHVyZXMsXG4gICAgcG9seWdvbk91dGxpbmVGZWF0dXJlc1xuICB9ID0gZmVhdHVyZXM7XG4gIGxheWVyUHJvcHMucG9pbnRzLmRhdGEgPSBwb2ludEZlYXR1cmVzO1xuXG4gIGxheWVyUHJvcHMucG9pbnRzLl9kYXRhRGlmZiA9IGZlYXR1cmVzRGlmZi5wb2ludEZlYXR1cmVzICYmICgoKSA9PiBmZWF0dXJlc0RpZmYucG9pbnRGZWF0dXJlcyk7XG5cbiAgbGF5ZXJQcm9wcy5wb2ludHMuZ2V0UG9zaXRpb24gPSBnZXRDb29yZGluYXRlcztcbiAgbGF5ZXJQcm9wcy5saW5lcy5kYXRhID0gbGluZUZlYXR1cmVzO1xuXG4gIGxheWVyUHJvcHMubGluZXMuX2RhdGFEaWZmID0gZmVhdHVyZXNEaWZmLmxpbmVGZWF0dXJlcyAmJiAoKCkgPT4gZmVhdHVyZXNEaWZmLmxpbmVGZWF0dXJlcyk7XG5cbiAgbGF5ZXJQcm9wcy5saW5lcy5nZXRQYXRoID0gZ2V0Q29vcmRpbmF0ZXM7XG4gIGxheWVyUHJvcHMucG9seWdvbnMuZGF0YSA9IHBvbHlnb25GZWF0dXJlcztcblxuICBsYXllclByb3BzLnBvbHlnb25zLl9kYXRhRGlmZiA9IGZlYXR1cmVzRGlmZi5wb2x5Z29uRmVhdHVyZXMgJiYgKCgpID0+IGZlYXR1cmVzRGlmZi5wb2x5Z29uRmVhdHVyZXMpO1xuXG4gIGxheWVyUHJvcHMucG9seWdvbnMuZ2V0UG9seWdvbiA9IGdldENvb3JkaW5hdGVzO1xuICBsYXllclByb3BzLnBvbHlnb25zT3V0bGluZS5kYXRhID0gcG9seWdvbk91dGxpbmVGZWF0dXJlcztcblxuICBsYXllclByb3BzLnBvbHlnb25zT3V0bGluZS5fZGF0YURpZmYgPSBmZWF0dXJlc0RpZmYucG9seWdvbk91dGxpbmVGZWF0dXJlcyAmJiAoKCkgPT4gZmVhdHVyZXNEaWZmLnBvbHlnb25PdXRsaW5lRmVhdHVyZXMpO1xuXG4gIGxheWVyUHJvcHMucG9seWdvbnNPdXRsaW5lLmdldFBhdGggPSBnZXRDb29yZGluYXRlcztcbiAgcmV0dXJuIGxheWVyUHJvcHM7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTGF5ZXJQcm9wc0Zyb21CaW5hcnkoZ2VvanNvbkJpbmFyeSwgZW5jb2RlUGlja2luZ0NvbG9yKSB7XG4gIGNvbnN0IGxheWVyUHJvcHMgPSBjcmVhdGVFbXB0eUxheWVyUHJvcHMoKTtcbiAgY29uc3Qge1xuICAgIHBvaW50cyxcbiAgICBsaW5lcyxcbiAgICBwb2x5Z29uc1xuICB9ID0gZ2VvanNvbkJpbmFyeTtcbiAgY29uc3QgY3VzdG9tUGlja2luZ0NvbG9ycyA9IGNhbGN1bGF0ZVBpY2tpbmdDb2xvcnMoZ2VvanNvbkJpbmFyeSwgZW5jb2RlUGlja2luZ0NvbG9yKTtcbiAgbGF5ZXJQcm9wcy5wb2ludHMuZGF0YSA9IHtcbiAgICBsZW5ndGg6IHBvaW50cy5wb3NpdGlvbnMudmFsdWUubGVuZ3RoIC8gcG9pbnRzLnBvc2l0aW9ucy5zaXplLFxuICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgIGdldFBvc2l0aW9uOiBwb2ludHMucG9zaXRpb25zLFxuICAgICAgaW5zdGFuY2VQaWNraW5nQ29sb3JzOiB7XG4gICAgICAgIHNpemU6IDMsXG4gICAgICAgIHZhbHVlOiBjdXN0b21QaWNraW5nQ29sb3JzLnBvaW50c1xuICAgICAgfVxuICAgIH0sXG4gICAgcHJvcGVydGllczogcG9pbnRzLnByb3BlcnRpZXMsXG4gICAgbnVtZXJpY1Byb3BzOiBwb2ludHMubnVtZXJpY1Byb3BzLFxuICAgIGZlYXR1cmVJZHM6IHBvaW50cy5mZWF0dXJlSWRzXG4gIH07XG4gIGxheWVyUHJvcHMubGluZXMuZGF0YSA9IHtcbiAgICBsZW5ndGg6IGxpbmVzLnBhdGhJbmRpY2VzLnZhbHVlLmxlbmd0aCAtIDEsXG4gICAgc3RhcnRJbmRpY2VzOiBsaW5lcy5wYXRoSW5kaWNlcy52YWx1ZSxcbiAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICBnZXRQYXRoOiBsaW5lcy5wb3NpdGlvbnMsXG4gICAgICBpbnN0YW5jZVBpY2tpbmdDb2xvcnM6IHtcbiAgICAgICAgc2l6ZTogMyxcbiAgICAgICAgdmFsdWU6IGN1c3RvbVBpY2tpbmdDb2xvcnMubGluZXNcbiAgICAgIH1cbiAgICB9LFxuICAgIHByb3BlcnRpZXM6IGxpbmVzLnByb3BlcnRpZXMsXG4gICAgbnVtZXJpY1Byb3BzOiBsaW5lcy5udW1lcmljUHJvcHMsXG4gICAgZmVhdHVyZUlkczogbGluZXMuZmVhdHVyZUlkc1xuICB9O1xuICBsYXllclByb3BzLmxpbmVzLl9wYXRoVHlwZSA9ICdvcGVuJztcbiAgbGF5ZXJQcm9wcy5wb2x5Z29ucy5kYXRhID0ge1xuICAgIGxlbmd0aDogcG9seWdvbnMucG9seWdvbkluZGljZXMudmFsdWUubGVuZ3RoIC0gMSxcbiAgICBzdGFydEluZGljZXM6IHBvbHlnb25zLnBvbHlnb25JbmRpY2VzLnZhbHVlLFxuICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgIGdldFBvbHlnb246IHBvbHlnb25zLnBvc2l0aW9ucyxcbiAgICAgIHBpY2tpbmdDb2xvcnM6IHtcbiAgICAgICAgc2l6ZTogMyxcbiAgICAgICAgdmFsdWU6IGN1c3RvbVBpY2tpbmdDb2xvcnMucG9seWdvbnNcbiAgICAgIH1cbiAgICB9LFxuICAgIHByb3BlcnRpZXM6IHBvbHlnb25zLnByb3BlcnRpZXMsXG4gICAgbnVtZXJpY1Byb3BzOiBwb2x5Z29ucy5udW1lcmljUHJvcHMsXG4gICAgZmVhdHVyZUlkczogcG9seWdvbnMuZmVhdHVyZUlkc1xuICB9O1xuICBsYXllclByb3BzLnBvbHlnb25zLl9ub3JtYWxpemUgPSBmYWxzZTtcblxuICBpZiAocG9seWdvbnMudHJpYW5nbGVzKSB7XG4gICAgbGF5ZXJQcm9wcy5wb2x5Z29ucy5kYXRhLmF0dHJpYnV0ZXMuaW5kaWNlcyA9IHBvbHlnb25zLnRyaWFuZ2xlcy52YWx1ZTtcbiAgfVxuXG4gIGxheWVyUHJvcHMucG9seWdvbnNPdXRsaW5lLmRhdGEgPSB7XG4gICAgbGVuZ3RoOiBwb2x5Z29ucy5wcmltaXRpdmVQb2x5Z29uSW5kaWNlcy52YWx1ZS5sZW5ndGggLSAxLFxuICAgIHN0YXJ0SW5kaWNlczogcG9seWdvbnMucHJpbWl0aXZlUG9seWdvbkluZGljZXMudmFsdWUsXG4gICAgYXR0cmlidXRlczoge1xuICAgICAgZ2V0UGF0aDogcG9seWdvbnMucG9zaXRpb25zLFxuICAgICAgaW5zdGFuY2VQaWNraW5nQ29sb3JzOiB7XG4gICAgICAgIHNpemU6IDMsXG4gICAgICAgIHZhbHVlOiBjdXN0b21QaWNraW5nQ29sb3JzLnBvbHlnb25zXG4gICAgICB9XG4gICAgfSxcbiAgICBwcm9wZXJ0aWVzOiBwb2x5Z29ucy5wcm9wZXJ0aWVzLFxuICAgIG51bWVyaWNQcm9wczogcG9seWdvbnMubnVtZXJpY1Byb3BzLFxuICAgIGZlYXR1cmVJZHM6IHBvbHlnb25zLmZlYXR1cmVJZHNcbiAgfTtcbiAgbGF5ZXJQcm9wcy5wb2x5Z29uc091dGxpbmUuX3BhdGhUeXBlID0gJ29wZW4nO1xuICByZXR1cm4gbGF5ZXJQcm9wcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdlb2pzb24tbGF5ZXItcHJvcHMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GeoJsonLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils */ \"./node_modules/@deck.gl/layers/dist/esm/utils.js\");\n/* harmony import */ var _geojson_binary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./geojson-binary */ \"./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-binary.js\");\n/* harmony import */ var _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sub-layer-map */ \"./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js\");\n/* harmony import */ var _geojson__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geojson */ \"./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js\");\n/* harmony import */ var _geojson_layer_props__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./geojson-layer-props */ \"./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer-props.js\");\n\n\n\n\n\n\nconst defaultProps = { ...Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"getDefaultProps\"])(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POINT_LAYER\"].circle),\n  ...Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"getDefaultProps\"])(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POINT_LAYER\"].icon),\n  ...Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"getDefaultProps\"])(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POINT_LAYER\"].text),\n  ...Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"getDefaultProps\"])(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"LINE_LAYER\"]),\n  ...Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"getDefaultProps\"])(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POLYGON_LAYER\"]),\n  stroked: true,\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  iconAtlas: {\n    type: 'object',\n    value: null\n  },\n  iconMapping: {\n    type: 'object',\n    value: {}\n  },\n  getIcon: {\n    type: 'accessor',\n    value: f => f.properties.icon\n  },\n  getText: {\n    type: 'accessor',\n    value: f => f.properties.text\n  },\n  pointType: 'circle',\n  getRadius: {\n    deprecatedFor: 'getPointRadius'\n  }\n};\nclass GeoJsonLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  initializeState() {\n    this.state = {\n      layerProps: {},\n      features: {}\n    };\n\n    if (this.props.getLineDashArray) {\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"].removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({\n    props,\n    changeFlags\n  }) {\n    if (!changeFlags.dataChanged) {\n      return;\n    }\n\n    const {\n      data\n    } = this.props;\n    const binary = data && 'points' in data && 'polygons' in data && 'lines' in data;\n    this.setState({\n      binary\n    });\n\n    if (binary) {\n      this._updateStateBinary({\n        props,\n        changeFlags\n      });\n    } else {\n      this._updateStateJSON({\n        props,\n        changeFlags\n      });\n    }\n  }\n\n  _updateStateBinary({\n    props,\n    changeFlags\n  }) {\n    const layerProps = Object(_geojson_layer_props__WEBPACK_IMPORTED_MODULE_6__[\"createLayerPropsFromBinary\"])(props.data, this.encodePickingColor);\n    this.setState({\n      layerProps\n    });\n  }\n\n  _updateStateJSON({\n    props,\n    changeFlags\n  }) {\n    const features = Object(_geojson__WEBPACK_IMPORTED_MODULE_5__[\"getGeojsonFeatures\"])(props.data);\n    const wrapFeature = this.getSubLayerRow.bind(this);\n    let newFeatures = {};\n    const featuresDiff = {};\n\n    if (Array.isArray(changeFlags.dataChanged)) {\n      const oldFeatures = this.state.features;\n\n      for (const key in oldFeatures) {\n        newFeatures[key] = oldFeatures[key].slice();\n        featuresDiff[key] = [];\n      }\n\n      for (const dataRange of changeFlags.dataChanged) {\n        const partialFeatures = Object(_geojson__WEBPACK_IMPORTED_MODULE_5__[\"separateGeojsonFeatures\"])(features, wrapFeature, dataRange);\n\n        for (const key in oldFeatures) {\n          featuresDiff[key].push(Object(_utils__WEBPACK_IMPORTED_MODULE_2__[\"replaceInRange\"])({\n            data: newFeatures[key],\n            getIndex: f => f.__source.index,\n            dataRange,\n            replace: partialFeatures[key]\n          }));\n        }\n      }\n    } else {\n      newFeatures = Object(_geojson__WEBPACK_IMPORTED_MODULE_5__[\"separateGeojsonFeatures\"])(features, wrapFeature);\n    }\n\n    const layerProps = Object(_geojson_layer_props__WEBPACK_IMPORTED_MODULE_6__[\"createLayerPropsFromFeatures\"])(newFeatures, featuresDiff);\n    this.setState({\n      features: newFeatures,\n      featuresDiff,\n      layerProps\n    });\n  }\n\n  _updateAutoHighlight(info) {\n    const pointLayerIdPrefix = \"\".concat(this.id, \"-points-\");\n    const sourceIsPoints = info.sourceLayer.id.startsWith(pointLayerIdPrefix);\n\n    for (const layer of this.getSubLayers()) {\n      if (layer.id.startsWith(pointLayerIdPrefix) === sourceIsPoints) {\n        layer.updateAutoHighlight(info);\n      }\n    }\n  }\n\n  _renderPolygonLayer() {\n    const {\n      extruded,\n      wireframe\n    } = this.props;\n    const {\n      layerProps\n    } = this.state;\n    const id = 'polygons-fill';\n    const PolygonFillLayer = this.shouldRenderSubLayer(id, layerProps.polygons.data) && this.getSubLayerClass(id, _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POLYGON_LAYER\"].type);\n\n    if (PolygonFillLayer) {\n      const forwardedProps = Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"forwardProps\"])(this, _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POLYGON_LAYER\"].props);\n      const useLineColor = extruded && wireframe;\n\n      if (!useLineColor) {\n        delete forwardedProps.getLineColor;\n      }\n\n      forwardedProps.updateTriggers.lineColors = useLineColor;\n      return new PolygonFillLayer(forwardedProps, this.getSubLayerProps({\n        id,\n        updateTriggers: forwardedProps.updateTriggers\n      }), layerProps.polygons);\n    }\n\n    return null;\n  }\n\n  _renderLineLayers() {\n    const {\n      extruded,\n      stroked\n    } = this.props;\n    const {\n      layerProps\n    } = this.state;\n    const polygonStrokeLayerId = 'polygons-stroke';\n    const lineStringsLayerId = 'linestrings';\n    const PolygonStrokeLayer = !extruded && stroked && this.shouldRenderSubLayer(polygonStrokeLayerId, layerProps.polygonsOutline.data) && this.getSubLayerClass(polygonStrokeLayerId, _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"LINE_LAYER\"].type);\n    const LineStringsLayer = this.shouldRenderSubLayer(lineStringsLayerId, layerProps.lines.data) && this.getSubLayerClass(lineStringsLayerId, _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"LINE_LAYER\"].type);\n\n    if (PolygonStrokeLayer || LineStringsLayer) {\n      const forwardedProps = Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"forwardProps\"])(this, _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"LINE_LAYER\"].props);\n      return [PolygonStrokeLayer && new PolygonStrokeLayer(forwardedProps, this.getSubLayerProps({\n        id: polygonStrokeLayerId,\n        updateTriggers: forwardedProps.updateTriggers\n      }), layerProps.polygonsOutline), LineStringsLayer && new LineStringsLayer(forwardedProps, this.getSubLayerProps({\n        id: lineStringsLayerId,\n        updateTriggers: forwardedProps.updateTriggers\n      }), layerProps.lines)];\n    }\n\n    return null;\n  }\n\n  _renderPointLayers() {\n    const {\n      pointType\n    } = this.props;\n    const {\n      layerProps,\n      binary\n    } = this.state;\n    let {\n      highlightedObjectIndex\n    } = this.props;\n\n    if (!binary && Number.isFinite(highlightedObjectIndex)) {\n      highlightedObjectIndex = layerProps.points.data.findIndex(d => d.__source.index === highlightedObjectIndex);\n    }\n\n    const types = new Set(pointType.split('+'));\n    const pointLayers = [];\n\n    for (const type of types) {\n      const id = \"points-\".concat(type);\n      const PointLayerMapping = _sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"POINT_LAYER\"][type];\n      const PointsLayer = PointLayerMapping && this.shouldRenderSubLayer(id, layerProps.points.data) && this.getSubLayerClass(id, PointLayerMapping.type);\n\n      if (PointsLayer) {\n        const forwardedProps = Object(_sub_layer_map__WEBPACK_IMPORTED_MODULE_4__[\"forwardProps\"])(this, PointLayerMapping.props);\n        pointLayers.push(new PointsLayer(forwardedProps, this.getSubLayerProps({\n          id,\n          updateTriggers: forwardedProps.updateTriggers,\n          highlightedObjectIndex\n        }), layerProps.points));\n      }\n    }\n\n    return pointLayers;\n  }\n\n  renderLayers() {\n    const {\n      extruded\n    } = this.props;\n\n    const polygonFillLayer = this._renderPolygonLayer();\n\n    const lineLayers = this._renderLineLayers();\n\n    const pointLayers = this._renderPointLayers();\n\n    return [!extruded && polygonFillLayer, lineLayers, pointLayers, extruded && polygonFillLayer];\n  }\n\n  getSubLayerAccessor(accessor) {\n    const {\n      binary\n    } = this.state;\n\n    if (!binary || typeof accessor !== 'function') {\n      return super.getSubLayerAccessor(accessor);\n    }\n\n    return (object, info) => {\n      const {\n        data,\n        index\n      } = info;\n      const feature = Object(_geojson_binary__WEBPACK_IMPORTED_MODULE_3__[\"binaryToFeatureForAccesor\"])(data, index);\n      return accessor(feature, info);\n    };\n  }\n\n}\nGeoJsonLayer.layerName = 'GeoJsonLayer';\nGeoJsonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=geojson-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js ***!
  \************************************************************************/
/*! exports provided: getGeojsonFeatures, separateGeojsonFeatures, validateGeometry */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getGeojsonFeatures\", function() { return getGeojsonFeatures; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"separateGeojsonFeatures\", function() { return separateGeojsonFeatures; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateGeometry\", function() { return validateGeometry; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\nfunction getGeojsonFeatures(geojson) {\n  if (Array.isArray(geojson)) {\n    return geojson;\n  }\n\n  _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(geojson.type, 'GeoJSON does not have type');\n\n  switch (geojson.type) {\n    case 'Feature':\n      return [geojson];\n\n    case 'FeatureCollection':\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(Array.isArray(geojson.features), 'GeoJSON does not have features array');\n      return geojson.features;\n\n    default:\n      return [{\n        geometry: geojson\n      }];\n  }\n}\nfunction separateGeojsonFeatures(features, wrapFeature, dataRange = {}) {\n  const separated = {\n    pointFeatures: [],\n    lineFeatures: [],\n    polygonFeatures: [],\n    polygonOutlineFeatures: []\n  };\n  const {\n    startRow = 0,\n    endRow = features.length\n  } = dataRange;\n\n  for (let featureIndex = startRow; featureIndex < endRow; featureIndex++) {\n    const feature = features[featureIndex];\n    _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(feature && feature.geometry, 'GeoJSON does not have geometry');\n    const {\n      geometry\n    } = feature;\n\n    if (geometry.type === 'GeometryCollection') {\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(Array.isArray(geometry.geometries), 'GeoJSON does not have geometries array');\n      const {\n        geometries\n      } = geometry;\n\n      for (let i = 0; i < geometries.length; i++) {\n        const subGeometry = geometries[i];\n        separateGeometry(subGeometry, separated, wrapFeature, feature, featureIndex);\n      }\n    } else {\n      separateGeometry(geometry, separated, wrapFeature, feature, featureIndex);\n    }\n  }\n\n  return separated;\n}\n\nfunction separateGeometry(geometry, separated, wrapFeature, sourceFeature, sourceFeatureIndex) {\n  const {\n    type,\n    coordinates\n  } = geometry;\n  const {\n    pointFeatures,\n    lineFeatures,\n    polygonFeatures,\n    polygonOutlineFeatures\n  } = separated;\n\n  if (!validateGeometry(type, coordinates)) {\n    _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(\"\".concat(type, \" coordinates are malformed\"))();\n    return;\n  }\n\n  switch (type) {\n    case 'Point':\n      pointFeatures.push(wrapFeature({\n        geometry\n      }, sourceFeature, sourceFeatureIndex));\n      break;\n\n    case 'MultiPoint':\n      coordinates.forEach(point => {\n        pointFeatures.push(wrapFeature({\n          geometry: {\n            type: 'Point',\n            coordinates: point\n          }\n        }, sourceFeature, sourceFeatureIndex));\n      });\n      break;\n\n    case 'LineString':\n      lineFeatures.push(wrapFeature({\n        geometry\n      }, sourceFeature, sourceFeatureIndex));\n      break;\n\n    case 'MultiLineString':\n      coordinates.forEach(path => {\n        lineFeatures.push(wrapFeature({\n          geometry: {\n            type: 'LineString',\n            coordinates: path\n          }\n        }, sourceFeature, sourceFeatureIndex));\n      });\n      break;\n\n    case 'Polygon':\n      polygonFeatures.push(wrapFeature({\n        geometry\n      }, sourceFeature, sourceFeatureIndex));\n      coordinates.forEach(path => {\n        polygonOutlineFeatures.push(wrapFeature({\n          geometry: {\n            type: 'LineString',\n            coordinates: path\n          }\n        }, sourceFeature, sourceFeatureIndex));\n      });\n      break;\n\n    case 'MultiPolygon':\n      coordinates.forEach(polygon => {\n        polygonFeatures.push(wrapFeature({\n          geometry: {\n            type: 'Polygon',\n            coordinates: polygon\n          }\n        }, sourceFeature, sourceFeatureIndex));\n        polygon.forEach(path => {\n          polygonOutlineFeatures.push(wrapFeature({\n            geometry: {\n              type: 'LineString',\n              coordinates: path\n            }\n          }, sourceFeature, sourceFeatureIndex));\n        });\n      });\n      break;\n\n    default:\n  }\n}\n\nconst COORDINATE_NEST_LEVEL = {\n  Point: 1,\n  MultiPoint: 2,\n  LineString: 2,\n  MultiLineString: 3,\n  Polygon: 3,\n  MultiPolygon: 4\n};\nfunction validateGeometry(type, coordinates) {\n  let nestLevel = COORDINATE_NEST_LEVEL[type];\n  _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assert(nestLevel, \"Unknown GeoJSON type \".concat(type));\n\n  while (coordinates && --nestLevel > 0) {\n    coordinates = coordinates[0];\n  }\n\n  return coordinates && Number.isFinite(coordinates[0]);\n}\n//# sourceMappingURL=geojson.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvZ2VvanNvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vZ2VvanNvbi1sYXllci9nZW9qc29uLmpzPzMzZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nIH0gZnJvbSAnQGRlY2suZ2wvY29yZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0R2VvanNvbkZlYXR1cmVzKGdlb2pzb24pIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZ2VvanNvbikpIHtcbiAgICByZXR1cm4gZ2VvanNvbjtcbiAgfVxuXG4gIGxvZy5hc3NlcnQoZ2VvanNvbi50eXBlLCAnR2VvSlNPTiBkb2VzIG5vdCBoYXZlIHR5cGUnKTtcblxuICBzd2l0Y2ggKGdlb2pzb24udHlwZSkge1xuICAgIGNhc2UgJ0ZlYXR1cmUnOlxuICAgICAgcmV0dXJuIFtnZW9qc29uXTtcblxuICAgIGNhc2UgJ0ZlYXR1cmVDb2xsZWN0aW9uJzpcbiAgICAgIGxvZy5hc3NlcnQoQXJyYXkuaXNBcnJheShnZW9qc29uLmZlYXR1cmVzKSwgJ0dlb0pTT04gZG9lcyBub3QgaGF2ZSBmZWF0dXJlcyBhcnJheScpO1xuICAgICAgcmV0dXJuIGdlb2pzb24uZmVhdHVyZXM7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFt7XG4gICAgICAgIGdlb21ldHJ5OiBnZW9qc29uXG4gICAgICB9XTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcGFyYXRlR2VvanNvbkZlYXR1cmVzKGZlYXR1cmVzLCB3cmFwRmVhdHVyZSwgZGF0YVJhbmdlID0ge30pIHtcbiAgY29uc3Qgc2VwYXJhdGVkID0ge1xuICAgIHBvaW50RmVhdHVyZXM6IFtdLFxuICAgIGxpbmVGZWF0dXJlczogW10sXG4gICAgcG9seWdvbkZlYXR1cmVzOiBbXSxcbiAgICBwb2x5Z29uT3V0bGluZUZlYXR1cmVzOiBbXVxuICB9O1xuICBjb25zdCB7XG4gICAgc3RhcnRSb3cgPSAwLFxuICAgIGVuZFJvdyA9IGZlYXR1cmVzLmxlbmd0aFxuICB9ID0gZGF0YVJhbmdlO1xuXG4gIGZvciAobGV0IGZlYXR1cmVJbmRleCA9IHN0YXJ0Um93OyBmZWF0dXJlSW5kZXggPCBlbmRSb3c7IGZlYXR1cmVJbmRleCsrKSB7XG4gICAgY29uc3QgZmVhdHVyZSA9IGZlYXR1cmVzW2ZlYXR1cmVJbmRleF07XG4gICAgbG9nLmFzc2VydChmZWF0dXJlICYmIGZlYXR1cmUuZ2VvbWV0cnksICdHZW9KU09OIGRvZXMgbm90IGhhdmUgZ2VvbWV0cnknKTtcbiAgICBjb25zdCB7XG4gICAgICBnZW9tZXRyeVxuICAgIH0gPSBmZWF0dXJlO1xuXG4gICAgaWYgKGdlb21ldHJ5LnR5cGUgPT09ICdHZW9tZXRyeUNvbGxlY3Rpb24nKSB7XG4gICAgICBsb2cuYXNzZXJ0KEFycmF5LmlzQXJyYXkoZ2VvbWV0cnkuZ2VvbWV0cmllcyksICdHZW9KU09OIGRvZXMgbm90IGhhdmUgZ2VvbWV0cmllcyBhcnJheScpO1xuICAgICAgY29uc3Qge1xuICAgICAgICBnZW9tZXRyaWVzXG4gICAgICB9ID0gZ2VvbWV0cnk7XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ2VvbWV0cmllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBzdWJHZW9tZXRyeSA9IGdlb21ldHJpZXNbaV07XG4gICAgICAgIHNlcGFyYXRlR2VvbWV0cnkoc3ViR2VvbWV0cnksIHNlcGFyYXRlZCwgd3JhcEZlYXR1cmUsIGZlYXR1cmUsIGZlYXR1cmVJbmRleCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNlcGFyYXRlR2VvbWV0cnkoZ2VvbWV0cnksIHNlcGFyYXRlZCwgd3JhcEZlYXR1cmUsIGZlYXR1cmUsIGZlYXR1cmVJbmRleCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHNlcGFyYXRlZDtcbn1cblxuZnVuY3Rpb24gc2VwYXJhdGVHZW9tZXRyeShnZW9tZXRyeSwgc2VwYXJhdGVkLCB3cmFwRmVhdHVyZSwgc291cmNlRmVhdHVyZSwgc291cmNlRmVhdHVyZUluZGV4KSB7XG4gIGNvbnN0IHtcbiAgICB0eXBlLFxuICAgIGNvb3JkaW5hdGVzXG4gIH0gPSBnZW9tZXRyeTtcbiAgY29uc3Qge1xuICAgIHBvaW50RmVhdHVyZXMsXG4gICAgbGluZUZlYXR1cmVzLFxuICAgIHBvbHlnb25GZWF0dXJlcyxcbiAgICBwb2x5Z29uT3V0bGluZUZlYXR1cmVzXG4gIH0gPSBzZXBhcmF0ZWQ7XG5cbiAgaWYgKCF2YWxpZGF0ZUdlb21ldHJ5KHR5cGUsIGNvb3JkaW5hdGVzKSkge1xuICAgIGxvZy53YXJuKFwiXCIuY29uY2F0KHR5cGUsIFwiIGNvb3JkaW5hdGVzIGFyZSBtYWxmb3JtZWRcIikpKCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAnUG9pbnQnOlxuICAgICAgcG9pbnRGZWF0dXJlcy5wdXNoKHdyYXBGZWF0dXJlKHtcbiAgICAgICAgZ2VvbWV0cnlcbiAgICAgIH0sIHNvdXJjZUZlYXR1cmUsIHNvdXJjZUZlYXR1cmVJbmRleCkpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdNdWx0aVBvaW50JzpcbiAgICAgIGNvb3JkaW5hdGVzLmZvckVhY2gocG9pbnQgPT4ge1xuICAgICAgICBwb2ludEZlYXR1cmVzLnB1c2god3JhcEZlYXR1cmUoe1xuICAgICAgICAgIGdlb21ldHJ5OiB7XG4gICAgICAgICAgICB0eXBlOiAnUG9pbnQnLFxuICAgICAgICAgICAgY29vcmRpbmF0ZXM6IHBvaW50XG4gICAgICAgICAgfVxuICAgICAgICB9LCBzb3VyY2VGZWF0dXJlLCBzb3VyY2VGZWF0dXJlSW5kZXgpKTtcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdMaW5lU3RyaW5nJzpcbiAgICAgIGxpbmVGZWF0dXJlcy5wdXNoKHdyYXBGZWF0dXJlKHtcbiAgICAgICAgZ2VvbWV0cnlcbiAgICAgIH0sIHNvdXJjZUZlYXR1cmUsIHNvdXJjZUZlYXR1cmVJbmRleCkpO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdNdWx0aUxpbmVTdHJpbmcnOlxuICAgICAgY29vcmRpbmF0ZXMuZm9yRWFjaChwYXRoID0+IHtcbiAgICAgICAgbGluZUZlYXR1cmVzLnB1c2god3JhcEZlYXR1cmUoe1xuICAgICAgICAgIGdlb21ldHJ5OiB7XG4gICAgICAgICAgICB0eXBlOiAnTGluZVN0cmluZycsXG4gICAgICAgICAgICBjb29yZGluYXRlczogcGF0aFxuICAgICAgICAgIH1cbiAgICAgICAgfSwgc291cmNlRmVhdHVyZSwgc291cmNlRmVhdHVyZUluZGV4KSk7XG4gICAgICB9KTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnUG9seWdvbic6XG4gICAgICBwb2x5Z29uRmVhdHVyZXMucHVzaCh3cmFwRmVhdHVyZSh7XG4gICAgICAgIGdlb21ldHJ5XG4gICAgICB9LCBzb3VyY2VGZWF0dXJlLCBzb3VyY2VGZWF0dXJlSW5kZXgpKTtcbiAgICAgIGNvb3JkaW5hdGVzLmZvckVhY2gocGF0aCA9PiB7XG4gICAgICAgIHBvbHlnb25PdXRsaW5lRmVhdHVyZXMucHVzaCh3cmFwRmVhdHVyZSh7XG4gICAgICAgICAgZ2VvbWV0cnk6IHtcbiAgICAgICAgICAgIHR5cGU6ICdMaW5lU3RyaW5nJyxcbiAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBwYXRoXG4gICAgICAgICAgfVxuICAgICAgICB9LCBzb3VyY2VGZWF0dXJlLCBzb3VyY2VGZWF0dXJlSW5kZXgpKTtcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdNdWx0aVBvbHlnb24nOlxuICAgICAgY29vcmRpbmF0ZXMuZm9yRWFjaChwb2x5Z29uID0+IHtcbiAgICAgICAgcG9seWdvbkZlYXR1cmVzLnB1c2god3JhcEZlYXR1cmUoe1xuICAgICAgICAgIGdlb21ldHJ5OiB7XG4gICAgICAgICAgICB0eXBlOiAnUG9seWdvbicsXG4gICAgICAgICAgICBjb29yZGluYXRlczogcG9seWdvblxuICAgICAgICAgIH1cbiAgICAgICAgfSwgc291cmNlRmVhdHVyZSwgc291cmNlRmVhdHVyZUluZGV4KSk7XG4gICAgICAgIHBvbHlnb24uZm9yRWFjaChwYXRoID0+IHtcbiAgICAgICAgICBwb2x5Z29uT3V0bGluZUZlYXR1cmVzLnB1c2god3JhcEZlYXR1cmUoe1xuICAgICAgICAgICAgZ2VvbWV0cnk6IHtcbiAgICAgICAgICAgICAgdHlwZTogJ0xpbmVTdHJpbmcnLFxuICAgICAgICAgICAgICBjb29yZGluYXRlczogcGF0aFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHNvdXJjZUZlYXR1cmUsIHNvdXJjZUZlYXR1cmVJbmRleCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBkZWZhdWx0OlxuICB9XG59XG5cbmNvbnN0IENPT1JESU5BVEVfTkVTVF9MRVZFTCA9IHtcbiAgUG9pbnQ6IDEsXG4gIE11bHRpUG9pbnQ6IDIsXG4gIExpbmVTdHJpbmc6IDIsXG4gIE11bHRpTGluZVN0cmluZzogMyxcbiAgUG9seWdvbjogMyxcbiAgTXVsdGlQb2x5Z29uOiA0XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlR2VvbWV0cnkodHlwZSwgY29vcmRpbmF0ZXMpIHtcbiAgbGV0IG5lc3RMZXZlbCA9IENPT1JESU5BVEVfTkVTVF9MRVZFTFt0eXBlXTtcbiAgbG9nLmFzc2VydChuZXN0TGV2ZWwsIFwiVW5rbm93biBHZW9KU09OIHR5cGUgXCIuY29uY2F0KHR5cGUpKTtcblxuICB3aGlsZSAoY29vcmRpbmF0ZXMgJiYgLS1uZXN0TGV2ZWwgPiAwKSB7XG4gICAgY29vcmRpbmF0ZXMgPSBjb29yZGluYXRlc1swXTtcbiAgfVxuXG4gIHJldHVybiBjb29yZGluYXRlcyAmJiBOdW1iZXIuaXNGaW5pdGUoY29vcmRpbmF0ZXNbMF0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2VvanNvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js ***!
  \******************************************************************************/
/*! exports provided: POINT_LAYER, LINE_LAYER, POLYGON_LAYER, getDefaultProps, forwardProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POINT_LAYER\", function() { return POINT_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LINE_LAYER\", function() { return LINE_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"POLYGON_LAYER\", function() { return POLYGON_LAYER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDefaultProps\", function() { return getDefaultProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forwardProps\", function() { return forwardProps; });\n/* harmony import */ var _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../icon-layer/icon-layer */ \"./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js\");\n/* harmony import */ var _scatterplot_layer_scatterplot_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scatterplot-layer/scatterplot-layer */ \"./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js\");\n/* harmony import */ var _text_layer_text_layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../text-layer/text-layer */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js\");\n/* harmony import */ var _path_layer_path_layer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../path-layer/path-layer */ \"./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js\");\n/* harmony import */ var _solid_polygon_layer_solid_polygon_layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../solid-polygon-layer/solid-polygon-layer */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js\");\n\n\n\n\n\nconst POINT_LAYER = {\n  circle: {\n    type: _scatterplot_layer_scatterplot_layer__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    props: {\n      filled: 'filled',\n      stroked: 'stroked',\n      lineWidthMaxPixels: 'lineWidthMaxPixels',\n      lineWidthMinPixels: 'lineWidthMinPixels',\n      lineWidthScale: 'lineWidthScale',\n      lineWidthUnits: 'lineWidthUnits',\n      pointRadiusMaxPixels: 'radiusMaxPixels',\n      pointRadiusMinPixels: 'radiusMinPixels',\n      pointRadiusScale: 'radiusScale',\n      pointRadiusUnits: 'radiusUnits',\n      getFillColor: 'getFillColor',\n      getLineColor: 'getLineColor',\n      getLineWidth: 'getLineWidth',\n      getPointRadius: 'getRadius'\n    }\n  },\n  icon: {\n    type: _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    props: {\n      iconAtlas: 'iconAtlas',\n      iconMapping: 'iconMapping',\n      iconSizeMaxPixels: 'sizeMaxPixels',\n      iconSizeMinPixels: 'sizeMinPixels',\n      iconSizeScale: 'sizeScale',\n      iconSizeUnits: 'sizeUnits',\n      getIcon: 'getIcon',\n      getIconAngle: 'getAngle',\n      getIconColor: 'getColor',\n      getIconPixelOffset: 'getPixelOffset',\n      getIconSize: 'getSize'\n    }\n  },\n  text: {\n    type: _text_layer_text_layer__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    props: {\n      textSizeMaxPixels: 'sizeMaxPixels',\n      textSizeMinPixels: 'sizeMinPixels',\n      textSizeScale: 'sizeScale',\n      textSizeUnits: 'sizeUnits',\n      textBackground: 'background',\n      textBackgroundPadding: 'backgroundPadding',\n      textFontFamily: 'fontFamily',\n      textFontWeight: 'fontWeight',\n      textLineHeight: 'lineHeight',\n      textMaxWidth: 'maxWidth',\n      textOutlineColor: 'outlineColor',\n      textOutlineWidth: 'outlineWidth',\n      textWordBreak: 'wordBreak',\n      textCharacterSet: 'characterSet',\n      getText: 'getText',\n      getTextAngle: 'getAngle',\n      getTextColor: 'getColor',\n      getTextPixelOffset: 'getPixelOffset',\n      getTextSize: 'getSize',\n      getTextAnchor: 'getTextAnchor',\n      getTextAlignmentBaseline: 'getAlignmentBaseline',\n      getTextBackgroundColor: 'getBackgroundColor',\n      getTextBorderColor: 'getBorderColor',\n      getTextBorderWidth: 'getBorderWidth'\n    }\n  }\n};\nconst LINE_LAYER = {\n  type: _path_layer_path_layer__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  props: {\n    lineWidthUnits: 'widthUnits',\n    lineWidthScale: 'widthScale',\n    lineWidthMinPixels: 'widthMinPixels',\n    lineWidthMaxPixels: 'widthMaxPixels',\n    lineJointRounded: 'jointRounded',\n    lineCapRounded: 'capRounded',\n    lineMiterLimit: 'miterLimit',\n    getLineColor: 'getColor',\n    getLineWidth: 'getWidth'\n  }\n};\nconst POLYGON_LAYER = {\n  type: _solid_polygon_layer_solid_polygon_layer__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  props: {\n    extruded: 'extruded',\n    filled: 'filled',\n    wireframe: 'wireframe',\n    elevationScale: 'elevationScale',\n    material: 'material',\n    getElevation: 'getElevation',\n    getFillColor: 'getFillColor',\n    getLineColor: 'getLineColor'\n  }\n};\nfunction getDefaultProps({\n  type,\n  props\n}) {\n  const result = {};\n\n  for (const key in props) {\n    result[key] = type.defaultProps[props[key]];\n  }\n\n  return result;\n}\nfunction forwardProps(layer, mapping) {\n  const {\n    transitions,\n    updateTriggers\n  } = layer.props;\n  const result = {\n    updateTriggers: {},\n    transitions: transitions && {\n      getPosition: transitions.geometry\n    }\n  };\n\n  for (const sourceKey in mapping) {\n    const targetKey = mapping[sourceKey];\n    let value = layer.props[sourceKey];\n\n    if (sourceKey.startsWith('get')) {\n      value = layer.getSubLayerAccessor(value);\n      result.updateTriggers[targetKey] = updateTriggers[sourceKey];\n\n      if (transitions) {\n        result.transitions[targetKey] = transitions[sourceKey];\n      }\n    }\n\n    result[targetKey] = value;\n  }\n\n  return result;\n}\n//# sourceMappingURL=sub-layer-map.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2dlb2pzb24tbGF5ZXIvc3ViLWxheWVyLW1hcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vZ2VvanNvbi1sYXllci9zdWItbGF5ZXItbWFwLmpzP2U5N2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEljb25MYXllciBmcm9tICcuLi9pY29uLWxheWVyL2ljb24tbGF5ZXInO1xuaW1wb3J0IFNjYXR0ZXJwbG90TGF5ZXIgZnJvbSAnLi4vc2NhdHRlcnBsb3QtbGF5ZXIvc2NhdHRlcnBsb3QtbGF5ZXInO1xuaW1wb3J0IFRleHRMYXllciBmcm9tICcuLi90ZXh0LWxheWVyL3RleHQtbGF5ZXInO1xuaW1wb3J0IFBhdGhMYXllciBmcm9tICcuLi9wYXRoLWxheWVyL3BhdGgtbGF5ZXInO1xuaW1wb3J0IFNvbGlkUG9seWdvbkxheWVyIGZyb20gJy4uL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllcic7XG5leHBvcnQgY29uc3QgUE9JTlRfTEFZRVIgPSB7XG4gIGNpcmNsZToge1xuICAgIHR5cGU6IFNjYXR0ZXJwbG90TGF5ZXIsXG4gICAgcHJvcHM6IHtcbiAgICAgIGZpbGxlZDogJ2ZpbGxlZCcsXG4gICAgICBzdHJva2VkOiAnc3Ryb2tlZCcsXG4gICAgICBsaW5lV2lkdGhNYXhQaXhlbHM6ICdsaW5lV2lkdGhNYXhQaXhlbHMnLFxuICAgICAgbGluZVdpZHRoTWluUGl4ZWxzOiAnbGluZVdpZHRoTWluUGl4ZWxzJyxcbiAgICAgIGxpbmVXaWR0aFNjYWxlOiAnbGluZVdpZHRoU2NhbGUnLFxuICAgICAgbGluZVdpZHRoVW5pdHM6ICdsaW5lV2lkdGhVbml0cycsXG4gICAgICBwb2ludFJhZGl1c01heFBpeGVsczogJ3JhZGl1c01heFBpeGVscycsXG4gICAgICBwb2ludFJhZGl1c01pblBpeGVsczogJ3JhZGl1c01pblBpeGVscycsXG4gICAgICBwb2ludFJhZGl1c1NjYWxlOiAncmFkaXVzU2NhbGUnLFxuICAgICAgcG9pbnRSYWRpdXNVbml0czogJ3JhZGl1c1VuaXRzJyxcbiAgICAgIGdldEZpbGxDb2xvcjogJ2dldEZpbGxDb2xvcicsXG4gICAgICBnZXRMaW5lQ29sb3I6ICdnZXRMaW5lQ29sb3InLFxuICAgICAgZ2V0TGluZVdpZHRoOiAnZ2V0TGluZVdpZHRoJyxcbiAgICAgIGdldFBvaW50UmFkaXVzOiAnZ2V0UmFkaXVzJ1xuICAgIH1cbiAgfSxcbiAgaWNvbjoge1xuICAgIHR5cGU6IEljb25MYXllcixcbiAgICBwcm9wczoge1xuICAgICAgaWNvbkF0bGFzOiAnaWNvbkF0bGFzJyxcbiAgICAgIGljb25NYXBwaW5nOiAnaWNvbk1hcHBpbmcnLFxuICAgICAgaWNvblNpemVNYXhQaXhlbHM6ICdzaXplTWF4UGl4ZWxzJyxcbiAgICAgIGljb25TaXplTWluUGl4ZWxzOiAnc2l6ZU1pblBpeGVscycsXG4gICAgICBpY29uU2l6ZVNjYWxlOiAnc2l6ZVNjYWxlJyxcbiAgICAgIGljb25TaXplVW5pdHM6ICdzaXplVW5pdHMnLFxuICAgICAgZ2V0SWNvbjogJ2dldEljb24nLFxuICAgICAgZ2V0SWNvbkFuZ2xlOiAnZ2V0QW5nbGUnLFxuICAgICAgZ2V0SWNvbkNvbG9yOiAnZ2V0Q29sb3InLFxuICAgICAgZ2V0SWNvblBpeGVsT2Zmc2V0OiAnZ2V0UGl4ZWxPZmZzZXQnLFxuICAgICAgZ2V0SWNvblNpemU6ICdnZXRTaXplJ1xuICAgIH1cbiAgfSxcbiAgdGV4dDoge1xuICAgIHR5cGU6IFRleHRMYXllcixcbiAgICBwcm9wczoge1xuICAgICAgdGV4dFNpemVNYXhQaXhlbHM6ICdzaXplTWF4UGl4ZWxzJyxcbiAgICAgIHRleHRTaXplTWluUGl4ZWxzOiAnc2l6ZU1pblBpeGVscycsXG4gICAgICB0ZXh0U2l6ZVNjYWxlOiAnc2l6ZVNjYWxlJyxcbiAgICAgIHRleHRTaXplVW5pdHM6ICdzaXplVW5pdHMnLFxuICAgICAgdGV4dEJhY2tncm91bmQ6ICdiYWNrZ3JvdW5kJyxcbiAgICAgIHRleHRCYWNrZ3JvdW5kUGFkZGluZzogJ2JhY2tncm91bmRQYWRkaW5nJyxcbiAgICAgIHRleHRGb250RmFtaWx5OiAnZm9udEZhbWlseScsXG4gICAgICB0ZXh0Rm9udFdlaWdodDogJ2ZvbnRXZWlnaHQnLFxuICAgICAgdGV4dExpbmVIZWlnaHQ6ICdsaW5lSGVpZ2h0JyxcbiAgICAgIHRleHRNYXhXaWR0aDogJ21heFdpZHRoJyxcbiAgICAgIHRleHRPdXRsaW5lQ29sb3I6ICdvdXRsaW5lQ29sb3InLFxuICAgICAgdGV4dE91dGxpbmVXaWR0aDogJ291dGxpbmVXaWR0aCcsXG4gICAgICB0ZXh0V29yZEJyZWFrOiAnd29yZEJyZWFrJyxcbiAgICAgIHRleHRDaGFyYWN0ZXJTZXQ6ICdjaGFyYWN0ZXJTZXQnLFxuICAgICAgZ2V0VGV4dDogJ2dldFRleHQnLFxuICAgICAgZ2V0VGV4dEFuZ2xlOiAnZ2V0QW5nbGUnLFxuICAgICAgZ2V0VGV4dENvbG9yOiAnZ2V0Q29sb3InLFxuICAgICAgZ2V0VGV4dFBpeGVsT2Zmc2V0OiAnZ2V0UGl4ZWxPZmZzZXQnLFxuICAgICAgZ2V0VGV4dFNpemU6ICdnZXRTaXplJyxcbiAgICAgIGdldFRleHRBbmNob3I6ICdnZXRUZXh0QW5jaG9yJyxcbiAgICAgIGdldFRleHRBbGlnbm1lbnRCYXNlbGluZTogJ2dldEFsaWdubWVudEJhc2VsaW5lJyxcbiAgICAgIGdldFRleHRCYWNrZ3JvdW5kQ29sb3I6ICdnZXRCYWNrZ3JvdW5kQ29sb3InLFxuICAgICAgZ2V0VGV4dEJvcmRlckNvbG9yOiAnZ2V0Qm9yZGVyQ29sb3InLFxuICAgICAgZ2V0VGV4dEJvcmRlcldpZHRoOiAnZ2V0Qm9yZGVyV2lkdGgnXG4gICAgfVxuICB9XG59O1xuZXhwb3J0IGNvbnN0IExJTkVfTEFZRVIgPSB7XG4gIHR5cGU6IFBhdGhMYXllcixcbiAgcHJvcHM6IHtcbiAgICBsaW5lV2lkdGhVbml0czogJ3dpZHRoVW5pdHMnLFxuICAgIGxpbmVXaWR0aFNjYWxlOiAnd2lkdGhTY2FsZScsXG4gICAgbGluZVdpZHRoTWluUGl4ZWxzOiAnd2lkdGhNaW5QaXhlbHMnLFxuICAgIGxpbmVXaWR0aE1heFBpeGVsczogJ3dpZHRoTWF4UGl4ZWxzJyxcbiAgICBsaW5lSm9pbnRSb3VuZGVkOiAnam9pbnRSb3VuZGVkJyxcbiAgICBsaW5lQ2FwUm91bmRlZDogJ2NhcFJvdW5kZWQnLFxuICAgIGxpbmVNaXRlckxpbWl0OiAnbWl0ZXJMaW1pdCcsXG4gICAgZ2V0TGluZUNvbG9yOiAnZ2V0Q29sb3InLFxuICAgIGdldExpbmVXaWR0aDogJ2dldFdpZHRoJ1xuICB9XG59O1xuZXhwb3J0IGNvbnN0IFBPTFlHT05fTEFZRVIgPSB7XG4gIHR5cGU6IFNvbGlkUG9seWdvbkxheWVyLFxuICBwcm9wczoge1xuICAgIGV4dHJ1ZGVkOiAnZXh0cnVkZWQnLFxuICAgIGZpbGxlZDogJ2ZpbGxlZCcsXG4gICAgd2lyZWZyYW1lOiAnd2lyZWZyYW1lJyxcbiAgICBlbGV2YXRpb25TY2FsZTogJ2VsZXZhdGlvblNjYWxlJyxcbiAgICBtYXRlcmlhbDogJ21hdGVyaWFsJyxcbiAgICBnZXRFbGV2YXRpb246ICdnZXRFbGV2YXRpb24nLFxuICAgIGdldEZpbGxDb2xvcjogJ2dldEZpbGxDb2xvcicsXG4gICAgZ2V0TGluZUNvbG9yOiAnZ2V0TGluZUNvbG9yJ1xuICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRQcm9wcyh7XG4gIHR5cGUsXG4gIHByb3BzXG59KSB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9O1xuXG4gIGZvciAoY29uc3Qga2V5IGluIHByb3BzKSB7XG4gICAgcmVzdWx0W2tleV0gPSB0eXBlLmRlZmF1bHRQcm9wc1twcm9wc1trZXldXTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZFByb3BzKGxheWVyLCBtYXBwaW5nKSB7XG4gIGNvbnN0IHtcbiAgICB0cmFuc2l0aW9ucyxcbiAgICB1cGRhdGVUcmlnZ2Vyc1xuICB9ID0gbGF5ZXIucHJvcHM7XG4gIGNvbnN0IHJlc3VsdCA9IHtcbiAgICB1cGRhdGVUcmlnZ2Vyczoge30sXG4gICAgdHJhbnNpdGlvbnM6IHRyYW5zaXRpb25zICYmIHtcbiAgICAgIGdldFBvc2l0aW9uOiB0cmFuc2l0aW9ucy5nZW9tZXRyeVxuICAgIH1cbiAgfTtcblxuICBmb3IgKGNvbnN0IHNvdXJjZUtleSBpbiBtYXBwaW5nKSB7XG4gICAgY29uc3QgdGFyZ2V0S2V5ID0gbWFwcGluZ1tzb3VyY2VLZXldO1xuICAgIGxldCB2YWx1ZSA9IGxheWVyLnByb3BzW3NvdXJjZUtleV07XG5cbiAgICBpZiAoc291cmNlS2V5LnN0YXJ0c1dpdGgoJ2dldCcpKSB7XG4gICAgICB2YWx1ZSA9IGxheWVyLmdldFN1YkxheWVyQWNjZXNzb3IodmFsdWUpO1xuICAgICAgcmVzdWx0LnVwZGF0ZVRyaWdnZXJzW3RhcmdldEtleV0gPSB1cGRhdGVUcmlnZ2Vyc1tzb3VyY2VLZXldO1xuXG4gICAgICBpZiAodHJhbnNpdGlvbnMpIHtcbiAgICAgICAgcmVzdWx0LnRyYW5zaXRpb25zW3RhcmdldEtleV0gPSB0cmFuc2l0aW9uc1tzb3VyY2VLZXldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlc3VsdFt0YXJnZXRLZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3ViLWxheWVyLW1hcC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/geojson-layer/sub-layer-map.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float alphaCutoff;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec4 texColor = texture2D(iconsTexture, vTextureCoords);\\n  vec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\\n  float a = texColor.a * opacity * vColor.a;\\n\\n  if (a < alphaCutoff) {\\n    discard;\\n  }\\n\\n  gl_FragColor = vec4(color, a);\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\");\n//# sourceMappingURL=icon-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2ljb24tbGF5ZXIvaWNvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9pY29uLWxheWVyL2ljb24tbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcz9jOTJjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBpY29uLWxheWVyLWZyYWdtZW50LXNoYWRlclxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5cXG51bmlmb3JtIGZsb2F0IG9wYWNpdHk7XFxudW5pZm9ybSBzYW1wbGVyMkQgaWNvbnNUZXh0dXJlO1xcbnVuaWZvcm0gZmxvYXQgYWxwaGFDdXRvZmY7XFxuXFxudmFyeWluZyBmbG9hdCB2Q29sb3JNb2RlO1xcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxudmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmRzO1xcbnZhcnlpbmcgdmVjMiB1djtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkudXYgPSB1djtcXG5cXG4gIHZlYzQgdGV4Q29sb3IgPSB0ZXh0dXJlMkQoaWNvbnNUZXh0dXJlLCB2VGV4dHVyZUNvb3Jkcyk7XFxuICB2ZWMzIGNvbG9yID0gbWl4KHRleENvbG9yLnJnYiwgdkNvbG9yLnJnYiwgdkNvbG9yTW9kZSk7XFxuICBmbG9hdCBhID0gdGV4Q29sb3IuYSAqIG9wYWNpdHkgKiB2Q29sb3IuYTtcXG5cXG4gIGlmIChhIDwgYWxwaGFDdXRvZmYpIHtcXG4gICAgZGlzY2FyZDtcXG4gIH1cXG5cXG4gIGdsX0ZyYWdDb2xvciA9IHZlYzQoY29sb3IsIGEpO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUihnbF9GcmFnQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pY29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME icon-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\nattribute vec4 instanceIconFrames;\\nattribute float instanceColorModes;\\nattribute vec2 instanceOffsets;\\nattribute vec2 instancePixelOffset;\\n\\nuniform float sizeScale;\\nuniform vec2 iconsTextureDim;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform bool billboard;\\n\\nvarying float vColorMode;\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = angle * PI / 180.0;\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n\\n  vec2 iconSize = instanceIconFrames.zw;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale), \\n    sizeMinPixels, sizeMaxPixels\\n  );\\n  float instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\\n  vec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\\n  pixelOffset += instancePixelOffset;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position); \\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  vTextureCoords = mix(\\n    instanceIconFrames.xy,\\n    instanceIconFrames.xy + iconSize,\\n    (positions.xy + 1.0) / 2.0\\n  ) / iconsTextureDim;\\n\\n  vColor = instanceColors;\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n\\n  vColorMode = instanceColorModes;\\n}\\n\");\n//# sourceMappingURL=icon-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL2ljb24tbGF5ZXIvaWNvbi1sYXllci12ZXJ0ZXguZ2xzbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vaWNvbi1sYXllci9pY29uLWxheWVyLXZlcnRleC5nbHNsLmpzPzY3NTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIFNIQURFUl9OQU1FIGljb24tbGF5ZXItdmVydGV4LXNoYWRlclxcblxcbmF0dHJpYnV0ZSB2ZWMyIHBvc2l0aW9ucztcXG5cXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9uczY0TG93O1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZVNpemVzO1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUFuZ2xlcztcXG5hdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUNvbG9ycztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VJY29uRnJhbWVzO1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUNvbG9yTW9kZXM7XFxuYXR0cmlidXRlIHZlYzIgaW5zdGFuY2VPZmZzZXRzO1xcbmF0dHJpYnV0ZSB2ZWMyIGluc3RhbmNlUGl4ZWxPZmZzZXQ7XFxuXFxudW5pZm9ybSBmbG9hdCBzaXplU2NhbGU7XFxudW5pZm9ybSB2ZWMyIGljb25zVGV4dHVyZURpbTtcXG51bmlmb3JtIGZsb2F0IHNpemVNaW5QaXhlbHM7XFxudW5pZm9ybSBmbG9hdCBzaXplTWF4UGl4ZWxzO1xcbnVuaWZvcm0gYm9vbCBiaWxsYm9hcmQ7XFxuXFxudmFyeWluZyBmbG9hdCB2Q29sb3JNb2RlO1xcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxudmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmRzO1xcbnZhcnlpbmcgdmVjMiB1djtcXG5cXG52ZWMyIHJvdGF0ZV9ieV9hbmdsZSh2ZWMyIHZlcnRleCwgZmxvYXQgYW5nbGUpIHtcXG4gIGZsb2F0IGFuZ2xlX3JhZGlhbiA9IGFuZ2xlICogUEkgLyAxODAuMDtcXG4gIGZsb2F0IGNvc19hbmdsZSA9IGNvcyhhbmdsZV9yYWRpYW4pO1xcbiAgZmxvYXQgc2luX2FuZ2xlID0gc2luKGFuZ2xlX3JhZGlhbik7XFxuICBtYXQyIHJvdGF0aW9uTWF0cml4ID0gbWF0Mihjb3NfYW5nbGUsIC1zaW5fYW5nbGUsIHNpbl9hbmdsZSwgY29zX2FuZ2xlKTtcXG4gIHJldHVybiByb3RhdGlvbk1hdHJpeCAqIHZlcnRleDtcXG59XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdlb21ldHJ5LndvcmxkUG9zaXRpb24gPSBpbnN0YW5jZVBvc2l0aW9ucztcXG4gIGdlb21ldHJ5LnV2ID0gcG9zaXRpb25zO1xcbiAgZ2VvbWV0cnkucGlja2luZ0NvbG9yID0gaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xcbiAgdXYgPSBwb3NpdGlvbnM7XFxuXFxuICB2ZWMyIGljb25TaXplID0gaW5zdGFuY2VJY29uRnJhbWVzLnp3O1xcbiAgZmxvYXQgc2l6ZVBpeGVscyA9IGNsYW1wKFxcbiAgICBwcm9qZWN0X3NpemVfdG9fcGl4ZWwoaW5zdGFuY2VTaXplcyAqIHNpemVTY2FsZSksIFxcbiAgICBzaXplTWluUGl4ZWxzLCBzaXplTWF4UGl4ZWxzXFxuICApO1xcbiAgZmxvYXQgaW5zdGFuY2VTY2FsZSA9IGljb25TaXplLnkgPT0gMC4wID8gMC4wIDogc2l6ZVBpeGVscyAvIGljb25TaXplLnk7XFxuICB2ZWMyIHBpeGVsT2Zmc2V0ID0gcG9zaXRpb25zIC8gMi4wICogaWNvblNpemUgKyBpbnN0YW5jZU9mZnNldHM7XFxuICBwaXhlbE9mZnNldCA9IHJvdGF0ZV9ieV9hbmdsZShwaXhlbE9mZnNldCwgaW5zdGFuY2VBbmdsZXMpICogaW5zdGFuY2VTY2FsZTtcXG4gIHBpeGVsT2Zmc2V0ICs9IGluc3RhbmNlUGl4ZWxPZmZzZXQ7XFxuICBwaXhlbE9mZnNldC55ICo9IC0xLjA7XFxuXFxuICBpZiAoYmlsbGJvYXJkKSAge1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlUG9zaXRpb25zLCBpbnN0YW5jZVBvc2l0aW9uczY0TG93LCB2ZWMzKDAuMCksIGdlb21ldHJ5LnBvc2l0aW9uKTtcXG4gICAgdmVjMyBvZmZzZXQgPSB2ZWMzKHBpeGVsT2Zmc2V0LCAwLjApO1xcbiAgICBERUNLR0xfRklMVEVSX1NJWkUob2Zmc2V0LCBnZW9tZXRyeSk7XFxuICAgIGdsX1Bvc2l0aW9uLnh5ICs9IHByb2plY3RfcGl4ZWxfc2l6ZV90b19jbGlwc3BhY2Uob2Zmc2V0Lnh5KTtcXG5cXG4gIH0gZWxzZSB7XFxuICAgIHZlYzMgb2Zmc2V0X2NvbW1vbiA9IHZlYzMocHJvamVjdF9waXhlbF9zaXplKHBpeGVsT2Zmc2V0KSwgMC4wKTtcXG4gICAgREVDS0dMX0ZJTFRFUl9TSVpFKG9mZnNldF9jb21tb24sIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVBvc2l0aW9ucywgaW5zdGFuY2VQb3NpdGlvbnM2NExvdywgb2Zmc2V0X2NvbW1vbiwgZ2VvbWV0cnkucG9zaXRpb24pOyBcXG4gIH1cXG4gIERFQ0tHTF9GSUxURVJfR0xfUE9TSVRJT04oZ2xfUG9zaXRpb24sIGdlb21ldHJ5KTtcXG5cXG4gIHZUZXh0dXJlQ29vcmRzID0gbWl4KFxcbiAgICBpbnN0YW5jZUljb25GcmFtZXMueHksXFxuICAgIGluc3RhbmNlSWNvbkZyYW1lcy54eSArIGljb25TaXplLFxcbiAgICAocG9zaXRpb25zLnh5ICsgMS4wKSAvIDIuMFxcbiAgKSAvIGljb25zVGV4dHVyZURpbTtcXG5cXG4gIHZDb2xvciA9IGluc3RhbmNlQ29sb3JzO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2Q29sb3IsIGdlb21ldHJ5KTtcXG5cXG4gIHZDb2xvck1vZGUgPSBpbnN0YW5jZUNvbG9yTW9kZXM7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWNvbi1sYXllci12ZXJ0ZXguZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IconLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _icon_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icon-layer-vertex.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-vertex.glsl.js\");\n/* harmony import */ var _icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./icon-layer-fragment.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer-fragment.glsl.js\");\n/* harmony import */ var _icon_manager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./icon-manager */ \"./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js\");\n\n\n\n\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  iconAtlas: {\n    type: 'image',\n    value: null,\n    async: true\n  },\n  iconMapping: {\n    type: 'object',\n    value: {},\n    async: true\n  },\n  sizeScale: {\n    type: 'number',\n    value: 1,\n    min: 0\n  },\n  billboard: true,\n  sizeUnits: 'pixels',\n  sizeMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  sizeMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  alphaCutoff: {\n    type: 'number',\n    value: 0.05,\n    min: 0,\n    max: 1\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getIcon: {\n    type: 'accessor',\n    value: x => x.icon\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  onIconError: {\n    type: 'function',\n    value: null,\n    compare: false,\n    optional: true\n  }\n};\nclass IconLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  getShaders() {\n    return super.getShaders({\n      vs: _icon_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n      fs: _icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n      modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]\n    });\n  }\n\n  initializeState() {\n    this.state = {\n      iconManager: new _icon_manager__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this.context.gl, {\n        onUpdate: this._onUpdate.bind(this),\n        onError: this._onError.bind(this)\n      })\n    };\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIcon',\n        transform: this.getInstanceOffset\n      },\n      instanceIconFrames: {\n        size: 4,\n        accessor: 'getIcon',\n        transform: this.getInstanceIconFrame\n      },\n      instanceColorModes: {\n        size: 1,\n        type: 5121,\n        accessor: 'getIcon',\n        transform: this.getInstanceColorMode\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState({\n    oldProps,\n    props,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n    const attributeManager = this.getAttributeManager();\n    const {\n      iconAtlas,\n      iconMapping,\n      data,\n      getIcon\n    } = props;\n    const {\n      iconManager\n    } = this.state;\n    iconManager.setProps({\n      loadOptions: props.loadOptions\n    });\n    let iconMappingChanged = false;\n    const prePacked = iconAtlas || this.internalState.isAsyncPropLoading('iconAtlas');\n\n    if (prePacked) {\n      if (oldProps.iconAtlas !== props.iconAtlas) {\n        iconManager.setProps({\n          iconAtlas,\n          autoPacking: false\n        });\n      }\n\n      if (oldProps.iconMapping !== props.iconMapping) {\n        iconManager.setProps({\n          iconMapping\n        });\n        iconMappingChanged = true;\n      }\n    } else {\n      iconManager.setProps({\n        autoPacking: true\n      });\n    }\n\n    if (changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getIcon)) {\n      iconManager.setProps({\n        data,\n        getIcon\n      });\n    }\n\n    if (iconMappingChanged) {\n      attributeManager.invalidate('instanceOffsets');\n      attributeManager.invalidate('instanceIconFrames');\n      attributeManager.invalidate('instanceColorModes');\n    }\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.state.iconManager.isLoaded;\n  }\n\n  finalizeState() {\n    super.finalizeState();\n    this.state.iconManager.finalize();\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      sizeScale,\n      sizeMinPixels,\n      sizeMaxPixels,\n      sizeUnits,\n      billboard,\n      alphaCutoff\n    } = this.props;\n    const {\n      iconManager\n    } = this.state;\n    const {\n      viewport\n    } = this.context;\n    const iconsTexture = iconManager.getTexture();\n\n    if (iconsTexture) {\n      this.state.model.setUniforms(uniforms).setUniforms({\n        iconsTexture,\n        iconsTextureDim: [iconsTexture.width, iconsTexture.height],\n        sizeScale: sizeScale * (sizeUnits === 'pixels' ? viewport.metersPerPixel : 1),\n        sizeMinPixels,\n        sizeMaxPixels,\n        billboard,\n        alphaCutoff\n      }).draw();\n    }\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, -1, 1, 1, 1, 1, -1];\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"](gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n        drawMode: 6,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  _onUpdate() {\n    this.setNeedsRedraw();\n  }\n\n  _onError(evt) {\n    const {\n      onIconError\n    } = this.getCurrentLayer().props;\n\n    if (onIconError) {\n      onIconError(evt);\n    } else {\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(evt.error)();\n    }\n  }\n\n  getInstanceOffset(icon) {\n    const rect = this.state.iconManager.getIconMapping(icon);\n    return [rect.width / 2 - rect.anchorX || 0, rect.height / 2 - rect.anchorY || 0];\n  }\n\n  getInstanceColorMode(icon) {\n    const mapping = this.state.iconManager.getIconMapping(icon);\n    return mapping.mask ? 1 : 0;\n  }\n\n  getInstanceIconFrame(icon) {\n    const rect = this.state.iconManager.getIconMapping(icon);\n    return [rect.x || 0, rect.y || 0, rect.width || 0, rect.height || 0];\n  }\n\n}\nIconLayer.layerName = 'IconLayer';\nIconLayer.defaultProps = defaultProps;\n//# sourceMappingURL=icon-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js ***!
  \**************************************************************************/
/*! exports provided: buildMapping, getDiffIcons, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildMapping\", function() { return buildMapping; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDiffIcons\", function() { return getDiffIcons; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return IconManager; });\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/webgl-utils/texture-utils.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/copy-and-blit.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/classes/texture-2d.js\");\n/* harmony import */ var _loaders_gl_images__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @loaders.gl/images */ \"./node_modules/@loaders.gl/images/dist/esm/image-loader.js\");\n/* harmony import */ var _loaders_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @loaders.gl/core */ \"./node_modules/@loaders.gl/core/dist/esm/lib/api/load.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n\n\n\n\nconst DEFAULT_CANVAS_WIDTH = 1024;\nconst DEFAULT_BUFFER = 4;\n\nconst noop = () => {};\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [10241]: 9987,\n  [10240]: 9729,\n  [10242]: 33071,\n  [10243]: 33071\n};\n\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\n\nfunction resizeImage(ctx, imageData, width, height) {\n  if (width === imageData.width && height === imageData.height) {\n    return imageData;\n  }\n\n  ctx.canvas.height = height;\n  ctx.canvas.width = width;\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.drawImage(imageData, 0, 0, imageData.width, imageData.height, 0, 0, width, height);\n  return ctx.canvas;\n}\n\nfunction getIconId(icon) {\n  return icon && (icon.id || icon.url);\n}\n\nfunction resizeTexture(gl, texture, width, height) {\n  const oldWidth = texture.width;\n  const oldHeight = texture.height;\n  const newTexture = Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"cloneTextureFrom\"])(texture, {\n    width,\n    height\n  });\n  Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"copyToTexture\"])(texture, newTexture, {\n    targetY: 0,\n    width: oldWidth,\n    height: oldHeight\n  });\n  texture.delete();\n  return newTexture;\n}\n\nfunction buildRowMapping(mapping, columns, yOffset) {\n  for (let i = 0; i < columns.length; i++) {\n    const {\n      icon,\n      xOffset\n    } = columns[i];\n    const id = getIconId(icon);\n    mapping[id] = { ...icon,\n      x: xOffset,\n      y: yOffset\n    };\n  }\n}\n\nfunction buildMapping({\n  icons,\n  buffer,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0,\n  rowHeight = 0,\n  canvasWidth\n}) {\n  let columns = [];\n\n  for (let i = 0; i < icons.length; i++) {\n    const icon = icons[i];\n    const id = getIconId(icon);\n\n    if (!mapping[id]) {\n      const {\n        height,\n        width\n      } = icon;\n\n      if (xOffset + width + buffer > canvasWidth) {\n        buildRowMapping(mapping, columns, yOffset);\n        xOffset = 0;\n        yOffset = rowHeight + yOffset + buffer;\n        rowHeight = 0;\n        columns = [];\n      }\n\n      columns.push({\n        icon,\n        xOffset\n      });\n      xOffset = xOffset + width + buffer;\n      rowHeight = Math.max(rowHeight, height);\n    }\n  }\n\n  if (columns.length > 0) {\n    buildRowMapping(mapping, columns, yOffset);\n  }\n\n  return {\n    mapping,\n    rowHeight,\n    xOffset,\n    yOffset,\n    canvasWidth,\n    canvasHeight: nextPowOfTwo(rowHeight + yOffset + buffer)\n  };\n}\nfunction getDiffIcons(data, getIcon, cachedIcons) {\n  if (!data || !getIcon) {\n    return null;\n  }\n\n  cachedIcons = cachedIcons || {};\n  const icons = {};\n  const {\n    iterable,\n    objectInfo\n  } = Object(_deck_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"createIterable\"])(data);\n\n  for (const object of iterable) {\n    objectInfo.index++;\n    const icon = getIcon(object, objectInfo);\n    const id = getIconId(icon);\n\n    if (!icon) {\n      throw new Error('Icon is missing.');\n    }\n\n    if (!icon.url) {\n      throw new Error('Icon url is missing.');\n    }\n\n    if (!icons[id] && (!cachedIcons[id] || icon.url !== cachedIcons[id].url)) {\n      icons[id] = { ...icon,\n        source: object,\n        sourceIndex: objectInfo.index\n      };\n    }\n  }\n\n  return icons;\n}\nclass IconManager {\n  constructor(gl, {\n    onUpdate = noop,\n    onError = noop\n  }) {\n    this.gl = gl;\n    this.onUpdate = onUpdate;\n    this.onError = onError;\n    this._loadOptions = null;\n    this._getIcon = null;\n    this._texture = null;\n    this._externalTexture = null;\n    this._mapping = {};\n    this._pendingCount = 0;\n    this._autoPacking = false;\n    this._xOffset = 0;\n    this._yOffset = 0;\n    this._rowHeight = 0;\n    this._buffer = DEFAULT_BUFFER;\n    this._canvasWidth = DEFAULT_CANVAS_WIDTH;\n    this._canvasHeight = 0;\n    this._canvas = null;\n  }\n\n  finalize() {\n    var _this$_texture;\n\n    (_this$_texture = this._texture) === null || _this$_texture === void 0 ? void 0 : _this$_texture.delete();\n  }\n\n  getTexture() {\n    return this._texture || this._externalTexture;\n  }\n\n  getIconMapping(icon) {\n    const id = this._autoPacking ? getIconId(icon) : icon;\n    return this._mapping[id] || {};\n  }\n\n  setProps({\n    loadOptions,\n    autoPacking,\n    iconAtlas,\n    iconMapping,\n    data,\n    getIcon\n  }) {\n    if (loadOptions) {\n      this._loadOptions = loadOptions;\n    }\n\n    if (autoPacking !== undefined) {\n      this._autoPacking = autoPacking;\n    }\n\n    if (getIcon) {\n      this._getIcon = getIcon;\n    }\n\n    if (iconMapping) {\n      this._mapping = iconMapping;\n    }\n\n    if (iconAtlas) {\n      this._updateIconAtlas(iconAtlas);\n    }\n\n    if (this._autoPacking && (data || getIcon) && typeof document !== 'undefined') {\n      this._canvas = this._canvas || document.createElement('canvas');\n\n      this._updateAutoPacking(data);\n    }\n  }\n\n  get isLoaded() {\n    return this._pendingCount === 0;\n  }\n\n  _updateIconAtlas(iconAtlas) {\n    var _this$_texture2;\n\n    (_this$_texture2 = this._texture) === null || _this$_texture2 === void 0 ? void 0 : _this$_texture2.delete();\n    this._texture = null;\n    this._externalTexture = iconAtlas;\n    this.onUpdate();\n  }\n\n  _updateAutoPacking(data) {\n    const icons = Object.values(getDiffIcons(data, this._getIcon, this._mapping) || {});\n\n    if (icons.length > 0) {\n      const {\n        mapping,\n        xOffset,\n        yOffset,\n        rowHeight,\n        canvasHeight\n      } = buildMapping({\n        icons,\n        buffer: this._buffer,\n        canvasWidth: this._canvasWidth,\n        mapping: this._mapping,\n        rowHeight: this._rowHeight,\n        xOffset: this._xOffset,\n        yOffset: this._yOffset\n      });\n      this._rowHeight = rowHeight;\n      this._mapping = mapping;\n      this._xOffset = xOffset;\n      this._yOffset = yOffset;\n      this._canvasHeight = canvasHeight;\n\n      if (!this._texture) {\n        this._texture = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.gl, {\n          width: this._canvasWidth,\n          height: this._canvasHeight,\n          parameters: DEFAULT_TEXTURE_PARAMETERS\n        });\n      }\n\n      if (this._texture.height !== this._canvasHeight) {\n        this._texture = resizeTexture(this.gl, this._texture, this._canvasWidth, this._canvasHeight);\n      }\n\n      this.onUpdate();\n\n      this._loadIcons(icons);\n    }\n  }\n\n  _loadIcons(icons) {\n    const ctx = this._canvas.getContext('2d');\n\n    for (const icon of icons) {\n      this._pendingCount++;\n      Object(_loaders_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"load\"])(icon.url, _loaders_gl_images__WEBPACK_IMPORTED_MODULE_3__[\"ImageLoader\"], this._loadOptions).then(imageData => {\n        const id = getIconId(icon);\n        const {\n          x,\n          y,\n          width,\n          height\n        } = this._mapping[id];\n        const data = resizeImage(ctx, imageData, width, height);\n\n        this._texture.setSubImageData({\n          data,\n          x,\n          y,\n          width,\n          height\n        });\n\n        this._texture.generateMipmap();\n\n        this.onUpdate();\n      }).catch(error => {\n        this.onError({\n          url: icon.url,\n          source: icon.source,\n          sourceIndex: icon.sourceIndex,\n          loadOptions: this._loadOptions,\n          error\n        });\n      }).finally(() => {\n        this._pendingCount--;\n      });\n    }\n  }\n\n}\n//# sourceMappingURL=icon-manager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-manager.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME path-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float miterLimit;\\n\\nvarying vec4 vColor;\\nvarying vec2 vCornerOffset;\\nvarying float vMiterLength;\\nvarying vec2 vPathPosition;\\nvarying float vPathLength;\\nvarying float vJointType;\\n\\nvoid main(void) {\\n  geometry.uv = vPathPosition;\\n\\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\\n    if (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\\n      discard;\\n    }\\n    if (vJointType < 0.5 && vMiterLength > miterLimit + 1.0) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = vColor;\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\");\n//# sourceMappingURL=path-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3BhdGgtbGF5ZXIvcGF0aC1sYXllci1mcmFnbWVudC5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9wYXRoLWxheWVyL3BhdGgtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcz82MmUzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBwYXRoLWxheWVyLWZyYWdtZW50LXNoYWRlclxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5cXG51bmlmb3JtIGZsb2F0IG1pdGVyTGltaXQ7XFxuXFxudmFyeWluZyB2ZWM0IHZDb2xvcjtcXG52YXJ5aW5nIHZlYzIgdkNvcm5lck9mZnNldDtcXG52YXJ5aW5nIGZsb2F0IHZNaXRlckxlbmd0aDtcXG52YXJ5aW5nIHZlYzIgdlBhdGhQb3NpdGlvbjtcXG52YXJ5aW5nIGZsb2F0IHZQYXRoTGVuZ3RoO1xcbnZhcnlpbmcgZmxvYXQgdkpvaW50VHlwZTtcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkudXYgPSB2UGF0aFBvc2l0aW9uO1xcblxcbiAgaWYgKHZQYXRoUG9zaXRpb24ueSA8IDAuMCB8fCB2UGF0aFBvc2l0aW9uLnkgPiB2UGF0aExlbmd0aCkge1xcbiAgICBpZiAodkpvaW50VHlwZSA+IDAuNSAmJiBsZW5ndGgodkNvcm5lck9mZnNldCkgPiAxLjApIHtcXG4gICAgICBkaXNjYXJkO1xcbiAgICB9XFxuICAgIGlmICh2Sm9pbnRUeXBlIDwgMC41ICYmIHZNaXRlckxlbmd0aCA+IG1pdGVyTGltaXQgKyAxLjApIHtcXG4gICAgICBkaXNjYXJkO1xcbiAgICB9XFxuICB9XFxuICBnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XFxuXFxuICBERUNLR0xfRklMVEVSX0NPTE9SKGdsX0ZyYWdDb2xvciwgZ2VvbWV0cnkpO1xcbn1cXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME path-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute float instanceTypes;\\nattribute vec3 instanceStartPositions;\\nattribute vec3 instanceEndPositions;\\nattribute vec3 instanceLeftPositions;\\nattribute vec3 instanceRightPositions;\\nattribute vec3 instanceLeftPositions64Low;\\nattribute vec3 instanceStartPositions64Low;\\nattribute vec3 instanceEndPositions64Low;\\nattribute vec3 instanceRightPositions64Low;\\nattribute float instanceStrokeWidths;\\nattribute vec4 instanceColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float widthScale;\\nuniform float widthMinPixels;\\nuniform float widthMaxPixels;\\nuniform float jointType;\\nuniform float capType;\\nuniform float miterLimit;\\nuniform bool billboard;\\n\\nuniform float opacity;\\n\\nvarying vec4 vColor;\\nvarying vec2 vCornerOffset;\\nvarying float vMiterLength;\\nvarying vec2 vPathPosition;\\nvarying float vPathLength;\\nvarying float vJointType;\\n\\nconst float EPSILON = 0.001;\\nconst vec3 ZERO_OFFSET = vec3(0.0);\\n\\nfloat flipIfTrue(bool flag) {\\n  return -(float(flag) * 2. - 1.);\\n}\\nvec3 lineJoin(\\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\\n  vec2 width\\n) {\\n  bool isEnd = positions.x > 0.0;\\n  float sideOfPath = positions.y;\\n  float isJoint = float(sideOfPath == 0.0);\\n\\n  vec3 deltaA3 = (currPoint - prevPoint);\\n  vec3 deltaB3 = (nextPoint - currPoint);\\n\\n  mat3 rotationMatrix;\\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\\n  if (needsRotation) {\\n    deltaA3 = deltaA3 * rotationMatrix;\\n    deltaB3 = deltaB3 * rotationMatrix;\\n  }\\n  vec2 deltaA = deltaA3.xy / width;\\n  vec2 deltaB = deltaB3.xy / width;\\n\\n  float lenA = length(deltaA);\\n  float lenB = length(deltaB);\\n\\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\\n\\n  vec2 perpA = vec2(-dirA.y, dirA.x);\\n  vec2 perpB = vec2(-dirB.y, dirB.x);\\n  vec2 tangent = dirA + dirB;\\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\\n  vec2 dir = isEnd ? dirA : dirB;\\n  vec2 perp = isEnd ? perpA : perpB;\\n  float L = isEnd ? lenA : lenB;\\n  float sinHalfA = abs(dot(miterVec, perp));\\n  float cosHalfA = abs(dot(dirA, miterVec));\\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\\n  float cornerPosition = sideOfPath * turnDirection;\\n\\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\\n  miterSize = mix(\\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\\n    miterSize,\\n    step(0.0, cornerPosition)\\n  );\\n\\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\\n    * (sideOfPath + isJoint * turnDirection);\\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\\n  bool isCap = isStartCap || isEndCap;\\n  if (isCap) {\\n    offsetVec = mix(perp * sideOfPath, dir * capType * 4.0 * flipIfTrue(isStartCap), isJoint);\\n    vJointType = capType;\\n  } else {\\n    vJointType = jointType;\\n  }\\n  vPathLength = L;\\n  vCornerOffset = offsetVec;\\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\\n  vMiterLength = isCap ? isJoint : vMiterLength;\\n\\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\\n  vPathPosition = vec2(\\n    dot(offsetFromStartOfPath, perp),\\n    dot(offsetFromStartOfPath, dir)\\n  );\\n  geometry.uv = vPathPosition;\\n\\n  float isValid = step(instanceTypes, 3.5);\\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\\n\\n  if (needsRotation) {\\n    offset = rotationMatrix * offset;\\n  }\\n  return currPoint + offset;\\n}\\nvoid clipLine(inout vec4 position, vec4 refPosition) {\\n  if (position.w < EPSILON) {\\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\\n    position = refPosition + (position - refPosition) * r;\\n  }\\n}\\n\\nvoid main() {\\n  geometry.worldPosition = instanceStartPositions;\\n  geometry.worldPositionAlt = instanceEndPositions;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  vec2 widthPixels = vec2(clamp(project_size_to_pixel(instanceStrokeWidths * widthScale),\\n    widthMinPixels, widthMaxPixels) / 2.0);\\n  vec3 width;\\n\\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\\n\\n  float isEnd = positions.x;\\n\\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\\n\\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\\n\\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\\n\\n  if (billboard) {\\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\\n\\n    clipLine(prevPositionScreen, currPositionScreen);\\n    clipLine(nextPositionScreen, currPositionScreen);\\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\\n\\n    width = vec3(widthPixels, 0.0);\\n    DECKGL_FILTER_SIZE(width, geometry);\\n\\n    vec3 pos = lineJoin(\\n      prevPositionScreen.xyz / prevPositionScreen.w,\\n      currPositionScreen.xyz / currPositionScreen.w,\\n      nextPositionScreen.xyz / nextPositionScreen.w,\\n      project_pixel_size_to_clipspace(width.xy)\\n    );\\n\\n    gl_Position = vec4(pos * currPositionScreen.w, currPositionScreen.w);\\n  } else {\\n    prevPosition = project_position(prevPosition, prevPosition64Low);\\n    currPosition = project_position(currPosition, currPosition64Low);\\n    nextPosition = project_position(nextPosition, nextPosition64Low);\\n\\n    width = vec3(project_pixel_size(widthPixels), 0.0);\\n    DECKGL_FILTER_SIZE(width, geometry);\\n\\n    vec4 pos = vec4(\\n      lineJoin(prevPosition, currPosition, nextPosition, width.xy),\\n      1.0);\\n    geometry.position = pos;\\n    gl_Position = project_common_position_to_clipspace(pos);\\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\");\n//# sourceMappingURL=path-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PathLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _path_tesselator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./path-tesselator */ \"./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js\");\n/* harmony import */ var _path_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./path-layer-vertex.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-vertex.glsl.js\");\n/* harmony import */ var _path_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./path-layer-fragment.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer-fragment.glsl.js\");\n\n\n\n\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  widthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  widthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  jointRounded: false,\n  capRounded: false,\n  miterLimit: {\n    type: 'number',\n    min: 0,\n    value: 4\n  },\n  billboard: false,\n  _pathType: null,\n  getPath: {\n    type: 'accessor',\n    value: object => object.path\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  rounded: {\n    deprecatedFor: ['jointRounded', 'capRounded']\n  }\n};\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\nclass PathLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  getShaders() {\n    return super.getShaders({\n      vs: _path_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n      fs: _path_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n      modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]\n    });\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      positions: {\n        size: 3,\n        vertexOffset: 1,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            vertexOffset: 0\n          },\n          instanceStartPositions: {\n            vertexOffset: 1\n          },\n          instanceEndPositions: {\n            vertexOffset: 2\n          },\n          instanceRightPositions: {\n            vertexOffset: 3\n          }\n        }\n      },\n      instanceTypes: {\n        size: 1,\n        type: 5121,\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: 5121,\n        accessor: (object, {\n          index,\n          target: value\n        }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n      }\n    });\n    this.setState({\n      pathTesselator: new _path_tesselator__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n        fp64: this.use64bitPositions()\n      })\n    });\n\n    if (this.props.getDashArray && !this.props.extensions.length) {\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"].removed('getDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({\n    oldProps,\n    props,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n    const attributeManager = this.getAttributeManager();\n    const geometryChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath);\n\n    if (geometryChanged) {\n      const {\n        pathTesselator\n      } = this.state;\n      const buffers = props.data.attributes || {};\n      pathTesselator.updateGeometry({\n        data: props.data,\n        geometryBuffer: buffers.getPath,\n        buffers,\n        normalize: !props._pathType,\n        loop: props._pathType === 'loop',\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        resolution: this.context.viewport.resolution,\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        startIndices: pathTesselator.vertexStarts\n      });\n\n      if (!changeFlags.dataChanged) {\n        attributeManager.invalidateAll();\n      }\n    }\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      attributeManager.invalidateAll();\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {\n      index\n    } = info;\n    const {\n      data\n    } = this.props;\n\n    if (data[0] && data[0].__source) {\n      info.object = data.find(d => d.__source.index === index);\n    }\n\n    return info;\n  }\n\n  disablePickingIndex(objectIndex) {\n    const {\n      data\n    } = this.props;\n\n    if (data[0] && data[0].__source) {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].__source.index === objectIndex) {\n          this._disablePickingIndex(i);\n        }\n      }\n    } else {\n      this._disablePickingIndex(objectIndex);\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      jointRounded,\n      capRounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels\n    } = this.props;\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      jointType: Number(jointRounded),\n      capType: Number(capRounded),\n      billboard,\n      widthScale: widthScale * widthMultiplier,\n      miterLimit,\n      widthMinPixels,\n      widthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const SEGMENT_INDICES = [0, 1, 2, 1, 4, 2, 1, 3, 4, 3, 5, 4];\n    const SEGMENT_POSITIONS = [0, 0, 0, -1, 0, 1, 1, -1, 1, 1, 1, 0];\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"](gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"default\"]({\n        drawMode: 4,\n        attributes: {\n          indices: new Uint16Array(SEGMENT_INDICES),\n          positions: {\n            value: new Float32Array(SEGMENT_POSITIONS),\n            size: 2\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n  calculatePositions(attribute) {\n    const {\n      pathTesselator\n    } = this.state;\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('positions');\n  }\n\n  calculateSegmentTypes(attribute) {\n    const {\n      pathTesselator\n    } = this.state;\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n\n}\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n//# sourceMappingURL=path-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/path-layer/path-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PathTesselator; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path */ \"./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js\");\n\n\nconst START_CAP = 1;\nconst END_CAP = 2;\nconst INVALID = 4;\nclass PathTesselator extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(opts) {\n    super({ ...opts,\n      attributes: {\n        positions: {\n          size: 3,\n          padding: 18,\n          initialize: true,\n          type: opts.fp64 ? Float64Array : Float32Array\n        },\n        segmentTypes: {\n          size: 1,\n          type: Uint8ClampedArray\n        }\n      }\n    });\n  }\n\n  getGeometryFromBuffer(buffer) {\n    if (this.normalize) {\n      return super.getGeometryFromBuffer(buffer);\n    }\n\n    return () => null;\n  }\n\n  normalizeGeometry(path) {\n    if (this.normalize) {\n      return Object(_path__WEBPACK_IMPORTED_MODULE_1__[\"normalizePath\"])(path, this.positionSize, this.opts.resolution, this.opts.wrapLongitude);\n    }\n\n    return path;\n  }\n\n  get(attributeName) {\n    return this.attributes[attributeName];\n  }\n\n  getGeometrySize(path) {\n    if (Array.isArray(path[0])) {\n      let size = 0;\n\n      for (const subPath of path) {\n        size += this.getGeometrySize(subPath);\n      }\n\n      return size;\n    }\n\n    const numPoints = this.getPathLength(path);\n\n    if (numPoints < 2) {\n      return 0;\n    }\n\n    if (this.isClosed(path)) {\n      return numPoints < 3 ? 0 : numPoints + 2;\n    }\n\n    return numPoints;\n  }\n\n  updateGeometryAttributes(path, context) {\n    if (context.geometrySize === 0) {\n      return;\n    }\n\n    if (path && Array.isArray(path[0])) {\n      for (const subPath of path) {\n        const geometrySize = this.getGeometrySize(subPath);\n        context.geometrySize = geometrySize;\n        this.updateGeometryAttributes(subPath, context);\n        context.vertexStart += geometrySize;\n      }\n    } else {\n      this._updateSegmentTypes(path, context);\n\n      this._updatePositions(path, context);\n    }\n  }\n\n  _updateSegmentTypes(path, context) {\n    const {\n      segmentTypes\n    } = this.attributes;\n    const isPathClosed = this.isClosed(path);\n    const {\n      vertexStart,\n      geometrySize\n    } = context;\n    segmentTypes.fill(0, vertexStart, vertexStart + geometrySize);\n\n    if (isPathClosed) {\n      segmentTypes[vertexStart] = INVALID;\n      segmentTypes[vertexStart + geometrySize - 2] = INVALID;\n    } else {\n      segmentTypes[vertexStart] += START_CAP;\n      segmentTypes[vertexStart + geometrySize - 2] += END_CAP;\n    }\n\n    segmentTypes[vertexStart + geometrySize - 1] = INVALID;\n  }\n\n  _updatePositions(path, context) {\n    const {\n      positions\n    } = this.attributes;\n\n    if (!positions) {\n      return;\n    }\n\n    const {\n      vertexStart,\n      geometrySize\n    } = context;\n    const p = new Array(3);\n\n    for (let i = vertexStart, ptIndex = 0; ptIndex < geometrySize; i++, ptIndex++) {\n      this.getPointOnPath(path, ptIndex, p);\n      positions[i * 3] = p[0];\n      positions[i * 3 + 1] = p[1];\n      positions[i * 3 + 2] = p[2];\n    }\n  }\n\n  getPathLength(path) {\n    return path.length / this.positionSize;\n  }\n\n  getPointOnPath(path, index, target = []) {\n    const {\n      positionSize\n    } = this;\n\n    if (index * positionSize >= path.length) {\n      index += 1 - path.length / positionSize;\n    }\n\n    const i = index * positionSize;\n    target[0] = path[i];\n    target[1] = path[i + 1];\n    target[2] = positionSize === 3 && path[i + 2] || 0;\n    return target;\n  }\n\n  isClosed(path) {\n    if (!this.normalize) {\n      return this.opts.loop;\n    }\n\n    const {\n      positionSize\n    } = this;\n    const lastPointIndex = path.length - positionSize;\n    return path[0] === path[lastPointIndex] && path[1] === path[lastPointIndex + 1] && (positionSize === 2 || path[2] === path[lastPointIndex + 2]);\n  }\n\n}\n//# sourceMappingURL=path-tesselator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3BhdGgtbGF5ZXIvcGF0aC10ZXNzZWxhdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9wYXRoLWxheWVyL3BhdGgtdGVzc2VsYXRvci5qcz8zNmMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlc3NlbGF0b3IgfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCB7IG5vcm1hbGl6ZVBhdGggfSBmcm9tICcuL3BhdGgnO1xuY29uc3QgU1RBUlRfQ0FQID0gMTtcbmNvbnN0IEVORF9DQVAgPSAyO1xuY29uc3QgSU5WQUxJRCA9IDQ7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXRoVGVzc2VsYXRvciBleHRlbmRzIFRlc3NlbGF0b3Ige1xuICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgc3VwZXIoeyAuLi5vcHRzLFxuICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICBwb3NpdGlvbnM6IHtcbiAgICAgICAgICBzaXplOiAzLFxuICAgICAgICAgIHBhZGRpbmc6IDE4LFxuICAgICAgICAgIGluaXRpYWxpemU6IHRydWUsXG4gICAgICAgICAgdHlwZTogb3B0cy5mcDY0ID8gRmxvYXQ2NEFycmF5IDogRmxvYXQzMkFycmF5XG4gICAgICAgIH0sXG4gICAgICAgIHNlZ21lbnRUeXBlczoge1xuICAgICAgICAgIHNpemU6IDEsXG4gICAgICAgICAgdHlwZTogVWludDhDbGFtcGVkQXJyYXlcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZ2V0R2VvbWV0cnlGcm9tQnVmZmVyKGJ1ZmZlcikge1xuICAgIGlmICh0aGlzLm5vcm1hbGl6ZSkge1xuICAgICAgcmV0dXJuIHN1cGVyLmdldEdlb21ldHJ5RnJvbUJ1ZmZlcihidWZmZXIpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiBudWxsO1xuICB9XG5cbiAgbm9ybWFsaXplR2VvbWV0cnkocGF0aCkge1xuICAgIGlmICh0aGlzLm5vcm1hbGl6ZSkge1xuICAgICAgcmV0dXJuIG5vcm1hbGl6ZVBhdGgocGF0aCwgdGhpcy5wb3NpdGlvblNpemUsIHRoaXMub3B0cy5yZXNvbHV0aW9uLCB0aGlzLm9wdHMud3JhcExvbmdpdHVkZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cblxuICBnZXQoYXR0cmlidXRlTmFtZSkge1xuICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV07XG4gIH1cblxuICBnZXRHZW9tZXRyeVNpemUocGF0aCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHBhdGhbMF0pKSB7XG4gICAgICBsZXQgc2l6ZSA9IDA7XG5cbiAgICAgIGZvciAoY29uc3Qgc3ViUGF0aCBvZiBwYXRoKSB7XG4gICAgICAgIHNpemUgKz0gdGhpcy5nZXRHZW9tZXRyeVNpemUoc3ViUGF0aCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzaXplO1xuICAgIH1cblxuICAgIGNvbnN0IG51bVBvaW50cyA9IHRoaXMuZ2V0UGF0aExlbmd0aChwYXRoKTtcblxuICAgIGlmIChudW1Qb2ludHMgPCAyKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc0Nsb3NlZChwYXRoKSkge1xuICAgICAgcmV0dXJuIG51bVBvaW50cyA8IDMgPyAwIDogbnVtUG9pbnRzICsgMjtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVtUG9pbnRzO1xuICB9XG5cbiAgdXBkYXRlR2VvbWV0cnlBdHRyaWJ1dGVzKHBhdGgsIGNvbnRleHQpIHtcbiAgICBpZiAoY29udGV4dC5nZW9tZXRyeVNpemUgPT09IDApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAocGF0aCAmJiBBcnJheS5pc0FycmF5KHBhdGhbMF0pKSB7XG4gICAgICBmb3IgKGNvbnN0IHN1YlBhdGggb2YgcGF0aCkge1xuICAgICAgICBjb25zdCBnZW9tZXRyeVNpemUgPSB0aGlzLmdldEdlb21ldHJ5U2l6ZShzdWJQYXRoKTtcbiAgICAgICAgY29udGV4dC5nZW9tZXRyeVNpemUgPSBnZW9tZXRyeVNpemU7XG4gICAgICAgIHRoaXMudXBkYXRlR2VvbWV0cnlBdHRyaWJ1dGVzKHN1YlBhdGgsIGNvbnRleHQpO1xuICAgICAgICBjb250ZXh0LnZlcnRleFN0YXJ0ICs9IGdlb21ldHJ5U2l6ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fdXBkYXRlU2VnbWVudFR5cGVzKHBhdGgsIGNvbnRleHQpO1xuXG4gICAgICB0aGlzLl91cGRhdGVQb3NpdGlvbnMocGF0aCwgY29udGV4dCk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZVNlZ21lbnRUeXBlcyhwYXRoLCBjb250ZXh0KSB7XG4gICAgY29uc3Qge1xuICAgICAgc2VnbWVudFR5cGVzXG4gICAgfSA9IHRoaXMuYXR0cmlidXRlcztcbiAgICBjb25zdCBpc1BhdGhDbG9zZWQgPSB0aGlzLmlzQ2xvc2VkKHBhdGgpO1xuICAgIGNvbnN0IHtcbiAgICAgIHZlcnRleFN0YXJ0LFxuICAgICAgZ2VvbWV0cnlTaXplXG4gICAgfSA9IGNvbnRleHQ7XG4gICAgc2VnbWVudFR5cGVzLmZpbGwoMCwgdmVydGV4U3RhcnQsIHZlcnRleFN0YXJ0ICsgZ2VvbWV0cnlTaXplKTtcblxuICAgIGlmIChpc1BhdGhDbG9zZWQpIHtcbiAgICAgIHNlZ21lbnRUeXBlc1t2ZXJ0ZXhTdGFydF0gPSBJTlZBTElEO1xuICAgICAgc2VnbWVudFR5cGVzW3ZlcnRleFN0YXJ0ICsgZ2VvbWV0cnlTaXplIC0gMl0gPSBJTlZBTElEO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWdtZW50VHlwZXNbdmVydGV4U3RhcnRdICs9IFNUQVJUX0NBUDtcbiAgICAgIHNlZ21lbnRUeXBlc1t2ZXJ0ZXhTdGFydCArIGdlb21ldHJ5U2l6ZSAtIDJdICs9IEVORF9DQVA7XG4gICAgfVxuXG4gICAgc2VnbWVudFR5cGVzW3ZlcnRleFN0YXJ0ICsgZ2VvbWV0cnlTaXplIC0gMV0gPSBJTlZBTElEO1xuICB9XG5cbiAgX3VwZGF0ZVBvc2l0aW9ucyhwYXRoLCBjb250ZXh0KSB7XG4gICAgY29uc3Qge1xuICAgICAgcG9zaXRpb25zXG4gICAgfSA9IHRoaXMuYXR0cmlidXRlcztcblxuICAgIGlmICghcG9zaXRpb25zKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgdmVydGV4U3RhcnQsXG4gICAgICBnZW9tZXRyeVNpemVcbiAgICB9ID0gY29udGV4dDtcbiAgICBjb25zdCBwID0gbmV3IEFycmF5KDMpO1xuXG4gICAgZm9yIChsZXQgaSA9IHZlcnRleFN0YXJ0LCBwdEluZGV4ID0gMDsgcHRJbmRleCA8IGdlb21ldHJ5U2l6ZTsgaSsrLCBwdEluZGV4KyspIHtcbiAgICAgIHRoaXMuZ2V0UG9pbnRPblBhdGgocGF0aCwgcHRJbmRleCwgcCk7XG4gICAgICBwb3NpdGlvbnNbaSAqIDNdID0gcFswXTtcbiAgICAgIHBvc2l0aW9uc1tpICogMyArIDFdID0gcFsxXTtcbiAgICAgIHBvc2l0aW9uc1tpICogMyArIDJdID0gcFsyXTtcbiAgICB9XG4gIH1cblxuICBnZXRQYXRoTGVuZ3RoKHBhdGgpIHtcbiAgICByZXR1cm4gcGF0aC5sZW5ndGggLyB0aGlzLnBvc2l0aW9uU2l6ZTtcbiAgfVxuXG4gIGdldFBvaW50T25QYXRoKHBhdGgsIGluZGV4LCB0YXJnZXQgPSBbXSkge1xuICAgIGNvbnN0IHtcbiAgICAgIHBvc2l0aW9uU2l6ZVxuICAgIH0gPSB0aGlzO1xuXG4gICAgaWYgKGluZGV4ICogcG9zaXRpb25TaXplID49IHBhdGgubGVuZ3RoKSB7XG4gICAgICBpbmRleCArPSAxIC0gcGF0aC5sZW5ndGggLyBwb3NpdGlvblNpemU7XG4gICAgfVxuXG4gICAgY29uc3QgaSA9IGluZGV4ICogcG9zaXRpb25TaXplO1xuICAgIHRhcmdldFswXSA9IHBhdGhbaV07XG4gICAgdGFyZ2V0WzFdID0gcGF0aFtpICsgMV07XG4gICAgdGFyZ2V0WzJdID0gcG9zaXRpb25TaXplID09PSAzICYmIHBhdGhbaSArIDJdIHx8IDA7XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfVxuXG4gIGlzQ2xvc2VkKHBhdGgpIHtcbiAgICBpZiAoIXRoaXMubm9ybWFsaXplKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRzLmxvb3A7XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgcG9zaXRpb25TaXplXG4gICAgfSA9IHRoaXM7XG4gICAgY29uc3QgbGFzdFBvaW50SW5kZXggPSBwYXRoLmxlbmd0aCAtIHBvc2l0aW9uU2l6ZTtcbiAgICByZXR1cm4gcGF0aFswXSA9PT0gcGF0aFtsYXN0UG9pbnRJbmRleF0gJiYgcGF0aFsxXSA9PT0gcGF0aFtsYXN0UG9pbnRJbmRleCArIDFdICYmIChwb3NpdGlvblNpemUgPT09IDIgfHwgcGF0aFsyXSA9PT0gcGF0aFtsYXN0UG9pbnRJbmRleCArIDJdKTtcbiAgfVxuXG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLXRlc3NlbGF0b3IuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/path-layer/path-tesselator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js":
/*!******************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js ***!
  \******************************************************************/
/*! exports provided: normalizePath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizePath\", function() { return normalizePath; });\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/polygon */ \"./node_modules/@math.gl/polygon/dist/esm/index.js\");\n\nfunction normalizePath(path, size, gridResolution, wrapLongitude) {\n  let flatPath = path;\n\n  if (Array.isArray(path[0])) {\n    const length = path.length * size;\n    flatPath = new Array(length);\n\n    for (let i = 0; i < path.length; i++) {\n      for (let j = 0; j < size; j++) {\n        flatPath[i * size + j] = path[i][j] || 0;\n      }\n    }\n  }\n\n  if (gridResolution) {\n    return Object(_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__[\"cutPolylineByGrid\"])(flatPath, {\n      size,\n      gridResolution\n    });\n  }\n\n  if (wrapLongitude) {\n    return Object(_math_gl_polygon__WEBPACK_IMPORTED_MODULE_0__[\"cutPolylineByMercatorBounds\"])(flatPath, {\n      size\n    });\n  }\n\n  return flatPath;\n}\n//# sourceMappingURL=path.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3BhdGgtbGF5ZXIvcGF0aC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vcGF0aC1sYXllci9wYXRoLmpzP2E3ODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3V0UG9seWxpbmVCeUdyaWQsIGN1dFBvbHlsaW5lQnlNZXJjYXRvckJvdW5kcyB9IGZyb20gJ0BtYXRoLmdsL3BvbHlnb24nO1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVBhdGgocGF0aCwgc2l6ZSwgZ3JpZFJlc29sdXRpb24sIHdyYXBMb25naXR1ZGUpIHtcbiAgbGV0IGZsYXRQYXRoID0gcGF0aDtcblxuICBpZiAoQXJyYXkuaXNBcnJheShwYXRoWzBdKSkge1xuICAgIGNvbnN0IGxlbmd0aCA9IHBhdGgubGVuZ3RoICogc2l6ZTtcbiAgICBmbGF0UGF0aCA9IG5ldyBBcnJheShsZW5ndGgpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgICBmbGF0UGF0aFtpICogc2l6ZSArIGpdID0gcGF0aFtpXVtqXSB8fCAwO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChncmlkUmVzb2x1dGlvbikge1xuICAgIHJldHVybiBjdXRQb2x5bGluZUJ5R3JpZChmbGF0UGF0aCwge1xuICAgICAgc2l6ZSxcbiAgICAgIGdyaWRSZXNvbHV0aW9uXG4gICAgfSk7XG4gIH1cblxuICBpZiAod3JhcExvbmdpdHVkZSkge1xuICAgIHJldHVybiBjdXRQb2x5bGluZUJ5TWVyY2F0b3JCb3VuZHMoZmxhdFBhdGgsIHtcbiAgICAgIHNpemVcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBmbGF0UGF0aDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/path-layer/path.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js ***!
  \****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME scatterplot-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool filled;\\nuniform float stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.uv = unitPosition;\\n\\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\\n\\n  if (inCircle == 0.0) {\\n    discard;\\n  }\\n\\n  if (stroked > 0.5) {\\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\\n    if (filled) {\\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\\n    } else {\\n      if (isLine == 0.0) {\\n        discard;\\n      }\\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\\n    }\\n  } else if (filled) {\\n    gl_FragColor = vFillColor;\\n  } else {\\n    discard;\\n  }\\n\\n  gl_FragColor.a *= inCircle;\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\");\n//# sourceMappingURL=scatterplot-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyLWZyYWdtZW50Lmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyLWZyYWdtZW50Lmdsc2wuanM/YWY4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgc2NhdHRlcnBsb3QtbGF5ZXItZnJhZ21lbnQtc2hhZGVyXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcblxcbnVuaWZvcm0gYm9vbCBmaWxsZWQ7XFxudW5pZm9ybSBmbG9hdCBzdHJva2VkO1xcblxcbnZhcnlpbmcgdmVjNCB2RmlsbENvbG9yO1xcbnZhcnlpbmcgdmVjNCB2TGluZUNvbG9yO1xcbnZhcnlpbmcgdmVjMiB1bml0UG9zaXRpb247XFxudmFyeWluZyBmbG9hdCBpbm5lclVuaXRSYWRpdXM7XFxudmFyeWluZyBmbG9hdCBvdXRlclJhZGl1c1BpeGVscztcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkudXYgPSB1bml0UG9zaXRpb247XFxuXFxuICBmbG9hdCBkaXN0VG9DZW50ZXIgPSBsZW5ndGgodW5pdFBvc2l0aW9uKSAqIG91dGVyUmFkaXVzUGl4ZWxzO1xcbiAgZmxvYXQgaW5DaXJjbGUgPSBzbW9vdGhlZGdlKGRpc3RUb0NlbnRlciwgb3V0ZXJSYWRpdXNQaXhlbHMpO1xcblxcbiAgaWYgKGluQ2lyY2xlID09IDAuMCkge1xcbiAgICBkaXNjYXJkO1xcbiAgfVxcblxcbiAgaWYgKHN0cm9rZWQgPiAwLjUpIHtcXG4gICAgZmxvYXQgaXNMaW5lID0gc21vb3RoZWRnZShpbm5lclVuaXRSYWRpdXMgKiBvdXRlclJhZGl1c1BpeGVscywgZGlzdFRvQ2VudGVyKTtcXG4gICAgaWYgKGZpbGxlZCkge1xcbiAgICAgIGdsX0ZyYWdDb2xvciA9IG1peCh2RmlsbENvbG9yLCB2TGluZUNvbG9yLCBpc0xpbmUpO1xcbiAgICB9IGVsc2Uge1xcbiAgICAgIGlmIChpc0xpbmUgPT0gMC4wKSB7XFxuICAgICAgICBkaXNjYXJkO1xcbiAgICAgIH1cXG4gICAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KHZMaW5lQ29sb3IucmdiLCB2TGluZUNvbG9yLmEgKiBpc0xpbmUpO1xcbiAgICB9XFxuICB9IGVsc2UgaWYgKGZpbGxlZCkge1xcbiAgICBnbF9GcmFnQ29sb3IgPSB2RmlsbENvbG9yO1xcbiAgfSBlbHNlIHtcXG4gICAgZGlzY2FyZDtcXG4gIH1cXG5cXG4gIGdsX0ZyYWdDb2xvci5hICo9IGluQ2lyY2xlO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUihnbF9GcmFnQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zY2F0dGVycGxvdC1sYXllci1mcmFnbWVudC5nbHNsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME scatterplot-layer-vertex-shader\\n\\nattribute vec3 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute float instanceRadius;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform float opacity;\\nuniform float radiusScale;\\nuniform float radiusMinPixels;\\nuniform float radiusMaxPixels;\\nuniform float lineWidthScale;\\nuniform float lineWidthMinPixels;\\nuniform float lineWidthMaxPixels;\\nuniform float stroked;\\nuniform bool filled;\\nuniform bool billboard;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying vec2 unitPosition;\\nvarying float innerUnitRadius;\\nvarying float outerRadiusPixels;\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  outerRadiusPixels = clamp(\\n    project_size_to_pixel(radiusScale * instanceRadius),\\n    radiusMinPixels, radiusMaxPixels\\n  );\\n  float lineWidthPixels = clamp(\\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\\n    lineWidthMinPixels, lineWidthMaxPixels\\n  );\\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\\n  unitPosition = positions.xy;\\n  geometry.uv = unitPosition;\\n  geometry.pickingColor = instancePickingColors;\\n\\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\\n  \\n  if (billboard) {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = positions * outerRadiusPixels;\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset = positions * project_pixel_size(outerRadiusPixels);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\\n  }\\n\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\");\n//# sourceMappingURL=scatterplot-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyLXZlcnRleC5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9zY2F0dGVycGxvdC1sYXllci9zY2F0dGVycGxvdC1sYXllci12ZXJ0ZXguZ2xzbC5qcz8yM2MxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBzY2F0dGVycGxvdC1sYXllci12ZXJ0ZXgtc2hhZGVyXFxuXFxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb25zO1xcblxcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zNjRMb3c7XFxuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlUmFkaXVzO1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUxpbmVXaWR0aHM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VGaWxsQ29sb3JzO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlTGluZUNvbG9ycztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuXFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbnVuaWZvcm0gZmxvYXQgcmFkaXVzU2NhbGU7XFxudW5pZm9ybSBmbG9hdCByYWRpdXNNaW5QaXhlbHM7XFxudW5pZm9ybSBmbG9hdCByYWRpdXNNYXhQaXhlbHM7XFxudW5pZm9ybSBmbG9hdCBsaW5lV2lkdGhTY2FsZTtcXG51bmlmb3JtIGZsb2F0IGxpbmVXaWR0aE1pblBpeGVscztcXG51bmlmb3JtIGZsb2F0IGxpbmVXaWR0aE1heFBpeGVscztcXG51bmlmb3JtIGZsb2F0IHN0cm9rZWQ7XFxudW5pZm9ybSBib29sIGZpbGxlZDtcXG51bmlmb3JtIGJvb2wgYmlsbGJvYXJkO1xcblxcbnZhcnlpbmcgdmVjNCB2RmlsbENvbG9yO1xcbnZhcnlpbmcgdmVjNCB2TGluZUNvbG9yO1xcbnZhcnlpbmcgdmVjMiB1bml0UG9zaXRpb247XFxudmFyeWluZyBmbG9hdCBpbm5lclVuaXRSYWRpdXM7XFxudmFyeWluZyBmbG9hdCBvdXRlclJhZGl1c1BpeGVscztcXG5cXG52b2lkIG1haW4odm9pZCkge1xcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbiA9IGluc3RhbmNlUG9zaXRpb25zO1xcbiAgb3V0ZXJSYWRpdXNQaXhlbHMgPSBjbGFtcChcXG4gICAgcHJvamVjdF9zaXplX3RvX3BpeGVsKHJhZGl1c1NjYWxlICogaW5zdGFuY2VSYWRpdXMpLFxcbiAgICByYWRpdXNNaW5QaXhlbHMsIHJhZGl1c01heFBpeGVsc1xcbiAgKTtcXG4gIGZsb2F0IGxpbmVXaWR0aFBpeGVscyA9IGNsYW1wKFxcbiAgICBwcm9qZWN0X3NpemVfdG9fcGl4ZWwobGluZVdpZHRoU2NhbGUgKiBpbnN0YW5jZUxpbmVXaWR0aHMpLFxcbiAgICBsaW5lV2lkdGhNaW5QaXhlbHMsIGxpbmVXaWR0aE1heFBpeGVsc1xcbiAgKTtcXG4gIG91dGVyUmFkaXVzUGl4ZWxzICs9IHN0cm9rZWQgKiBsaW5lV2lkdGhQaXhlbHMgLyAyLjA7XFxuICB1bml0UG9zaXRpb24gPSBwb3NpdGlvbnMueHk7XFxuICBnZW9tZXRyeS51diA9IHVuaXRQb3NpdGlvbjtcXG4gIGdlb21ldHJ5LnBpY2tpbmdDb2xvciA9IGluc3RhbmNlUGlja2luZ0NvbG9ycztcXG5cXG4gIGlubmVyVW5pdFJhZGl1cyA9IDEuMCAtIHN0cm9rZWQgKiBsaW5lV2lkdGhQaXhlbHMgLyBvdXRlclJhZGl1c1BpeGVscztcXG4gIFxcbiAgaWYgKGJpbGxib2FyZCkge1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlUG9zaXRpb25zLCBpbnN0YW5jZVBvc2l0aW9uczY0TG93LCB2ZWMzKDAuMCksIGdlb21ldHJ5LnBvc2l0aW9uKTtcXG4gICAgdmVjMyBvZmZzZXQgPSBwb3NpdGlvbnMgKiBvdXRlclJhZGl1c1BpeGVscztcXG4gICAgREVDS0dMX0ZJTFRFUl9TSVpFKG9mZnNldCwgZ2VvbWV0cnkpO1xcbiAgICBnbF9Qb3NpdGlvbi54eSArPSBwcm9qZWN0X3BpeGVsX3NpemVfdG9fY2xpcHNwYWNlKG9mZnNldC54eSk7XFxuICB9IGVsc2Uge1xcbiAgICB2ZWMzIG9mZnNldCA9IHBvc2l0aW9ucyAqIHByb2plY3RfcGl4ZWxfc2l6ZShvdXRlclJhZGl1c1BpeGVscyk7XFxuICAgIERFQ0tHTF9GSUxURVJfU0laRShvZmZzZXQsIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0X3Bvc2l0aW9uX3RvX2NsaXBzcGFjZShpbnN0YW5jZVBvc2l0aW9ucywgaW5zdGFuY2VQb3NpdGlvbnM2NExvdywgb2Zmc2V0LCBnZW9tZXRyeS5wb3NpdGlvbik7XFxuICB9XFxuXFxuICBERUNLR0xfRklMVEVSX0dMX1BPU0lUSU9OKGdsX1Bvc2l0aW9uLCBnZW9tZXRyeSk7XFxuICB2RmlsbENvbG9yID0gdmVjNChpbnN0YW5jZUZpbGxDb2xvcnMucmdiLCBpbnN0YW5jZUZpbGxDb2xvcnMuYSAqIG9wYWNpdHkpO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2RmlsbENvbG9yLCBnZW9tZXRyeSk7XFxuICB2TGluZUNvbG9yID0gdmVjNChpbnN0YW5jZUxpbmVDb2xvcnMucmdiLCBpbnN0YW5jZUxpbmVDb2xvcnMuYSAqIG9wYWNpdHkpO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2TGluZUNvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NhdHRlcnBsb3QtbGF5ZXItdmVydGV4Lmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ScatterplotLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _scatterplot_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scatterplot-layer-vertex.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-vertex.glsl.js\");\n/* harmony import */ var _scatterplot_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scatterplot-layer-fragment.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer-fragment.glsl.js\");\n\n\n\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  radiusMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  radiusMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  lineWidthUnits: 'meters',\n  lineWidthScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  lineWidthMinPixels: {\n    type: 'number',\n    min: 0,\n    value: 0\n  },\n  lineWidthMaxPixels: {\n    type: 'number',\n    min: 0,\n    value: Number.MAX_SAFE_INTEGER\n  },\n  stroked: false,\n  filled: true,\n  billboard: false,\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getRadius: {\n    type: 'accessor',\n    value: 1\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  },\n  strokeWidth: {\n    deprecatedFor: 'getLineWidth'\n  },\n  outline: {\n    deprecatedFor: 'stroked'\n  },\n  getColor: {\n    deprecatedFor: ['getFillColor', 'getLineColor']\n  }\n};\nclass ScatterplotLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  getShaders() {\n    return super.getShaders({\n      vs: _scatterplot_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n      fs: _scatterplot_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n      modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      billboard,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n    const pointRadiusMultiplier = radiusUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    const lineWidthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    this.state.model.setUniforms(uniforms).setUniforms({\n      stroked: stroked ? 1 : 0,\n      filled,\n      billboard,\n      radiusScale: radiusScale * pointRadiusMultiplier,\n      radiusMinPixels,\n      radiusMaxPixels,\n      lineWidthScale: lineWidthScale * lineWidthMultiplier,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 3,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n//# sourceMappingURL=scatterplot-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NjYXR0ZXJwbG90LWxheWVyL3NjYXR0ZXJwbG90LWxheWVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9zY2F0dGVycGxvdC1sYXllci9zY2F0dGVycGxvdC1sYXllci5qcz9mYmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExheWVyLCBwcm9qZWN0MzIsIHBpY2tpbmcgfSBmcm9tICdAZGVjay5nbC9jb3JlJztcbmltcG9ydCB7IE1vZGVsLCBHZW9tZXRyeSB9IGZyb20gJ0BsdW1hLmdsL2NvcmUnO1xuaW1wb3J0IHZzIGZyb20gJy4vc2NhdHRlcnBsb3QtbGF5ZXItdmVydGV4Lmdsc2wnO1xuaW1wb3J0IGZzIGZyb20gJy4vc2NhdHRlcnBsb3QtbGF5ZXItZnJhZ21lbnQuZ2xzbCc7XG5jb25zdCBERUZBVUxUX0NPTE9SID0gWzAsIDAsIDAsIDI1NV07XG5jb25zdCBkZWZhdWx0UHJvcHMgPSB7XG4gIHJhZGl1c1VuaXRzOiAnbWV0ZXJzJyxcbiAgcmFkaXVzU2NhbGU6IHtcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBtaW46IDAsXG4gICAgdmFsdWU6IDFcbiAgfSxcbiAgcmFkaXVzTWluUGl4ZWxzOiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgbWluOiAwLFxuICAgIHZhbHVlOiAwXG4gIH0sXG4gIHJhZGl1c01heFBpeGVsczoge1xuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIG1pbjogMCxcbiAgICB2YWx1ZTogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcbiAgfSxcbiAgbGluZVdpZHRoVW5pdHM6ICdtZXRlcnMnLFxuICBsaW5lV2lkdGhTY2FsZToge1xuICAgIHR5cGU6ICdudW1iZXInLFxuICAgIG1pbjogMCxcbiAgICB2YWx1ZTogMVxuICB9LFxuICBsaW5lV2lkdGhNaW5QaXhlbHM6IHtcbiAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICBtaW46IDAsXG4gICAgdmFsdWU6IDBcbiAgfSxcbiAgbGluZVdpZHRoTWF4UGl4ZWxzOiB7XG4gICAgdHlwZTogJ251bWJlcicsXG4gICAgbWluOiAwLFxuICAgIHZhbHVlOiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxuICB9LFxuICBzdHJva2VkOiBmYWxzZSxcbiAgZmlsbGVkOiB0cnVlLFxuICBiaWxsYm9hcmQ6IGZhbHNlLFxuICBnZXRQb3NpdGlvbjoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IHggPT4geC5wb3NpdGlvblxuICB9LFxuICBnZXRSYWRpdXM6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiAxXG4gIH0sXG4gIGdldEZpbGxDb2xvcjoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IERFRkFVTFRfQ09MT1JcbiAgfSxcbiAgZ2V0TGluZUNvbG9yOiB7XG4gICAgdHlwZTogJ2FjY2Vzc29yJyxcbiAgICB2YWx1ZTogREVGQVVMVF9DT0xPUlxuICB9LFxuICBnZXRMaW5lV2lkdGg6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiAxXG4gIH0sXG4gIHN0cm9rZVdpZHRoOiB7XG4gICAgZGVwcmVjYXRlZEZvcjogJ2dldExpbmVXaWR0aCdcbiAgfSxcbiAgb3V0bGluZToge1xuICAgIGRlcHJlY2F0ZWRGb3I6ICdzdHJva2VkJ1xuICB9LFxuICBnZXRDb2xvcjoge1xuICAgIGRlcHJlY2F0ZWRGb3I6IFsnZ2V0RmlsbENvbG9yJywgJ2dldExpbmVDb2xvciddXG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY2F0dGVycGxvdExheWVyIGV4dGVuZHMgTGF5ZXIge1xuICBnZXRTaGFkZXJzKCkge1xuICAgIHJldHVybiBzdXBlci5nZXRTaGFkZXJzKHtcbiAgICAgIHZzLFxuICAgICAgZnMsXG4gICAgICBtb2R1bGVzOiBbcHJvamVjdDMyLCBwaWNraW5nXVxuICAgIH0pO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVN0YXRlKCkge1xuICAgIHRoaXMuZ2V0QXR0cmlidXRlTWFuYWdlcigpLmFkZEluc3RhbmNlZCh7XG4gICAgICBpbnN0YW5jZVBvc2l0aW9uczoge1xuICAgICAgICBzaXplOiAzLFxuICAgICAgICB0eXBlOiA1MTMwLFxuICAgICAgICBmcDY0OiB0aGlzLnVzZTY0Yml0UG9zaXRpb25zKCksXG4gICAgICAgIHRyYW5zaXRpb246IHRydWUsXG4gICAgICAgIGFjY2Vzc29yOiAnZ2V0UG9zaXRpb24nXG4gICAgICB9LFxuICAgICAgaW5zdGFuY2VSYWRpdXM6IHtcbiAgICAgICAgc2l6ZTogMSxcbiAgICAgICAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgICAgICAgYWNjZXNzb3I6ICdnZXRSYWRpdXMnLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IDFcbiAgICAgIH0sXG4gICAgICBpbnN0YW5jZUZpbGxDb2xvcnM6IHtcbiAgICAgICAgc2l6ZTogdGhpcy5wcm9wcy5jb2xvckZvcm1hdC5sZW5ndGgsXG4gICAgICAgIHRyYW5zaXRpb246IHRydWUsXG4gICAgICAgIG5vcm1hbGl6ZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IDUxMjEsXG4gICAgICAgIGFjY2Vzc29yOiAnZ2V0RmlsbENvbG9yJyxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBbMCwgMCwgMCwgMjU1XVxuICAgICAgfSxcbiAgICAgIGluc3RhbmNlTGluZUNvbG9yczoge1xuICAgICAgICBzaXplOiB0aGlzLnByb3BzLmNvbG9yRm9ybWF0Lmxlbmd0aCxcbiAgICAgICAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgICAgICAgbm9ybWFsaXplZDogdHJ1ZSxcbiAgICAgICAgdHlwZTogNTEyMSxcbiAgICAgICAgYWNjZXNzb3I6ICdnZXRMaW5lQ29sb3InLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFswLCAwLCAwLCAyNTVdXG4gICAgICB9LFxuICAgICAgaW5zdGFuY2VMaW5lV2lkdGhzOiB7XG4gICAgICAgIHNpemU6IDEsXG4gICAgICAgIHRyYW5zaXRpb246IHRydWUsXG4gICAgICAgIGFjY2Vzc29yOiAnZ2V0TGluZVdpZHRoJyxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiAxXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB1cGRhdGVTdGF0ZSh7XG4gICAgcHJvcHMsXG4gICAgb2xkUHJvcHMsXG4gICAgY2hhbmdlRmxhZ3NcbiAgfSkge1xuICAgIHN1cGVyLnVwZGF0ZVN0YXRlKHtcbiAgICAgIHByb3BzLFxuICAgICAgb2xkUHJvcHMsXG4gICAgICBjaGFuZ2VGbGFnc1xuICAgIH0pO1xuXG4gICAgaWYgKGNoYW5nZUZsYWdzLmV4dGVuc2lvbnNDaGFuZ2VkKSB7XG4gICAgICB2YXIgX3RoaXMkc3RhdGUkbW9kZWw7XG5cbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZ2xcbiAgICAgIH0gPSB0aGlzLmNvbnRleHQ7XG4gICAgICAoX3RoaXMkc3RhdGUkbW9kZWwgPSB0aGlzLnN0YXRlLm1vZGVsKSA9PT0gbnVsbCB8fCBfdGhpcyRzdGF0ZSRtb2RlbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkc3RhdGUkbW9kZWwuZGVsZXRlKCk7XG4gICAgICB0aGlzLnN0YXRlLm1vZGVsID0gdGhpcy5fZ2V0TW9kZWwoZ2wpO1xuICAgICAgdGhpcy5nZXRBdHRyaWJ1dGVNYW5hZ2VyKCkuaW52YWxpZGF0ZUFsbCgpO1xuICAgIH1cbiAgfVxuXG4gIGRyYXcoe1xuICAgIHVuaWZvcm1zXG4gIH0pIHtcbiAgICBjb25zdCB7XG4gICAgICB2aWV3cG9ydFxuICAgIH0gPSB0aGlzLmNvbnRleHQ7XG4gICAgY29uc3Qge1xuICAgICAgcmFkaXVzVW5pdHMsXG4gICAgICByYWRpdXNTY2FsZSxcbiAgICAgIHJhZGl1c01pblBpeGVscyxcbiAgICAgIHJhZGl1c01heFBpeGVscyxcbiAgICAgIHN0cm9rZWQsXG4gICAgICBmaWxsZWQsXG4gICAgICBiaWxsYm9hcmQsXG4gICAgICBsaW5lV2lkdGhVbml0cyxcbiAgICAgIGxpbmVXaWR0aFNjYWxlLFxuICAgICAgbGluZVdpZHRoTWluUGl4ZWxzLFxuICAgICAgbGluZVdpZHRoTWF4UGl4ZWxzXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgcG9pbnRSYWRpdXNNdWx0aXBsaWVyID0gcmFkaXVzVW5pdHMgPT09ICdwaXhlbHMnID8gdmlld3BvcnQubWV0ZXJzUGVyUGl4ZWwgOiAxO1xuICAgIGNvbnN0IGxpbmVXaWR0aE11bHRpcGxpZXIgPSBsaW5lV2lkdGhVbml0cyA9PT0gJ3BpeGVscycgPyB2aWV3cG9ydC5tZXRlcnNQZXJQaXhlbCA6IDE7XG4gICAgdGhpcy5zdGF0ZS5tb2RlbC5zZXRVbmlmb3Jtcyh1bmlmb3Jtcykuc2V0VW5pZm9ybXMoe1xuICAgICAgc3Ryb2tlZDogc3Ryb2tlZCA/IDEgOiAwLFxuICAgICAgZmlsbGVkLFxuICAgICAgYmlsbGJvYXJkLFxuICAgICAgcmFkaXVzU2NhbGU6IHJhZGl1c1NjYWxlICogcG9pbnRSYWRpdXNNdWx0aXBsaWVyLFxuICAgICAgcmFkaXVzTWluUGl4ZWxzLFxuICAgICAgcmFkaXVzTWF4UGl4ZWxzLFxuICAgICAgbGluZVdpZHRoU2NhbGU6IGxpbmVXaWR0aFNjYWxlICogbGluZVdpZHRoTXVsdGlwbGllcixcbiAgICAgIGxpbmVXaWR0aE1pblBpeGVscyxcbiAgICAgIGxpbmVXaWR0aE1heFBpeGVsc1xuICAgIH0pLmRyYXcoKTtcbiAgfVxuXG4gIF9nZXRNb2RlbChnbCkge1xuICAgIGNvbnN0IHBvc2l0aW9ucyA9IFstMSwgLTEsIDAsIDEsIC0xLCAwLCAxLCAxLCAwLCAtMSwgMSwgMF07XG4gICAgcmV0dXJuIG5ldyBNb2RlbChnbCwgeyAuLi50aGlzLmdldFNoYWRlcnMoKSxcbiAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgZ2VvbWV0cnk6IG5ldyBHZW9tZXRyeSh7XG4gICAgICAgIGRyYXdNb2RlOiA2LFxuICAgICAgICB2ZXJ0ZXhDb3VudDogNCxcbiAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgIHBvc2l0aW9uczoge1xuICAgICAgICAgICAgc2l6ZTogMyxcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgRmxvYXQzMkFycmF5KHBvc2l0aW9ucylcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgaXNJbnN0YW5jZWQ6IHRydWVcbiAgICB9KTtcbiAgfVxuXG59XG5TY2F0dGVycGxvdExheWVyLmxheWVyTmFtZSA9ICdTY2F0dGVycGxvdExheWVyJztcblNjYXR0ZXJwbG90TGF5ZXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NhdHRlcnBsb3QtbGF5ZXIuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/scatterplot-layer/scatterplot-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PolygonTesselator; });\n/* harmony import */ var _polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/tesselator.js\");\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @math.gl/polygon */ \"./node_modules/@math.gl/polygon/dist/esm/index.js\");\n\n\n\nclass PolygonTesselator extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  constructor(opts) {\n    const {\n      fp64,\n      IndexType = Uint32Array\n    } = opts;\n    super({ ...opts,\n      attributes: {\n        positions: {\n          size: 3,\n          type: fp64 ? Float64Array : Float32Array\n        },\n        vertexValid: {\n          type: Uint8ClampedArray,\n          size: 1\n        },\n        indices: {\n          type: IndexType,\n          size: 1\n        }\n      }\n    });\n  }\n\n  get(attributeName) {\n    const {\n      attributes\n    } = this;\n\n    if (attributeName === 'indices') {\n      return attributes.indices && attributes.indices.subarray(0, this.vertexCount);\n    }\n\n    return attributes[attributeName];\n  }\n\n  updateGeometry(opts) {\n    super.updateGeometry(opts);\n    const externalIndices = this.buffers.indices;\n\n    if (externalIndices) {\n      this.vertexCount = (externalIndices.value || externalIndices).length;\n    }\n  }\n\n  normalizeGeometry(polygon) {\n    if (this.normalize) {\n      polygon = _polygon__WEBPACK_IMPORTED_MODULE_0__[\"normalize\"](polygon, this.positionSize);\n\n      if (this.opts.resolution) {\n        return Object(_math_gl_polygon__WEBPACK_IMPORTED_MODULE_2__[\"cutPolygonByGrid\"])(polygon.positions || polygon, polygon.holeIndices, {\n          size: this.positionSize,\n          gridResolution: this.opts.resolution,\n          edgeTypes: true\n        });\n      }\n\n      if (this.opts.wrapLongitude) {\n        return Object(_math_gl_polygon__WEBPACK_IMPORTED_MODULE_2__[\"cutPolygonByMercatorBounds\"])(polygon.positions || polygon, polygon.holeIndices, {\n          size: this.positionSize,\n          maxLatitude: 86,\n          edgeTypes: true\n        });\n      }\n    }\n\n    return polygon;\n  }\n\n  getGeometrySize(polygon) {\n    if (Array.isArray(polygon) && !Number.isFinite(polygon[0])) {\n      let size = 0;\n\n      for (const subPolygon of polygon) {\n        size += this.getGeometrySize(subPolygon);\n      }\n\n      return size;\n    }\n\n    return (polygon.positions || polygon).length / this.positionSize;\n  }\n\n  getGeometryFromBuffer(buffer) {\n    if (this.normalize || !this.buffers.indices) {\n      return super.getGeometryFromBuffer(buffer);\n    }\n\n    return () => null;\n  }\n\n  updateGeometryAttributes(polygon, context) {\n    if (Array.isArray(polygon) && !Number.isFinite(polygon[0])) {\n      for (const subPolygon of polygon) {\n        const geometrySize = this.getGeometrySize(subPolygon);\n        context.geometrySize = geometrySize;\n        this.updateGeometryAttributes(subPolygon, context);\n        context.vertexStart += geometrySize;\n        context.indexStart = this.indexStarts[context.geometryIndex + 1];\n      }\n    } else {\n      this._updateIndices(polygon, context);\n\n      this._updatePositions(polygon, context);\n\n      this._updateVertexValid(polygon, context);\n    }\n  }\n\n  _updateIndices(polygon, {\n    geometryIndex,\n    vertexStart: offset,\n    indexStart\n  }) {\n    const {\n      attributes,\n      indexStarts,\n      typedArrayManager\n    } = this;\n    let target = attributes.indices;\n\n    if (!target) {\n      return;\n    }\n\n    let i = indexStart;\n    const indices = _polygon__WEBPACK_IMPORTED_MODULE_0__[\"getSurfaceIndices\"](polygon, this.positionSize, this.opts.preproject);\n    target = typedArrayManager.allocate(target, indexStart + indices.length, {\n      copy: true\n    });\n\n    for (let j = 0; j < indices.length; j++) {\n      target[i++] = indices[j] + offset;\n    }\n\n    indexStarts[geometryIndex + 1] = indexStart + indices.length;\n    attributes.indices = target;\n  }\n\n  _updatePositions(polygon, {\n    vertexStart,\n    geometrySize\n  }) {\n    const {\n      attributes: {\n        positions\n      },\n      positionSize\n    } = this;\n\n    if (!positions) {\n      return;\n    }\n\n    const polygonPositions = polygon.positions || polygon;\n\n    for (let i = vertexStart, j = 0; j < geometrySize; i++, j++) {\n      const x = polygonPositions[j * positionSize];\n      const y = polygonPositions[j * positionSize + 1];\n      const z = positionSize > 2 ? polygonPositions[j * positionSize + 2] : 0;\n      positions[i * 3] = x;\n      positions[i * 3 + 1] = y;\n      positions[i * 3 + 2] = z;\n    }\n  }\n\n  _updateVertexValid(polygon, {\n    vertexStart,\n    geometrySize\n  }) {\n    const {\n      attributes: {\n        vertexValid\n      },\n      positionSize\n    } = this;\n    const holeIndices = polygon && polygon.holeIndices;\n\n    if (polygon && polygon.edgeTypes) {\n      vertexValid.set(polygon.edgeTypes, vertexStart);\n    } else {\n      vertexValid.fill(1, vertexStart, vertexStart + geometrySize);\n    }\n\n    if (holeIndices) {\n      for (let j = 0; j < holeIndices.length; j++) {\n        vertexValid[vertexStart + holeIndices[j] / positionSize - 1] = 0;\n      }\n    }\n\n    vertexValid[vertexStart + geometrySize - 1] = 0;\n  }\n\n}\n//# sourceMappingURL=polygon-tesselator.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js ***!
  \******************************************************************************/
/*! exports provided: normalize, getSurfaceIndices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalize\", function() { return normalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSurfaceIndices\", function() { return getSurfaceIndices; });\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! earcut */ \"./node_modules/earcut/src/earcut.js\");\n/* harmony import */ var earcut__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(earcut__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @math.gl/polygon */ \"./node_modules/@math.gl/polygon/dist/esm/index.js\");\n\n\nconst OUTER_POLYGON_WINDING = _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__[\"WINDING\"].CLOCKWISE;\nconst HOLE_POLYGON_WINDING = _math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__[\"WINDING\"].COUNTER_CLOCKWISE;\nconst windingOptions = {\n  isClosed: true\n};\n\nfunction validate(polygon) {\n  polygon = polygon && polygon.positions || polygon;\n\n  if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n    throw new Error('invalid polygon');\n  }\n}\n\nfunction isSimple(polygon) {\n  return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n\nfunction isNestedRingClosed(simplePolygon) {\n  const p0 = simplePolygon[0];\n  const p1 = simplePolygon[simplePolygon.length - 1];\n  return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n\nfunction isFlatRingClosed(positions, size, startIndex, endIndex) {\n  for (let i = 0; i < size; i++) {\n    if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction copyNestedRing(target, targetStartIndex, simplePolygon, size, windingDirection) {\n  let targetIndex = targetStartIndex;\n  const len = simplePolygon.length;\n\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[i][j] || 0;\n    }\n  }\n\n  if (!isNestedRingClosed(simplePolygon)) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[0][j] || 0;\n    }\n  }\n\n  windingOptions.start = targetStartIndex;\n  windingOptions.end = targetIndex;\n  windingOptions.size = size;\n  Object(_math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__[\"modifyPolygonWindingDirection\"])(target, windingDirection, windingOptions);\n  return targetIndex;\n}\n\nfunction copyFlatRing(target, targetStartIndex, positions, size, srcStartIndex = 0, srcEndIndex, windingDirection) {\n  srcEndIndex = srcEndIndex || positions.length;\n  const srcLength = srcEndIndex - srcStartIndex;\n\n  if (srcLength <= 0) {\n    return targetStartIndex;\n  }\n\n  let targetIndex = targetStartIndex;\n\n  for (let i = 0; i < srcLength; i++) {\n    target[targetIndex++] = positions[srcStartIndex + i];\n  }\n\n  if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n    for (let i = 0; i < size; i++) {\n      target[targetIndex++] = positions[srcStartIndex + i];\n    }\n  }\n\n  windingOptions.start = targetStartIndex;\n  windingOptions.end = targetIndex;\n  windingOptions.size = size;\n  Object(_math_gl_polygon__WEBPACK_IMPORTED_MODULE_1__[\"modifyPolygonWindingDirection\"])(target, windingDirection, windingOptions);\n  return targetIndex;\n}\n\nfunction normalize(polygon, positionSize) {\n  validate(polygon);\n  const positions = [];\n  const holeIndices = [];\n\n  if (polygon.positions) {\n    const {\n      positions: srcPositions,\n      holeIndices: srcHoleIndices\n    } = polygon;\n\n    if (srcHoleIndices) {\n      let targetIndex = 0;\n\n      for (let i = 0; i <= srcHoleIndices.length; i++) {\n        targetIndex = copyFlatRing(positions, targetIndex, srcPositions, positionSize, srcHoleIndices[i - 1], srcHoleIndices[i], i === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n        holeIndices.push(targetIndex);\n      }\n\n      holeIndices.pop();\n      return {\n        positions,\n        holeIndices\n      };\n    }\n\n    polygon = srcPositions;\n  }\n\n  if (Number.isFinite(polygon[0])) {\n    copyFlatRing(positions, 0, polygon, positionSize, 0, positions.length, OUTER_POLYGON_WINDING);\n    return positions;\n  }\n\n  if (!isSimple(polygon)) {\n    let targetIndex = 0;\n\n    for (const [polygonIndex, simplePolygon] of polygon.entries()) {\n      targetIndex = copyNestedRing(positions, targetIndex, simplePolygon, positionSize, polygonIndex === 0 ? OUTER_POLYGON_WINDING : HOLE_POLYGON_WINDING);\n      holeIndices.push(targetIndex);\n    }\n\n    holeIndices.pop();\n    return {\n      positions,\n      holeIndices\n    };\n  }\n\n  copyNestedRing(positions, 0, polygon, positionSize, OUTER_POLYGON_WINDING);\n  return positions;\n}\nfunction getSurfaceIndices(normalizedPolygon, positionSize, preproject) {\n  let holeIndices = null;\n\n  if (normalizedPolygon.holeIndices) {\n    holeIndices = normalizedPolygon.holeIndices.map(positionIndex => positionIndex / positionSize);\n  }\n\n  let positions = normalizedPolygon.positions || normalizedPolygon;\n\n  if (preproject) {\n    const n = positions.length;\n    positions = positions.slice();\n    const p = [];\n\n    for (let i = 0; i < n; i += positionSize) {\n      p[0] = positions[i];\n      p[1] = positions[i + 1];\n      const xy = preproject(p);\n      positions[i] = xy[0];\n      positions[i + 1] = xy[1];\n    }\n  }\n\n  return earcut__WEBPACK_IMPORTED_MODULE_0___default()(positions, holeIndices, positionSize);\n}\n//# sourceMappingURL=polygon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvcG9seWdvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vc29saWQtcG9seWdvbi1sYXllci9wb2x5Z29uLmpzP2RjM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVhcmN1dCBmcm9tICdlYXJjdXQnO1xuaW1wb3J0IHsgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb24sIFdJTkRJTkcgfSBmcm9tICdAbWF0aC5nbC9wb2x5Z29uJztcbmNvbnN0IE9VVEVSX1BPTFlHT05fV0lORElORyA9IFdJTkRJTkcuQ0xPQ0tXSVNFO1xuY29uc3QgSE9MRV9QT0xZR09OX1dJTkRJTkcgPSBXSU5ESU5HLkNPVU5URVJfQ0xPQ0tXSVNFO1xuY29uc3Qgd2luZGluZ09wdGlvbnMgPSB7XG4gIGlzQ2xvc2VkOiB0cnVlXG59O1xuXG5mdW5jdGlvbiB2YWxpZGF0ZShwb2x5Z29uKSB7XG4gIHBvbHlnb24gPSBwb2x5Z29uICYmIHBvbHlnb24ucG9zaXRpb25zIHx8IHBvbHlnb247XG5cbiAgaWYgKCFBcnJheS5pc0FycmF5KHBvbHlnb24pICYmICFBcnJheUJ1ZmZlci5pc1ZpZXcocG9seWdvbikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgcG9seWdvbicpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzU2ltcGxlKHBvbHlnb24pIHtcbiAgcmV0dXJuIHBvbHlnb24ubGVuZ3RoID49IDEgJiYgcG9seWdvblswXS5sZW5ndGggPj0gMiAmJiBOdW1iZXIuaXNGaW5pdGUocG9seWdvblswXVswXSk7XG59XG5cbmZ1bmN0aW9uIGlzTmVzdGVkUmluZ0Nsb3NlZChzaW1wbGVQb2x5Z29uKSB7XG4gIGNvbnN0IHAwID0gc2ltcGxlUG9seWdvblswXTtcbiAgY29uc3QgcDEgPSBzaW1wbGVQb2x5Z29uW3NpbXBsZVBvbHlnb24ubGVuZ3RoIC0gMV07XG4gIHJldHVybiBwMFswXSA9PT0gcDFbMF0gJiYgcDBbMV0gPT09IHAxWzFdICYmIHAwWzJdID09PSBwMVsyXTtcbn1cblxuZnVuY3Rpb24gaXNGbGF0UmluZ0Nsb3NlZChwb3NpdGlvbnMsIHNpemUsIHN0YXJ0SW5kZXgsIGVuZEluZGV4KSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgaWYgKHBvc2l0aW9uc1tzdGFydEluZGV4ICsgaV0gIT09IHBvc2l0aW9uc1tlbmRJbmRleCAtIHNpemUgKyBpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBjb3B5TmVzdGVkUmluZyh0YXJnZXQsIHRhcmdldFN0YXJ0SW5kZXgsIHNpbXBsZVBvbHlnb24sIHNpemUsIHdpbmRpbmdEaXJlY3Rpb24pIHtcbiAgbGV0IHRhcmdldEluZGV4ID0gdGFyZ2V0U3RhcnRJbmRleDtcbiAgY29uc3QgbGVuID0gc2ltcGxlUG9seWdvbi5sZW5ndGg7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2l6ZTsgaisrKSB7XG4gICAgICB0YXJnZXRbdGFyZ2V0SW5kZXgrK10gPSBzaW1wbGVQb2x5Z29uW2ldW2pdIHx8IDA7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFpc05lc3RlZFJpbmdDbG9zZWQoc2ltcGxlUG9seWdvbikpIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IHNpemU7IGorKykge1xuICAgICAgdGFyZ2V0W3RhcmdldEluZGV4KytdID0gc2ltcGxlUG9seWdvblswXVtqXSB8fCAwO1xuICAgIH1cbiAgfVxuXG4gIHdpbmRpbmdPcHRpb25zLnN0YXJ0ID0gdGFyZ2V0U3RhcnRJbmRleDtcbiAgd2luZGluZ09wdGlvbnMuZW5kID0gdGFyZ2V0SW5kZXg7XG4gIHdpbmRpbmdPcHRpb25zLnNpemUgPSBzaXplO1xuICBtb2RpZnlQb2x5Z29uV2luZGluZ0RpcmVjdGlvbih0YXJnZXQsIHdpbmRpbmdEaXJlY3Rpb24sIHdpbmRpbmdPcHRpb25zKTtcbiAgcmV0dXJuIHRhcmdldEluZGV4O1xufVxuXG5mdW5jdGlvbiBjb3B5RmxhdFJpbmcodGFyZ2V0LCB0YXJnZXRTdGFydEluZGV4LCBwb3NpdGlvbnMsIHNpemUsIHNyY1N0YXJ0SW5kZXggPSAwLCBzcmNFbmRJbmRleCwgd2luZGluZ0RpcmVjdGlvbikge1xuICBzcmNFbmRJbmRleCA9IHNyY0VuZEluZGV4IHx8IHBvc2l0aW9ucy5sZW5ndGg7XG4gIGNvbnN0IHNyY0xlbmd0aCA9IHNyY0VuZEluZGV4IC0gc3JjU3RhcnRJbmRleDtcblxuICBpZiAoc3JjTGVuZ3RoIDw9IDApIHtcbiAgICByZXR1cm4gdGFyZ2V0U3RhcnRJbmRleDtcbiAgfVxuXG4gIGxldCB0YXJnZXRJbmRleCA9IHRhcmdldFN0YXJ0SW5kZXg7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzcmNMZW5ndGg7IGkrKykge1xuICAgIHRhcmdldFt0YXJnZXRJbmRleCsrXSA9IHBvc2l0aW9uc1tzcmNTdGFydEluZGV4ICsgaV07XG4gIH1cblxuICBpZiAoIWlzRmxhdFJpbmdDbG9zZWQocG9zaXRpb25zLCBzaXplLCBzcmNTdGFydEluZGV4LCBzcmNFbmRJbmRleCkpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgdGFyZ2V0W3RhcmdldEluZGV4KytdID0gcG9zaXRpb25zW3NyY1N0YXJ0SW5kZXggKyBpXTtcbiAgICB9XG4gIH1cblxuICB3aW5kaW5nT3B0aW9ucy5zdGFydCA9IHRhcmdldFN0YXJ0SW5kZXg7XG4gIHdpbmRpbmdPcHRpb25zLmVuZCA9IHRhcmdldEluZGV4O1xuICB3aW5kaW5nT3B0aW9ucy5zaXplID0gc2l6ZTtcbiAgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb24odGFyZ2V0LCB3aW5kaW5nRGlyZWN0aW9uLCB3aW5kaW5nT3B0aW9ucyk7XG4gIHJldHVybiB0YXJnZXRJbmRleDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZShwb2x5Z29uLCBwb3NpdGlvblNpemUpIHtcbiAgdmFsaWRhdGUocG9seWdvbik7XG4gIGNvbnN0IHBvc2l0aW9ucyA9IFtdO1xuICBjb25zdCBob2xlSW5kaWNlcyA9IFtdO1xuXG4gIGlmIChwb2x5Z29uLnBvc2l0aW9ucykge1xuICAgIGNvbnN0IHtcbiAgICAgIHBvc2l0aW9uczogc3JjUG9zaXRpb25zLFxuICAgICAgaG9sZUluZGljZXM6IHNyY0hvbGVJbmRpY2VzXG4gICAgfSA9IHBvbHlnb247XG5cbiAgICBpZiAoc3JjSG9sZUluZGljZXMpIHtcbiAgICAgIGxldCB0YXJnZXRJbmRleCA9IDA7XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHNyY0hvbGVJbmRpY2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRhcmdldEluZGV4ID0gY29weUZsYXRSaW5nKHBvc2l0aW9ucywgdGFyZ2V0SW5kZXgsIHNyY1Bvc2l0aW9ucywgcG9zaXRpb25TaXplLCBzcmNIb2xlSW5kaWNlc1tpIC0gMV0sIHNyY0hvbGVJbmRpY2VzW2ldLCBpID09PSAwID8gT1VURVJfUE9MWUdPTl9XSU5ESU5HIDogSE9MRV9QT0xZR09OX1dJTkRJTkcpO1xuICAgICAgICBob2xlSW5kaWNlcy5wdXNoKHRhcmdldEluZGV4KTtcbiAgICAgIH1cblxuICAgICAgaG9sZUluZGljZXMucG9wKCk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb3NpdGlvbnMsXG4gICAgICAgIGhvbGVJbmRpY2VzXG4gICAgICB9O1xuICAgIH1cblxuICAgIHBvbHlnb24gPSBzcmNQb3NpdGlvbnM7XG4gIH1cblxuICBpZiAoTnVtYmVyLmlzRmluaXRlKHBvbHlnb25bMF0pKSB7XG4gICAgY29weUZsYXRSaW5nKHBvc2l0aW9ucywgMCwgcG9seWdvbiwgcG9zaXRpb25TaXplLCAwLCBwb3NpdGlvbnMubGVuZ3RoLCBPVVRFUl9QT0xZR09OX1dJTkRJTkcpO1xuICAgIHJldHVybiBwb3NpdGlvbnM7XG4gIH1cblxuICBpZiAoIWlzU2ltcGxlKHBvbHlnb24pKSB7XG4gICAgbGV0IHRhcmdldEluZGV4ID0gMDtcblxuICAgIGZvciAoY29uc3QgW3BvbHlnb25JbmRleCwgc2ltcGxlUG9seWdvbl0gb2YgcG9seWdvbi5lbnRyaWVzKCkpIHtcbiAgICAgIHRhcmdldEluZGV4ID0gY29weU5lc3RlZFJpbmcocG9zaXRpb25zLCB0YXJnZXRJbmRleCwgc2ltcGxlUG9seWdvbiwgcG9zaXRpb25TaXplLCBwb2x5Z29uSW5kZXggPT09IDAgPyBPVVRFUl9QT0xZR09OX1dJTkRJTkcgOiBIT0xFX1BPTFlHT05fV0lORElORyk7XG4gICAgICBob2xlSW5kaWNlcy5wdXNoKHRhcmdldEluZGV4KTtcbiAgICB9XG5cbiAgICBob2xlSW5kaWNlcy5wb3AoKTtcbiAgICByZXR1cm4ge1xuICAgICAgcG9zaXRpb25zLFxuICAgICAgaG9sZUluZGljZXNcbiAgICB9O1xuICB9XG5cbiAgY29weU5lc3RlZFJpbmcocG9zaXRpb25zLCAwLCBwb2x5Z29uLCBwb3NpdGlvblNpemUsIE9VVEVSX1BPTFlHT05fV0lORElORyk7XG4gIHJldHVybiBwb3NpdGlvbnM7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3VyZmFjZUluZGljZXMobm9ybWFsaXplZFBvbHlnb24sIHBvc2l0aW9uU2l6ZSwgcHJlcHJvamVjdCkge1xuICBsZXQgaG9sZUluZGljZXMgPSBudWxsO1xuXG4gIGlmIChub3JtYWxpemVkUG9seWdvbi5ob2xlSW5kaWNlcykge1xuICAgIGhvbGVJbmRpY2VzID0gbm9ybWFsaXplZFBvbHlnb24uaG9sZUluZGljZXMubWFwKHBvc2l0aW9uSW5kZXggPT4gcG9zaXRpb25JbmRleCAvIHBvc2l0aW9uU2l6ZSk7XG4gIH1cblxuICBsZXQgcG9zaXRpb25zID0gbm9ybWFsaXplZFBvbHlnb24ucG9zaXRpb25zIHx8IG5vcm1hbGl6ZWRQb2x5Z29uO1xuXG4gIGlmIChwcmVwcm9qZWN0KSB7XG4gICAgY29uc3QgbiA9IHBvc2l0aW9ucy5sZW5ndGg7XG4gICAgcG9zaXRpb25zID0gcG9zaXRpb25zLnNsaWNlKCk7XG4gICAgY29uc3QgcCA9IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuOyBpICs9IHBvc2l0aW9uU2l6ZSkge1xuICAgICAgcFswXSA9IHBvc2l0aW9uc1tpXTtcbiAgICAgIHBbMV0gPSBwb3NpdGlvbnNbaSArIDFdO1xuICAgICAgY29uc3QgeHkgPSBwcmVwcm9qZWN0KHApO1xuICAgICAgcG9zaXRpb25zW2ldID0geHlbMF07XG4gICAgICBwb3NpdGlvbnNbaSArIDFdID0geHlbMV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGVhcmN1dChwb3NpdGlvbnMsIGhvbGVJbmRpY2VzLCBwb3NpdGlvblNpemUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9seWdvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME solid-polygon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nvarying vec4 vColor;\\n\\nvoid main(void) {\\n  gl_FragColor = vColor;\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\");\n//# sourceMappingURL=solid-polygon-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci1mcmFnbWVudC5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9zb2xpZC1wb2x5Z29uLWxheWVyL3NvbGlkLXBvbHlnb24tbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcz9iZGM4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBzb2xpZC1wb2x5Z29uLWxheWVyLWZyYWdtZW50LXNoYWRlclxcblxcbnByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5cXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XFxuXFxuICBERUNLR0xfRklMVEVSX0NPTE9SKGdsX0ZyYWdDb2xvciwgZ2VvbWV0cnkpO1xcbn1cXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"\\nattribute vec2 vertexPositions;\\nattribute float vertexValid;\\n\\nuniform bool extruded;\\nuniform bool isWireframe;\\nuniform float elevationScale;\\nuniform float opacity;\\n\\nvarying vec4 vColor;\\n\\nstruct PolygonProps {\\n  vec4 fillColors;\\n  vec4 lineColors;\\n  vec3 positions;\\n  vec3 nextPositions;\\n  vec3 pickingColors;\\n  vec3 positions64Low;\\n  vec3 nextPositions64Low;\\n  float elevations;\\n};\\n\\nvec3 project_offset_normal(vec3 vector) {\\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\\n  }\\n  return project_normal(vector);\\n}\\n\\nvoid calculatePosition(PolygonProps props) {\\n#ifdef IS_SIDE_VERTEX\\n  if(vertexValid < 0.5){\\n    gl_Position = vec4(0.);\\n    return;\\n  }\\n#endif\\n\\n  vec3 pos;\\n  vec3 pos64Low;\\n  vec3 normal;\\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\\n\\n  geometry.worldPosition = props.positions;\\n  geometry.worldPositionAlt = props.nextPositions;\\n  geometry.pickingColor = props.pickingColors;\\n\\n#ifdef IS_SIDE_VERTEX\\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\\n#else\\n  pos = props.positions;\\n  pos64Low = props.positions64Low;\\n#endif\\n\\n  if (extruded) {\\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\\n\\n#ifdef IS_SIDE_VERTEX\\n    normal = vec3(\\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\\n      0.0);\\n    normal = project_offset_normal(normal);\\n#else\\n    normal = vec3(0.0, 0.0, 1.0);\\n#endif\\n    geometry.normal = normal;\\n  }\\n\\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n\\n  if (extruded) {\\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\\n    vColor = vec4(lightColor, colors.a * opacity);\\n  } else {\\n    vColor = vec4(colors.rgb, colors.a * opacity);\\n  }\\n  DECKGL_FILTER_COLOR(vColor, geometry);\\n}\\n\");\n//# sourceMappingURL=solid-polygon-layer-vertex-main.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtbWFpbi5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9zb2xpZC1wb2x5Z29uLWxheWVyL3NvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LW1haW4uZ2xzbC5qcz9mYjlhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiXFxuYXR0cmlidXRlIHZlYzIgdmVydGV4UG9zaXRpb25zO1xcbmF0dHJpYnV0ZSBmbG9hdCB2ZXJ0ZXhWYWxpZDtcXG5cXG51bmlmb3JtIGJvb2wgZXh0cnVkZWQ7XFxudW5pZm9ybSBib29sIGlzV2lyZWZyYW1lO1xcbnVuaWZvcm0gZmxvYXQgZWxldmF0aW9uU2NhbGU7XFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcblxcbnZhcnlpbmcgdmVjNCB2Q29sb3I7XFxuXFxuc3RydWN0IFBvbHlnb25Qcm9wcyB7XFxuICB2ZWM0IGZpbGxDb2xvcnM7XFxuICB2ZWM0IGxpbmVDb2xvcnM7XFxuICB2ZWMzIHBvc2l0aW9ucztcXG4gIHZlYzMgbmV4dFBvc2l0aW9ucztcXG4gIHZlYzMgcGlja2luZ0NvbG9ycztcXG4gIHZlYzMgcG9zaXRpb25zNjRMb3c7XFxuICB2ZWMzIG5leHRQb3NpdGlvbnM2NExvdztcXG4gIGZsb2F0IGVsZXZhdGlvbnM7XFxufTtcXG5cXG52ZWMzIHByb2plY3Rfb2Zmc2V0X25vcm1hbCh2ZWMzIHZlY3Rvcikge1xcbiAgaWYgKHByb2plY3RfdUNvb3JkaW5hdGVTeXN0ZW0gPT0gQ09PUkRJTkFURV9TWVNURU1fTE5HTEFUIHx8XFxuICAgIHByb2plY3RfdUNvb3JkaW5hdGVTeXN0ZW0gPT0gQ09PUkRJTkFURV9TWVNURU1fTE5HTEFUX09GRlNFVFMpIHtcXG4gICAgcmV0dXJuIG5vcm1hbGl6ZSh2ZWN0b3IgKiBwcm9qZWN0X3VDb21tb25Vbml0c1BlcldvcmxkVW5pdCk7XFxuICB9XFxuICByZXR1cm4gcHJvamVjdF9ub3JtYWwodmVjdG9yKTtcXG59XFxuXFxudm9pZCBjYWxjdWxhdGVQb3NpdGlvbihQb2x5Z29uUHJvcHMgcHJvcHMpIHtcXG4jaWZkZWYgSVNfU0lERV9WRVJURVhcXG4gIGlmKHZlcnRleFZhbGlkIDwgMC41KXtcXG4gICAgZ2xfUG9zaXRpb24gPSB2ZWM0KDAuKTtcXG4gICAgcmV0dXJuO1xcbiAgfVxcbiNlbmRpZlxcblxcbiAgdmVjMyBwb3M7XFxuICB2ZWMzIHBvczY0TG93O1xcbiAgdmVjMyBub3JtYWw7XFxuICB2ZWM0IGNvbG9ycyA9IGlzV2lyZWZyYW1lID8gcHJvcHMubGluZUNvbG9ycyA6IHByb3BzLmZpbGxDb2xvcnM7XFxuXFxuICBnZW9tZXRyeS53b3JsZFBvc2l0aW9uID0gcHJvcHMucG9zaXRpb25zO1xcbiAgZ2VvbWV0cnkud29ybGRQb3NpdGlvbkFsdCA9IHByb3BzLm5leHRQb3NpdGlvbnM7XFxuICBnZW9tZXRyeS5waWNraW5nQ29sb3IgPSBwcm9wcy5waWNraW5nQ29sb3JzO1xcblxcbiNpZmRlZiBJU19TSURFX1ZFUlRFWFxcbiAgcG9zID0gbWl4KHByb3BzLnBvc2l0aW9ucywgcHJvcHMubmV4dFBvc2l0aW9ucywgdmVydGV4UG9zaXRpb25zLngpO1xcbiAgcG9zNjRMb3cgPSBtaXgocHJvcHMucG9zaXRpb25zNjRMb3csIHByb3BzLm5leHRQb3NpdGlvbnM2NExvdywgdmVydGV4UG9zaXRpb25zLngpO1xcbiNlbHNlXFxuICBwb3MgPSBwcm9wcy5wb3NpdGlvbnM7XFxuICBwb3M2NExvdyA9IHByb3BzLnBvc2l0aW9uczY0TG93O1xcbiNlbmRpZlxcblxcbiAgaWYgKGV4dHJ1ZGVkKSB7XFxuICAgIHBvcy56ICs9IHByb3BzLmVsZXZhdGlvbnMgKiB2ZXJ0ZXhQb3NpdGlvbnMueSAqIGVsZXZhdGlvblNjYWxlO1xcblxcbiNpZmRlZiBJU19TSURFX1ZFUlRFWFxcbiAgICBub3JtYWwgPSB2ZWMzKFxcbiAgICAgIHByb3BzLnBvc2l0aW9ucy55IC0gcHJvcHMubmV4dFBvc2l0aW9ucy55ICsgKHByb3BzLnBvc2l0aW9uczY0TG93LnkgLSBwcm9wcy5uZXh0UG9zaXRpb25zNjRMb3cueSksXFxuICAgICAgcHJvcHMubmV4dFBvc2l0aW9ucy54IC0gcHJvcHMucG9zaXRpb25zLnggKyAocHJvcHMubmV4dFBvc2l0aW9uczY0TG93LnggLSBwcm9wcy5wb3NpdGlvbnM2NExvdy54KSxcXG4gICAgICAwLjApO1xcbiAgICBub3JtYWwgPSBwcm9qZWN0X29mZnNldF9ub3JtYWwobm9ybWFsKTtcXG4jZWxzZVxcbiAgICBub3JtYWwgPSB2ZWMzKDAuMCwgMC4wLCAxLjApO1xcbiNlbmRpZlxcbiAgICBnZW9tZXRyeS5ub3JtYWwgPSBub3JtYWw7XFxuICB9XFxuXFxuICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKHBvcywgcG9zNjRMb3csIHZlYzMoMC4pLCBnZW9tZXRyeS5wb3NpdGlvbik7XFxuICBERUNLR0xfRklMVEVSX0dMX1BPU0lUSU9OKGdsX1Bvc2l0aW9uLCBnZW9tZXRyeSk7XFxuXFxuICBpZiAoZXh0cnVkZWQpIHtcXG4gICAgdmVjMyBsaWdodENvbG9yID0gbGlnaHRpbmdfZ2V0TGlnaHRDb2xvcihjb2xvcnMucmdiLCBwcm9qZWN0X3VDYW1lcmFQb3NpdGlvbiwgZ2VvbWV0cnkucG9zaXRpb24ueHl6LCBub3JtYWwpO1xcbiAgICB2Q29sb3IgPSB2ZWM0KGxpZ2h0Q29sb3IsIGNvbG9ycy5hICogb3BhY2l0eSk7XFxuICB9IGVsc2Uge1xcbiAgICB2Q29sb3IgPSB2ZWM0KGNvbG9ycy5yZ2IsIGNvbG9ycy5hICogb3BhY2l0eSk7XFxuICB9XFxuICBERUNLR0xfRklMVEVSX0NPTE9SKHZDb2xvciwgZ2VvbWV0cnkpO1xcbn1cXG5cIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LW1haW4uZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js ***!
  \***********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-main.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME solid-polygon-layer-vertex-shader-side\\n#define IS_SIDE_VERTEX\\n\\n\\nattribute vec3 instancePositions;\\nattribute vec3 nextPositions;\\nattribute vec3 instancePositions64Low;\\nattribute vec3 nextPositions64Low;\\nattribute float instanceElevations;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\n\".concat(_solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"], \"\\n\\nvoid main(void) {\\n  PolygonProps props;\\n\\n  #if RING_WINDING_ORDER_CW == 1\\n    props.positions = instancePositions;\\n    props.positions64Low = instancePositions64Low;\\n    props.nextPositions = nextPositions;\\n    props.nextPositions64Low = nextPositions64Low;\\n  #else\\n    props.positions = nextPositions;\\n    props.positions64Low = nextPositions64Low;\\n    props.nextPositions = instancePositions;\\n    props.nextPositions64Low = instancePositions64Low;\\n  #endif\\n  props.elevations = instanceElevations;\\n  props.fillColors = instanceFillColors;\\n  props.lineColors = instanceLineColors;\\n  props.pickingColors = instancePickingColors;\\n\\n  calculatePosition(props);\\n}\\n\"));\n//# sourceMappingURL=solid-polygon-layer-vertex-side.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtc2lkZS5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS9zb2xpZC1wb2x5Z29uLWxheWVyL3NvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LXNpZGUuZ2xzbC5qcz9kM2JlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtYWluIGZyb20gJy4vc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtbWFpbi5nbHNsJztcbmV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSBzb2xpZC1wb2x5Z29uLWxheWVyLXZlcnRleC1zaGFkZXItc2lkZVxcbiNkZWZpbmUgSVNfU0lERV9WRVJURVhcXG5cXG5cXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBvc2l0aW9ucztcXG5hdHRyaWJ1dGUgdmVjMyBuZXh0UG9zaXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zNjRMb3c7XFxuYXR0cmlidXRlIHZlYzMgbmV4dFBvc2l0aW9uczY0TG93O1xcbmF0dHJpYnV0ZSBmbG9hdCBpbnN0YW5jZUVsZXZhdGlvbnM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VGaWxsQ29sb3JzO1xcbmF0dHJpYnV0ZSB2ZWM0IGluc3RhbmNlTGluZUNvbG9ycztcXG5hdHRyaWJ1dGUgdmVjMyBpbnN0YW5jZVBpY2tpbmdDb2xvcnM7XFxuXFxuXCIuY29uY2F0KG1haW4sIFwiXFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIFBvbHlnb25Qcm9wcyBwcm9wcztcXG5cXG4gICNpZiBSSU5HX1dJTkRJTkdfT1JERVJfQ1cgPT0gMVxcbiAgICBwcm9wcy5wb3NpdGlvbnMgPSBpbnN0YW5jZVBvc2l0aW9ucztcXG4gICAgcHJvcHMucG9zaXRpb25zNjRMb3cgPSBpbnN0YW5jZVBvc2l0aW9uczY0TG93O1xcbiAgICBwcm9wcy5uZXh0UG9zaXRpb25zID0gbmV4dFBvc2l0aW9ucztcXG4gICAgcHJvcHMubmV4dFBvc2l0aW9uczY0TG93ID0gbmV4dFBvc2l0aW9uczY0TG93O1xcbiAgI2Vsc2VcXG4gICAgcHJvcHMucG9zaXRpb25zID0gbmV4dFBvc2l0aW9ucztcXG4gICAgcHJvcHMucG9zaXRpb25zNjRMb3cgPSBuZXh0UG9zaXRpb25zNjRMb3c7XFxuICAgIHByb3BzLm5leHRQb3NpdGlvbnMgPSBpbnN0YW5jZVBvc2l0aW9ucztcXG4gICAgcHJvcHMubmV4dFBvc2l0aW9uczY0TG93ID0gaW5zdGFuY2VQb3NpdGlvbnM2NExvdztcXG4gICNlbmRpZlxcbiAgcHJvcHMuZWxldmF0aW9ucyA9IGluc3RhbmNlRWxldmF0aW9ucztcXG4gIHByb3BzLmZpbGxDb2xvcnMgPSBpbnN0YW5jZUZpbGxDb2xvcnM7XFxuICBwcm9wcy5saW5lQ29sb3JzID0gaW5zdGFuY2VMaW5lQ29sb3JzO1xcbiAgcHJvcHMucGlja2luZ0NvbG9ycyA9IGluc3RhbmNlUGlja2luZ0NvbG9ycztcXG5cXG4gIGNhbGN1bGF0ZVBvc2l0aW9uKHByb3BzKTtcXG59XFxuXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtc2lkZS5nbHNsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-main.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME solid-polygon-layer-vertex-shader\\n\\nattribute vec3 positions;\\nattribute vec3 positions64Low;\\nattribute float elevations;\\nattribute vec4 fillColors;\\nattribute vec4 lineColors;\\nattribute vec3 pickingColors;\\n\\n\".concat(_solid_polygon_layer_vertex_main_glsl__WEBPACK_IMPORTED_MODULE_0__[\"default\"], \"\\n\\nvoid main(void) {\\n  PolygonProps props;\\n\\n  props.positions = positions;\\n  props.positions64Low = positions64Low;\\n  props.elevations = elevations;\\n  props.fillColors = fillColors;\\n  props.lineColors = lineColors;\\n  props.pickingColors = pickingColors;\\n\\n  calculatePosition(props);\\n}\\n\"));\n//# sourceMappingURL=solid-polygon-layer-vertex-top.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtdG9wLmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3NvbGlkLXBvbHlnb24tbGF5ZXIvc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtdG9wLmdsc2wuanM/MTM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWFpbiBmcm9tICcuL3NvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LW1haW4uZ2xzbCc7XG5leHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgc29saWQtcG9seWdvbi1sYXllci12ZXJ0ZXgtc2hhZGVyXFxuXFxuYXR0cmlidXRlIHZlYzMgcG9zaXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uczY0TG93O1xcbmF0dHJpYnV0ZSBmbG9hdCBlbGV2YXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWM0IGZpbGxDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzQgbGluZUNvbG9ycztcXG5hdHRyaWJ1dGUgdmVjMyBwaWNraW5nQ29sb3JzO1xcblxcblwiLmNvbmNhdChtYWluLCBcIlxcblxcbnZvaWQgbWFpbih2b2lkKSB7XFxuICBQb2x5Z29uUHJvcHMgcHJvcHM7XFxuXFxuICBwcm9wcy5wb3NpdGlvbnMgPSBwb3NpdGlvbnM7XFxuICBwcm9wcy5wb3NpdGlvbnM2NExvdyA9IHBvc2l0aW9uczY0TG93O1xcbiAgcHJvcHMuZWxldmF0aW9ucyA9IGVsZXZhdGlvbnM7XFxuICBwcm9wcy5maWxsQ29sb3JzID0gZmlsbENvbG9ycztcXG4gIHByb3BzLmxpbmVDb2xvcnMgPSBsaW5lQ29sb3JzO1xcbiAgcHJvcHMucGlja2luZ0NvbG9ycyA9IHBpY2tpbmdDb2xvcnM7XFxuXFxuICBjYWxjdWxhdGVQb3NpdGlvbihwcm9wcyk7XFxufVxcblwiKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNvbGlkLXBvbHlnb24tbGF5ZXItdmVydGV4LXRvcC5nbHNsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SolidPolygonLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@luma.gl/shadertools/dist/esm/modules/phong-lighting/phong-lighting.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/constants.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/features/features.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/webgl/dist/esm/features/webgl-features-table.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _polygon_tesselator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./polygon-tesselator */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/polygon-tesselator.js\");\n/* harmony import */ var _solid_polygon_layer_vertex_top_glsl__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-top.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js\");\n/* harmony import */ var _solid_polygon_layer_vertex_side_glsl__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./solid-polygon-layer-vertex-side.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js\");\n/* harmony import */ var _solid_polygon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./solid-polygon-layer-fragment.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js\");\n\n\n\n\n\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst defaultProps = {\n  filled: true,\n  extruded: false,\n  wireframe: false,\n  _normalize: true,\n  _windingOrder: 'CW',\n  elevationScale: {\n    type: 'number',\n    min: 0,\n    value: 1\n  },\n  getPolygon: {\n    type: 'accessor',\n    value: f => f.polygon\n  },\n  getElevation: {\n    type: 'accessor',\n    value: 1000\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  material: true\n};\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\nclass SolidPolygonLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  getShaders(type) {\n    return super.getShaders({\n      vs: type === 'top' ? _solid_polygon_layer_vertex_top_glsl__WEBPACK_IMPORTED_MODULE_10__[\"default\"] : _solid_polygon_layer_vertex_side_glsl__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n      fs: _solid_polygon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n      defines: {\n        RING_WINDING_ORDER_CW: !this.props._normalize && this.props._windingOrder === 'CCW' ? 0 : 1\n      },\n      modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"gouraudLighting\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"]]\n    });\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const {\n      gl,\n      viewport\n    } = this.context;\n    let {\n      coordinateSystem\n    } = this.props;\n\n    if (viewport.isGeospatial && coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"COORDINATE_SYSTEM\"].DEFAULT) {\n      coordinateSystem = _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"COORDINATE_SYSTEM\"].LNGLAT;\n    }\n\n    this.setState({\n      numInstances: 0,\n      polygonTesselator: new _polygon_tesselator__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({\n        preproject: coordinateSystem === _deck_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"COORDINATE_SYSTEM\"].LNGLAT && viewport.projectFlat,\n        fp64: this.use64bitPositions(),\n        IndexType: !gl || Object(_luma_gl_core__WEBPACK_IMPORTED_MODULE_5__[\"hasFeatures\"])(gl, _luma_gl_core__WEBPACK_IMPORTED_MODULE_6__[\"FEATURES\"].ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array\n      })\n    });\n    const attributeManager = this.getAttributeManager();\n    const noAlloc = true;\n    attributeManager.remove(['instancePickingColors']);\n    attributeManager.add({\n      indices: {\n        size: 1,\n        isIndexed: true,\n        update: this.calculateIndices,\n        noAlloc\n      },\n      positions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPolygon',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          positions: {\n            vertexOffset: 0,\n            divisor: 0\n          },\n          instancePositions: {\n            vertexOffset: 0,\n            divisor: 1\n          },\n          nextPositions: {\n            vertexOffset: 1,\n            divisor: 1\n          }\n        }\n      },\n      vertexValid: {\n        size: 1,\n        divisor: 1,\n        type: 5121,\n        update: this.calculateVertexValid,\n        noAlloc\n      },\n      elevations: {\n        size: 1,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getElevation',\n        shaderAttributes: {\n          elevations: {\n            divisor: 0\n          },\n          instanceElevations: {\n            divisor: 1\n          }\n        }\n      },\n      fillColors: {\n        alias: 'colors',\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getFillColor',\n        defaultValue: DEFAULT_COLOR,\n        shaderAttributes: {\n          fillColors: {\n            divisor: 0\n          },\n          instanceFillColors: {\n            divisor: 1\n          }\n        }\n      },\n      lineColors: {\n        alias: 'colors',\n        size: this.props.colorFormat.length,\n        type: 5121,\n        normalized: true,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getLineColor',\n        defaultValue: DEFAULT_COLOR,\n        shaderAttributes: {\n          lineColors: {\n            divisor: 0\n          },\n          instanceLineColors: {\n            divisor: 1\n          }\n        }\n      },\n      pickingColors: {\n        size: 3,\n        type: 5121,\n        accessor: (object, {\n          index,\n          target: value\n        }) => this.encodePickingColor(object && object.__source ? object.__source.index : index, value),\n        shaderAttributes: {\n          pickingColors: {\n            divisor: 0\n          },\n          instancePickingColors: {\n            divisor: 1\n          }\n        }\n      }\n    });\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {\n      index\n    } = info;\n    const {\n      data\n    } = this.props;\n\n    if (data[0] && data[0].__source) {\n      info.object = data.find(d => d.__source.index === index);\n    }\n\n    return info;\n  }\n\n  disablePickingIndex(objectIndex) {\n    const {\n      data\n    } = this.props;\n\n    if (data[0] && data[0].__source) {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].__source.index === objectIndex) {\n          this._disablePickingIndex(i);\n        }\n      }\n    } else {\n      this._disablePickingIndex(objectIndex);\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      extruded,\n      filled,\n      wireframe,\n      elevationScale\n    } = this.props;\n    const {\n      topModel,\n      sideModel,\n      polygonTesselator\n    } = this.state;\n    const renderUniforms = { ...uniforms,\n      extruded: Boolean(extruded),\n      elevationScale\n    };\n\n    if (sideModel) {\n      sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n      sideModel.setUniforms(renderUniforms);\n\n      if (wireframe) {\n        sideModel.setDrawMode(3);\n        sideModel.setUniforms({\n          isWireframe: true\n        }).draw();\n      }\n\n      if (filled) {\n        sideModel.setDrawMode(6);\n        sideModel.setUniforms({\n          isWireframe: false\n        }).draw();\n      }\n    }\n\n    if (topModel) {\n      topModel.setVertexCount(polygonTesselator.vertexCount);\n      topModel.setUniforms(renderUniforms).draw();\n    }\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n    this.updateGeometry(updateParams);\n    const {\n      props,\n      oldProps,\n      changeFlags\n    } = updateParams;\n    const attributeManager = this.getAttributeManager();\n    const regenerateModels = changeFlags.extensionsChanged || props.filled !== oldProps.filled || props.extruded !== oldProps.extruded;\n\n    if (regenerateModels) {\n      var _this$state$models;\n\n      (_this$state$models = this.state.models) === null || _this$state$models === void 0 ? void 0 : _this$state$models.forEach(model => model.delete());\n      this.setState(this._getModels(this.context.gl));\n      attributeManager.invalidateAll();\n    }\n  }\n\n  updateGeometry({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    const geometryConfigChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon);\n\n    if (geometryConfigChanged) {\n      const {\n        polygonTesselator\n      } = this.state;\n      const buffers = props.data.attributes || {};\n      polygonTesselator.updateGeometry({\n        data: props.data,\n        normalize: props._normalize,\n        geometryBuffer: buffers.getPolygon,\n        buffers,\n        getGeometry: props.getPolygon,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        resolution: this.context.viewport.resolution,\n        fp64: this.use64bitPositions(),\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: polygonTesselator.instanceCount,\n        startIndices: polygonTesselator.vertexStarts\n      });\n\n      if (!changeFlags.dataChanged) {\n        this.getAttributeManager().invalidateAll();\n      }\n    }\n  }\n\n  _getModels(gl) {\n    const {\n      id,\n      filled,\n      extruded\n    } = this.props;\n    let topModel;\n    let sideModel;\n\n    if (filled) {\n      const shaders = this.getShaders('top');\n      shaders.defines.NON_INSTANCED_MODEL = 1;\n      topModel = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"](gl, { ...shaders,\n        id: \"\".concat(id, \"-top\"),\n        drawMode: 4,\n        attributes: {\n          vertexPositions: new Float32Array([0, 1])\n        },\n        uniforms: {\n          isWireframe: false,\n          isSideVertex: false\n        },\n        vertexCount: 0,\n        isIndexed: true\n      });\n    }\n\n    if (extruded) {\n      sideModel = new _luma_gl_core__WEBPACK_IMPORTED_MODULE_7__[\"default\"](gl, { ...this.getShaders('side'),\n        id: \"\".concat(id, \"-side\"),\n        geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n          drawMode: 1,\n          vertexCount: 4,\n          attributes: {\n            vertexPositions: {\n              size: 2,\n              value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])\n            }\n          }\n        }),\n        instanceCount: 0,\n        isInstanced: 1\n      });\n      sideModel.userData.excludeAttributes = {\n        indices: true\n      };\n    }\n\n    return {\n      models: [sideModel, topModel].filter(Boolean),\n      topModel,\n      sideModel\n    };\n  }\n\n  calculateIndices(attribute) {\n    const {\n      polygonTesselator\n    } = this.state;\n    attribute.startIndices = polygonTesselator.indexStarts;\n    attribute.value = polygonTesselator.get('indices');\n  }\n\n  calculatePositions(attribute) {\n    const {\n      polygonTesselator\n    } = this.state;\n    attribute.startIndices = polygonTesselator.vertexStarts;\n    attribute.value = polygonTesselator.get('positions');\n  }\n\n  calculateVertexValid(attribute) {\n    attribute.value = this.state.polygonTesselator.get('vertexValid');\n  }\n\n}\nSolidPolygonLayer.layerName = 'SolidPolygonLayer';\nSolidPolygonLayer.defaultProps = defaultProps;\n//# sourceMappingURL=solid-polygon-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/solid-polygon-layer/solid-polygon-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js ***!
  \********************************************************************************/
/*! exports provided: DEFAULT_CHAR_SET, DEFAULT_FONT_FAMILY, DEFAULT_FONT_WEIGHT, DEFAULT_FONT_SIZE, DEFAULT_BUFFER, DEFAULT_CUTOFF, DEFAULT_RADIUS, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CHAR_SET\", function() { return DEFAULT_CHAR_SET; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_FONT_FAMILY\", function() { return DEFAULT_FONT_FAMILY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_FONT_WEIGHT\", function() { return DEFAULT_FONT_WEIGHT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_FONT_SIZE\", function() { return DEFAULT_FONT_SIZE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_BUFFER\", function() { return DEFAULT_BUFFER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_CUTOFF\", function() { return DEFAULT_CUTOFF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_RADIUS\", function() { return DEFAULT_RADIUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FontAtlasManager; });\n/* harmony import */ var _mapbox_tiny_sdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mapbox/tiny-sdf */ \"./node_modules/@mapbox/tiny-sdf/index.js\");\n/* harmony import */ var _mapbox_tiny_sdf__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mapbox_tiny_sdf__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js\");\n/* harmony import */ var _lru_cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lru-cache */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js\");\n\n\n\n\nfunction getDefaultCharacterSet() {\n  const charSet = [];\n\n  for (let i = 32; i < 128; i++) {\n    charSet.push(String.fromCharCode(i));\n  }\n\n  return charSet;\n}\n\nconst DEFAULT_CHAR_SET = getDefaultCharacterSet();\nconst DEFAULT_FONT_FAMILY = 'Monaco, monospace';\nconst DEFAULT_FONT_WEIGHT = 'normal';\nconst DEFAULT_FONT_SIZE = 64;\nconst DEFAULT_BUFFER = 4;\nconst DEFAULT_CUTOFF = 0.25;\nconst DEFAULT_RADIUS = 12;\nconst MAX_CANVAS_WIDTH = 1024;\nconst BASELINE_SCALE = 0.9;\nconst HEIGHT_SCALE = 1.2;\nconst CACHE_LIMIT = 3;\nconst cache = new _lru_cache__WEBPACK_IMPORTED_MODULE_2__[\"default\"](CACHE_LIMIT);\nconst VALID_PROPS = ['fontFamily', 'fontWeight', 'characterSet', 'fontSize', 'sdf', 'buffer', 'cutoff', 'radius'];\n\nfunction getNewChars(key, characterSet) {\n  const cachedFontAtlas = cache.get(key);\n\n  if (!cachedFontAtlas) {\n    return characterSet;\n  }\n\n  const newChars = [];\n  const cachedMapping = cachedFontAtlas.mapping;\n  let cachedCharSet = Object.keys(cachedMapping);\n  cachedCharSet = new Set(cachedCharSet);\n  let charSet = characterSet;\n\n  if (charSet instanceof Array) {\n    charSet = new Set(charSet);\n  }\n\n  charSet.forEach(char => {\n    if (!cachedCharSet.has(char)) {\n      newChars.push(char);\n    }\n  });\n  return newChars;\n}\n\nfunction populateAlphaChannel(alphaChannel, imageData) {\n  for (let i = 0; i < alphaChannel.length; i++) {\n    imageData.data[4 * i + 3] = alphaChannel[i];\n  }\n}\n\nfunction setTextStyle(ctx, fontFamily, fontSize, fontWeight) {\n  ctx.font = \"\".concat(fontWeight, \" \").concat(fontSize, \"px \").concat(fontFamily);\n  ctx.fillStyle = '#000';\n  ctx.textBaseline = 'baseline';\n  ctx.textAlign = 'left';\n}\n\nclass FontAtlasManager {\n  constructor() {\n    this.props = {\n      fontFamily: DEFAULT_FONT_FAMILY,\n      fontWeight: DEFAULT_FONT_WEIGHT,\n      characterSet: DEFAULT_CHAR_SET,\n      fontSize: DEFAULT_FONT_SIZE,\n      buffer: DEFAULT_BUFFER,\n      sdf: false,\n      cutoff: DEFAULT_CUTOFF,\n      radius: DEFAULT_RADIUS\n    };\n    this._key = null;\n    this._atlas = null;\n  }\n\n  get texture() {\n    return this._atlas;\n  }\n\n  get mapping() {\n    return this._atlas && this._atlas.mapping;\n  }\n\n  get scale() {\n    return HEIGHT_SCALE;\n  }\n\n  setProps(props = {}) {\n    VALID_PROPS.forEach(prop => {\n      if (prop in props) {\n        this.props[prop] = props[prop];\n      }\n    });\n    const oldKey = this._key;\n    this._key = this._getKey();\n    const charSet = getNewChars(this._key, this.props.characterSet);\n    const cachedFontAtlas = cache.get(this._key);\n\n    if (cachedFontAtlas && charSet.length === 0) {\n      if (this._key !== oldKey) {\n        this._atlas = cachedFontAtlas;\n      }\n\n      return;\n    }\n\n    const fontAtlas = this._generateFontAtlas(this._key, charSet, cachedFontAtlas);\n\n    this._atlas = fontAtlas;\n    cache.set(this._key, fontAtlas);\n  }\n\n  _generateFontAtlas(key, characterSet, cachedFontAtlas) {\n    const {\n      fontFamily,\n      fontWeight,\n      fontSize,\n      buffer,\n      sdf,\n      radius,\n      cutoff\n    } = this.props;\n    let canvas = cachedFontAtlas && cachedFontAtlas.data;\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      canvas.width = MAX_CANVAS_WIDTH;\n    }\n\n    const ctx = canvas.getContext('2d');\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n    const {\n      mapping,\n      canvasHeight,\n      xOffset,\n      yOffset\n    } = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"buildMapping\"])({\n      getFontWidth: char => ctx.measureText(char).width,\n      fontHeight: fontSize * HEIGHT_SCALE,\n      buffer,\n      characterSet,\n      maxCanvasWidth: MAX_CANVAS_WIDTH,\n      ...(cachedFontAtlas && {\n        mapping: cachedFontAtlas.mapping,\n        xOffset: cachedFontAtlas.xOffset,\n        yOffset: cachedFontAtlas.yOffset\n      })\n    });\n\n    if (canvas.height !== canvasHeight) {\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      canvas.height = canvasHeight;\n      ctx.putImageData(imageData, 0, 0);\n    }\n\n    setTextStyle(ctx, fontFamily, fontSize, fontWeight);\n\n    if (sdf) {\n      const tinySDF = new _mapbox_tiny_sdf__WEBPACK_IMPORTED_MODULE_0___default.a(fontSize, buffer, radius, cutoff, fontFamily, fontWeight);\n      const imageData = ctx.getImageData(0, 0, tinySDF.size, tinySDF.size);\n\n      for (const char of characterSet) {\n        populateAlphaChannel(tinySDF.draw(char), imageData);\n        ctx.putImageData(imageData, mapping[char].x - buffer, mapping[char].y + buffer);\n      }\n    } else {\n      for (const char of characterSet) {\n        ctx.fillText(char, mapping[char].x, mapping[char].y + fontSize * BASELINE_SCALE);\n      }\n    }\n\n    return {\n      xOffset,\n      yOffset,\n      mapping,\n      data: canvas,\n      width: canvas.width,\n      height: canvas.height\n    };\n  }\n\n  _getKey() {\n    const {\n      fontFamily,\n      fontWeight,\n      fontSize,\n      buffer,\n      sdf,\n      radius,\n      cutoff\n    } = this.props;\n\n    if (sdf) {\n      return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer, \" \").concat(radius, \" \").concat(cutoff);\n    }\n\n    return \"\".concat(fontFamily, \" \").concat(fontWeight, \" \").concat(fontSize, \" \").concat(buffer);\n  }\n\n}\n//# sourceMappingURL=font-atlas-manager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvZm9udC1hdGxhcy1tYW5hZ2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS90ZXh0LWxheWVyL2ZvbnQtYXRsYXMtbWFuYWdlci5qcz8yNmYwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBUaW55U0RGIGZyb20gJ0BtYXBib3gvdGlueS1zZGYnO1xuaW1wb3J0IHsgYnVpbGRNYXBwaW5nIH0gZnJvbSAnLi91dGlscyc7XG5pbXBvcnQgTFJVQ2FjaGUgZnJvbSAnLi9scnUtY2FjaGUnO1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0Q2hhcmFjdGVyU2V0KCkge1xuICBjb25zdCBjaGFyU2V0ID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDMyOyBpIDwgMTI4OyBpKyspIHtcbiAgICBjaGFyU2V0LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShpKSk7XG4gIH1cblxuICByZXR1cm4gY2hhclNldDtcbn1cblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ0hBUl9TRVQgPSBnZXREZWZhdWx0Q2hhcmFjdGVyU2V0KCk7XG5leHBvcnQgY29uc3QgREVGQVVMVF9GT05UX0ZBTUlMWSA9ICdNb25hY28sIG1vbm9zcGFjZSc7XG5leHBvcnQgY29uc3QgREVGQVVMVF9GT05UX1dFSUdIVCA9ICdub3JtYWwnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfRk9OVF9TSVpFID0gNjQ7XG5leHBvcnQgY29uc3QgREVGQVVMVF9CVUZGRVIgPSA0O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ1VUT0ZGID0gMC4yNTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1JBRElVUyA9IDEyO1xuY29uc3QgTUFYX0NBTlZBU19XSURUSCA9IDEwMjQ7XG5jb25zdCBCQVNFTElORV9TQ0FMRSA9IDAuOTtcbmNvbnN0IEhFSUdIVF9TQ0FMRSA9IDEuMjtcbmNvbnN0IENBQ0hFX0xJTUlUID0gMztcbmNvbnN0IGNhY2hlID0gbmV3IExSVUNhY2hlKENBQ0hFX0xJTUlUKTtcbmNvbnN0IFZBTElEX1BST1BTID0gWydmb250RmFtaWx5JywgJ2ZvbnRXZWlnaHQnLCAnY2hhcmFjdGVyU2V0JywgJ2ZvbnRTaXplJywgJ3NkZicsICdidWZmZXInLCAnY3V0b2ZmJywgJ3JhZGl1cyddO1xuXG5mdW5jdGlvbiBnZXROZXdDaGFycyhrZXksIGNoYXJhY3RlclNldCkge1xuICBjb25zdCBjYWNoZWRGb250QXRsYXMgPSBjYWNoZS5nZXQoa2V5KTtcblxuICBpZiAoIWNhY2hlZEZvbnRBdGxhcykge1xuICAgIHJldHVybiBjaGFyYWN0ZXJTZXQ7XG4gIH1cblxuICBjb25zdCBuZXdDaGFycyA9IFtdO1xuICBjb25zdCBjYWNoZWRNYXBwaW5nID0gY2FjaGVkRm9udEF0bGFzLm1hcHBpbmc7XG4gIGxldCBjYWNoZWRDaGFyU2V0ID0gT2JqZWN0LmtleXMoY2FjaGVkTWFwcGluZyk7XG4gIGNhY2hlZENoYXJTZXQgPSBuZXcgU2V0KGNhY2hlZENoYXJTZXQpO1xuICBsZXQgY2hhclNldCA9IGNoYXJhY3RlclNldDtcblxuICBpZiAoY2hhclNldCBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgY2hhclNldCA9IG5ldyBTZXQoY2hhclNldCk7XG4gIH1cblxuICBjaGFyU2V0LmZvckVhY2goY2hhciA9PiB7XG4gICAgaWYgKCFjYWNoZWRDaGFyU2V0LmhhcyhjaGFyKSkge1xuICAgICAgbmV3Q2hhcnMucHVzaChjaGFyKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gbmV3Q2hhcnM7XG59XG5cbmZ1bmN0aW9uIHBvcHVsYXRlQWxwaGFDaGFubmVsKGFscGhhQ2hhbm5lbCwgaW1hZ2VEYXRhKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYWxwaGFDaGFubmVsLmxlbmd0aDsgaSsrKSB7XG4gICAgaW1hZ2VEYXRhLmRhdGFbNCAqIGkgKyAzXSA9IGFscGhhQ2hhbm5lbFtpXTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRUZXh0U3R5bGUoY3R4LCBmb250RmFtaWx5LCBmb250U2l6ZSwgZm9udFdlaWdodCkge1xuICBjdHguZm9udCA9IFwiXCIuY29uY2F0KGZvbnRXZWlnaHQsIFwiIFwiKS5jb25jYXQoZm9udFNpemUsIFwicHggXCIpLmNvbmNhdChmb250RmFtaWx5KTtcbiAgY3R4LmZpbGxTdHlsZSA9ICcjMDAwJztcbiAgY3R4LnRleHRCYXNlbGluZSA9ICdiYXNlbGluZSc7XG4gIGN0eC50ZXh0QWxpZ24gPSAnbGVmdCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvbnRBdGxhc01hbmFnZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnByb3BzID0ge1xuICAgICAgZm9udEZhbWlseTogREVGQVVMVF9GT05UX0ZBTUlMWSxcbiAgICAgIGZvbnRXZWlnaHQ6IERFRkFVTFRfRk9OVF9XRUlHSFQsXG4gICAgICBjaGFyYWN0ZXJTZXQ6IERFRkFVTFRfQ0hBUl9TRVQsXG4gICAgICBmb250U2l6ZTogREVGQVVMVF9GT05UX1NJWkUsXG4gICAgICBidWZmZXI6IERFRkFVTFRfQlVGRkVSLFxuICAgICAgc2RmOiBmYWxzZSxcbiAgICAgIGN1dG9mZjogREVGQVVMVF9DVVRPRkYsXG4gICAgICByYWRpdXM6IERFRkFVTFRfUkFESVVTXG4gICAgfTtcbiAgICB0aGlzLl9rZXkgPSBudWxsO1xuICAgIHRoaXMuX2F0bGFzID0gbnVsbDtcbiAgfVxuXG4gIGdldCB0ZXh0dXJlKCkge1xuICAgIHJldHVybiB0aGlzLl9hdGxhcztcbiAgfVxuXG4gIGdldCBtYXBwaW5nKCkge1xuICAgIHJldHVybiB0aGlzLl9hdGxhcyAmJiB0aGlzLl9hdGxhcy5tYXBwaW5nO1xuICB9XG5cbiAgZ2V0IHNjYWxlKCkge1xuICAgIHJldHVybiBIRUlHSFRfU0NBTEU7XG4gIH1cblxuICBzZXRQcm9wcyhwcm9wcyA9IHt9KSB7XG4gICAgVkFMSURfUFJPUFMuZm9yRWFjaChwcm9wID0+IHtcbiAgICAgIGlmIChwcm9wIGluIHByb3BzKSB7XG4gICAgICAgIHRoaXMucHJvcHNbcHJvcF0gPSBwcm9wc1twcm9wXTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCBvbGRLZXkgPSB0aGlzLl9rZXk7XG4gICAgdGhpcy5fa2V5ID0gdGhpcy5fZ2V0S2V5KCk7XG4gICAgY29uc3QgY2hhclNldCA9IGdldE5ld0NoYXJzKHRoaXMuX2tleSwgdGhpcy5wcm9wcy5jaGFyYWN0ZXJTZXQpO1xuICAgIGNvbnN0IGNhY2hlZEZvbnRBdGxhcyA9IGNhY2hlLmdldCh0aGlzLl9rZXkpO1xuXG4gICAgaWYgKGNhY2hlZEZvbnRBdGxhcyAmJiBjaGFyU2V0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgaWYgKHRoaXMuX2tleSAhPT0gb2xkS2V5KSB7XG4gICAgICAgIHRoaXMuX2F0bGFzID0gY2FjaGVkRm9udEF0bGFzO1xuICAgICAgfVxuXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZm9udEF0bGFzID0gdGhpcy5fZ2VuZXJhdGVGb250QXRsYXModGhpcy5fa2V5LCBjaGFyU2V0LCBjYWNoZWRGb250QXRsYXMpO1xuXG4gICAgdGhpcy5fYXRsYXMgPSBmb250QXRsYXM7XG4gICAgY2FjaGUuc2V0KHRoaXMuX2tleSwgZm9udEF0bGFzKTtcbiAgfVxuXG4gIF9nZW5lcmF0ZUZvbnRBdGxhcyhrZXksIGNoYXJhY3RlclNldCwgY2FjaGVkRm9udEF0bGFzKSB7XG4gICAgY29uc3Qge1xuICAgICAgZm9udEZhbWlseSxcbiAgICAgIGZvbnRXZWlnaHQsXG4gICAgICBmb250U2l6ZSxcbiAgICAgIGJ1ZmZlcixcbiAgICAgIHNkZixcbiAgICAgIHJhZGl1cyxcbiAgICAgIGN1dG9mZlxuICAgIH0gPSB0aGlzLnByb3BzO1xuICAgIGxldCBjYW52YXMgPSBjYWNoZWRGb250QXRsYXMgJiYgY2FjaGVkRm9udEF0bGFzLmRhdGE7XG5cbiAgICBpZiAoIWNhbnZhcykge1xuICAgICAgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICBjYW52YXMud2lkdGggPSBNQVhfQ0FOVkFTX1dJRFRIO1xuICAgIH1cblxuICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgIHNldFRleHRTdHlsZShjdHgsIGZvbnRGYW1pbHksIGZvbnRTaXplLCBmb250V2VpZ2h0KTtcbiAgICBjb25zdCB7XG4gICAgICBtYXBwaW5nLFxuICAgICAgY2FudmFzSGVpZ2h0LFxuICAgICAgeE9mZnNldCxcbiAgICAgIHlPZmZzZXRcbiAgICB9ID0gYnVpbGRNYXBwaW5nKHtcbiAgICAgIGdldEZvbnRXaWR0aDogY2hhciA9PiBjdHgubWVhc3VyZVRleHQoY2hhcikud2lkdGgsXG4gICAgICBmb250SGVpZ2h0OiBmb250U2l6ZSAqIEhFSUdIVF9TQ0FMRSxcbiAgICAgIGJ1ZmZlcixcbiAgICAgIGNoYXJhY3RlclNldCxcbiAgICAgIG1heENhbnZhc1dpZHRoOiBNQVhfQ0FOVkFTX1dJRFRILFxuICAgICAgLi4uKGNhY2hlZEZvbnRBdGxhcyAmJiB7XG4gICAgICAgIG1hcHBpbmc6IGNhY2hlZEZvbnRBdGxhcy5tYXBwaW5nLFxuICAgICAgICB4T2Zmc2V0OiBjYWNoZWRGb250QXRsYXMueE9mZnNldCxcbiAgICAgICAgeU9mZnNldDogY2FjaGVkRm9udEF0bGFzLnlPZmZzZXRcbiAgICAgIH0pXG4gICAgfSk7XG5cbiAgICBpZiAoY2FudmFzLmhlaWdodCAhPT0gY2FudmFzSGVpZ2h0KSB7XG4gICAgICBjb25zdCBpbWFnZURhdGEgPSBjdHguZ2V0SW1hZ2VEYXRhKDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG4gICAgICBjYW52YXMuaGVpZ2h0ID0gY2FudmFzSGVpZ2h0O1xuICAgICAgY3R4LnB1dEltYWdlRGF0YShpbWFnZURhdGEsIDAsIDApO1xuICAgIH1cblxuICAgIHNldFRleHRTdHlsZShjdHgsIGZvbnRGYW1pbHksIGZvbnRTaXplLCBmb250V2VpZ2h0KTtcblxuICAgIGlmIChzZGYpIHtcbiAgICAgIGNvbnN0IHRpbnlTREYgPSBuZXcgVGlueVNERihmb250U2l6ZSwgYnVmZmVyLCByYWRpdXMsIGN1dG9mZiwgZm9udEZhbWlseSwgZm9udFdlaWdodCk7XG4gICAgICBjb25zdCBpbWFnZURhdGEgPSBjdHguZ2V0SW1hZ2VEYXRhKDAsIDAsIHRpbnlTREYuc2l6ZSwgdGlueVNERi5zaXplKTtcblxuICAgICAgZm9yIChjb25zdCBjaGFyIG9mIGNoYXJhY3RlclNldCkge1xuICAgICAgICBwb3B1bGF0ZUFscGhhQ2hhbm5lbCh0aW55U0RGLmRyYXcoY2hhciksIGltYWdlRGF0YSk7XG4gICAgICAgIGN0eC5wdXRJbWFnZURhdGEoaW1hZ2VEYXRhLCBtYXBwaW5nW2NoYXJdLnggLSBidWZmZXIsIG1hcHBpbmdbY2hhcl0ueSArIGJ1ZmZlcik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAoY29uc3QgY2hhciBvZiBjaGFyYWN0ZXJTZXQpIHtcbiAgICAgICAgY3R4LmZpbGxUZXh0KGNoYXIsIG1hcHBpbmdbY2hhcl0ueCwgbWFwcGluZ1tjaGFyXS55ICsgZm9udFNpemUgKiBCQVNFTElORV9TQ0FMRSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHhPZmZzZXQsXG4gICAgICB5T2Zmc2V0LFxuICAgICAgbWFwcGluZyxcbiAgICAgIGRhdGE6IGNhbnZhcyxcbiAgICAgIHdpZHRoOiBjYW52YXMud2lkdGgsXG4gICAgICBoZWlnaHQ6IGNhbnZhcy5oZWlnaHRcbiAgICB9O1xuICB9XG5cbiAgX2dldEtleSgpIHtcbiAgICBjb25zdCB7XG4gICAgICBmb250RmFtaWx5LFxuICAgICAgZm9udFdlaWdodCxcbiAgICAgIGZvbnRTaXplLFxuICAgICAgYnVmZmVyLFxuICAgICAgc2RmLFxuICAgICAgcmFkaXVzLFxuICAgICAgY3V0b2ZmXG4gICAgfSA9IHRoaXMucHJvcHM7XG5cbiAgICBpZiAoc2RmKSB7XG4gICAgICByZXR1cm4gXCJcIi5jb25jYXQoZm9udEZhbWlseSwgXCIgXCIpLmNvbmNhdChmb250V2VpZ2h0LCBcIiBcIikuY29uY2F0KGZvbnRTaXplLCBcIiBcIikuY29uY2F0KGJ1ZmZlciwgXCIgXCIpLmNvbmNhdChyYWRpdXMsIFwiIFwiKS5jb25jYXQoY3V0b2ZmKTtcbiAgICB9XG5cbiAgICByZXR1cm4gXCJcIi5jb25jYXQoZm9udEZhbWlseSwgXCIgXCIpLmNvbmNhdChmb250V2VpZ2h0LCBcIiBcIikuY29uY2F0KGZvbnRTaXplLCBcIiBcIikuY29uY2F0KGJ1ZmZlcik7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9udC1hdGxhcy1tYW5hZ2VyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return LRUCache; });\nclass LRUCache {\n  constructor(limit = 5) {\n    this.limit = limit;\n    this.clear();\n  }\n\n  clear() {\n    this._cache = {};\n    this._order = [];\n  }\n\n  get(key) {\n    const value = this._cache[key];\n\n    if (value) {\n      this._deleteOrder(key);\n\n      this._appendOrder(key);\n    }\n\n    return value;\n  }\n\n  set(key, value) {\n    if (!this._cache[key]) {\n      if (Object.keys(this._cache).length === this.limit) {\n        this.delete(this._order[0]);\n      }\n\n      this._cache[key] = value;\n\n      this._appendOrder(key);\n    } else {\n      this.delete(key);\n      this._cache[key] = value;\n\n      this._appendOrder(key);\n    }\n  }\n\n  delete(key) {\n    const value = this._cache[key];\n\n    if (value) {\n      this._deleteCache(key);\n\n      this._deleteOrder(key);\n    }\n  }\n\n  _deleteCache(key) {\n    delete this._cache[key];\n  }\n\n  _deleteOrder(key) {\n    const index = this._order.findIndex(o => o === key);\n\n    if (index >= 0) {\n      this._order.splice(index, 1);\n    }\n  }\n\n  _appendOrder(key) {\n    this._order.push(key);\n  }\n\n}\n//# sourceMappingURL=lru-cache.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvbHJ1LWNhY2hlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS90ZXh0LWxheWVyL2xydS1jYWNoZS5qcz8xZDhlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIExSVUNhY2hlIHtcbiAgY29uc3RydWN0b3IobGltaXQgPSA1KSB7XG4gICAgdGhpcy5saW1pdCA9IGxpbWl0O1xuICAgIHRoaXMuY2xlYXIoKTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuX2NhY2hlID0ge307XG4gICAgdGhpcy5fb3JkZXIgPSBbXTtcbiAgfVxuXG4gIGdldChrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX2NhY2hlW2tleV07XG5cbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX2RlbGV0ZU9yZGVyKGtleSk7XG5cbiAgICAgIHRoaXMuX2FwcGVuZE9yZGVyKGtleSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgc2V0KGtleSwgdmFsdWUpIHtcbiAgICBpZiAoIXRoaXMuX2NhY2hlW2tleV0pIHtcbiAgICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLl9jYWNoZSkubGVuZ3RoID09PSB0aGlzLmxpbWl0KSB7XG4gICAgICAgIHRoaXMuZGVsZXRlKHRoaXMuX29yZGVyWzBdKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fY2FjaGVba2V5XSA9IHZhbHVlO1xuXG4gICAgICB0aGlzLl9hcHBlbmRPcmRlcihrZXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmRlbGV0ZShrZXkpO1xuICAgICAgdGhpcy5fY2FjaGVba2V5XSA9IHZhbHVlO1xuXG4gICAgICB0aGlzLl9hcHBlbmRPcmRlcihrZXkpO1xuICAgIH1cbiAgfVxuXG4gIGRlbGV0ZShrZXkpIHtcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuX2NhY2hlW2tleV07XG5cbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuX2RlbGV0ZUNhY2hlKGtleSk7XG5cbiAgICAgIHRoaXMuX2RlbGV0ZU9yZGVyKGtleSk7XG4gICAgfVxuICB9XG5cbiAgX2RlbGV0ZUNhY2hlKGtleSkge1xuICAgIGRlbGV0ZSB0aGlzLl9jYWNoZVtrZXldO1xuICB9XG5cbiAgX2RlbGV0ZU9yZGVyKGtleSkge1xuICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fb3JkZXIuZmluZEluZGV4KG8gPT4gbyA9PT0ga2V5KTtcblxuICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICB0aGlzLl9vcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgfVxuXG4gIF9hcHBlbmRPcmRlcihrZXkpIHtcbiAgICB0aGlzLl9vcmRlci5wdXNoKGtleSk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bHJ1LWNhY2hlLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/lru-cache.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js ***!
  \*************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME multi-icon-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform float opacity;\\nuniform sampler2D iconsTexture;\\nuniform float gamma;\\nuniform bool sdf;\\nuniform float alphaCutoff;\\nuniform float buffer;\\nuniform float outlineBuffer;\\nuniform vec4 outlineColor;\\n\\nvarying vec4 vColor;\\nvarying vec2 vTextureCoords;\\nvarying vec2 uv;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  if (!picking_uActive) {\\n    float alpha = texture2D(iconsTexture, vTextureCoords).a;\\n    vec4 color = vColor;\\n    if (sdf) {\\n      float distance = alpha;\\n      alpha = smoothstep(buffer - gamma, buffer + gamma, distance);\\n\\n      if (outlineBuffer > 0.0) {\\n        float inFill = alpha;\\n        float inBorder = smoothstep(outlineBuffer - gamma, outlineBuffer + gamma, distance);\\n        color = mix(outlineColor, vColor, inFill);\\n        alpha = inBorder;\\n      }\\n    }\\n    float a = alpha * color.a;\\n    \\n    if (a < alphaCutoff) {\\n      discard;\\n    }\\n\\n    gl_FragColor = vec4(color.rgb, a * opacity);\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\");\n//# sourceMappingURL=multi-icon-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvbXVsdGktaWNvbi1sYXllci9tdWx0aS1pY29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvbXVsdGktaWNvbi1sYXllci9tdWx0aS1pY29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanM/M2IyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgU0hBREVSX05BTUUgbXVsdGktaWNvbi1sYXllci1mcmFnbWVudC1zaGFkZXJcXG5cXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7XFxuXFxudW5pZm9ybSBmbG9hdCBvcGFjaXR5O1xcbnVuaWZvcm0gc2FtcGxlcjJEIGljb25zVGV4dHVyZTtcXG51bmlmb3JtIGZsb2F0IGdhbW1hO1xcbnVuaWZvcm0gYm9vbCBzZGY7XFxudW5pZm9ybSBmbG9hdCBhbHBoYUN1dG9mZjtcXG51bmlmb3JtIGZsb2F0IGJ1ZmZlcjtcXG51bmlmb3JtIGZsb2F0IG91dGxpbmVCdWZmZXI7XFxudW5pZm9ybSB2ZWM0IG91dGxpbmVDb2xvcjtcXG5cXG52YXJ5aW5nIHZlYzQgdkNvbG9yO1xcbnZhcnlpbmcgdmVjMiB2VGV4dHVyZUNvb3JkcztcXG52YXJ5aW5nIHZlYzIgdXY7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdlb21ldHJ5LnV2ID0gdXY7XFxuXFxuICBpZiAoIXBpY2tpbmdfdUFjdGl2ZSkge1xcbiAgICBmbG9hdCBhbHBoYSA9IHRleHR1cmUyRChpY29uc1RleHR1cmUsIHZUZXh0dXJlQ29vcmRzKS5hO1xcbiAgICB2ZWM0IGNvbG9yID0gdkNvbG9yO1xcbiAgICBpZiAoc2RmKSB7XFxuICAgICAgZmxvYXQgZGlzdGFuY2UgPSBhbHBoYTtcXG4gICAgICBhbHBoYSA9IHNtb290aHN0ZXAoYnVmZmVyIC0gZ2FtbWEsIGJ1ZmZlciArIGdhbW1hLCBkaXN0YW5jZSk7XFxuXFxuICAgICAgaWYgKG91dGxpbmVCdWZmZXIgPiAwLjApIHtcXG4gICAgICAgIGZsb2F0IGluRmlsbCA9IGFscGhhO1xcbiAgICAgICAgZmxvYXQgaW5Cb3JkZXIgPSBzbW9vdGhzdGVwKG91dGxpbmVCdWZmZXIgLSBnYW1tYSwgb3V0bGluZUJ1ZmZlciArIGdhbW1hLCBkaXN0YW5jZSk7XFxuICAgICAgICBjb2xvciA9IG1peChvdXRsaW5lQ29sb3IsIHZDb2xvciwgaW5GaWxsKTtcXG4gICAgICAgIGFscGhhID0gaW5Cb3JkZXI7XFxuICAgICAgfVxcbiAgICB9XFxuICAgIGZsb2F0IGEgPSBhbHBoYSAqIGNvbG9yLmE7XFxuICAgIFxcbiAgICBpZiAoYSA8IGFscGhhQ3V0b2ZmKSB7XFxuICAgICAgZGlzY2FyZDtcXG4gICAgfVxcblxcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGNvbG9yLnJnYiwgYSAqIG9wYWNpdHkpO1xcbiAgfVxcblxcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUihnbF9GcmFnQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aS1pY29uLWxheWVyLWZyYWdtZW50Lmdsc2wuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js ***!
  \***********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MultiIconLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n/* harmony import */ var _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../icon-layer/icon-layer */ \"./node_modules/@deck.gl/layers/dist/esm/icon-layer/icon-layer.js\");\n/* harmony import */ var _multi_icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multi-icon-layer-fragment.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer-fragment.glsl.js\");\n\n\n\nconst DEFAULT_BUFFER = 192.0 / 256;\nconst EMPTY_ARRAY = [];\nconst defaultProps = {\n  getIconOffsets: {\n    type: 'accessor',\n    value: x => x.offsets\n  },\n  alphaCutoff: 0.001,\n  smoothing: 0.1,\n  outlineWidth: 0,\n  outlineColor: {\n    type: 'color',\n    value: [0, 0, 0, 255]\n  }\n};\nclass MultiIconLayer extends _icon_layer_icon_layer__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  getShaders() {\n    return { ...super.getShaders(),\n      fs: _multi_icon_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n    };\n  }\n\n  initializeState() {\n    super.initializeState();\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instanceOffsets: {\n        size: 2,\n        accessor: 'getIconOffsets'\n      },\n      instancePickingColors: {\n        type: 5121,\n        size: 3,\n        accessor: (object, {\n          index,\n          target: value\n        }) => this.encodePickingColor(index, value)\n      }\n    });\n  }\n\n  updateState(params) {\n    super.updateState(params);\n    const {\n      props,\n      oldProps\n    } = params;\n    let {\n      outlineColor\n    } = props;\n\n    if (outlineColor !== oldProps.outlineColor) {\n      outlineColor = outlineColor.map(x => x / 255);\n      outlineColor[3] = Number.isFinite(outlineColor[3]) ? outlineColor[3] : 1;\n      this.setState({\n        outlineColor\n      });\n    }\n\n    if (!props.sdf && props.outlineWidth) {\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(\"\".concat(this.id, \": fontSettings.sdf is required to render outline\"))();\n    }\n  }\n\n  draw(params) {\n    const {\n      sdf,\n      smoothing,\n      outlineWidth\n    } = this.props;\n    const {\n      outlineColor\n    } = this.state;\n    params.uniforms = { ...params.uniforms,\n      buffer: DEFAULT_BUFFER,\n      outlineBuffer: outlineWidth ? Math.max(smoothing, DEFAULT_BUFFER * (1 - outlineWidth)) : -1,\n      gamma: smoothing,\n      sdf: Boolean(sdf),\n      outlineColor\n    };\n    super.draw(params);\n  }\n\n  getInstanceOffset(icons) {\n    return icons ? Array.from(icons).map(icon => super.getInstanceOffset(icon)) : EMPTY_ARRAY;\n  }\n\n  getInstanceColorMode(icons) {\n    return 1;\n  }\n\n  getInstanceIconFrame(icons) {\n    return icons ? Array.from(icons).map(icon => super.getInstanceIconFrame(icon)) : EMPTY_ARRAY;\n  }\n\n}\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n//# sourceMappingURL=multi-icon-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvbXVsdGktaWNvbi1sYXllci9tdWx0aS1pY29uLWxheWVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS90ZXh0LWxheWVyL211bHRpLWljb24tbGF5ZXIvbXVsdGktaWNvbi1sYXllci5qcz9jNDExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZyB9IGZyb20gJ0BkZWNrLmdsL2NvcmUnO1xuaW1wb3J0IEljb25MYXllciBmcm9tICcuLi8uLi9pY29uLWxheWVyL2ljb24tbGF5ZXInO1xuaW1wb3J0IGZzIGZyb20gJy4vbXVsdGktaWNvbi1sYXllci1mcmFnbWVudC5nbHNsJztcbmNvbnN0IERFRkFVTFRfQlVGRkVSID0gMTkyLjAgLyAyNTY7XG5jb25zdCBFTVBUWV9BUlJBWSA9IFtdO1xuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICBnZXRJY29uT2Zmc2V0czoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IHggPT4geC5vZmZzZXRzXG4gIH0sXG4gIGFscGhhQ3V0b2ZmOiAwLjAwMSxcbiAgc21vb3RoaW5nOiAwLjEsXG4gIG91dGxpbmVXaWR0aDogMCxcbiAgb3V0bGluZUNvbG9yOiB7XG4gICAgdHlwZTogJ2NvbG9yJyxcbiAgICB2YWx1ZTogWzAsIDAsIDAsIDI1NV1cbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE11bHRpSWNvbkxheWVyIGV4dGVuZHMgSWNvbkxheWVyIHtcbiAgZ2V0U2hhZGVycygpIHtcbiAgICByZXR1cm4geyAuLi5zdXBlci5nZXRTaGFkZXJzKCksXG4gICAgICBmc1xuICAgIH07XG4gIH1cblxuICBpbml0aWFsaXplU3RhdGUoKSB7XG4gICAgc3VwZXIuaW5pdGlhbGl6ZVN0YXRlKCk7XG4gICAgY29uc3QgYXR0cmlidXRlTWFuYWdlciA9IHRoaXMuZ2V0QXR0cmlidXRlTWFuYWdlcigpO1xuICAgIGF0dHJpYnV0ZU1hbmFnZXIuYWRkSW5zdGFuY2VkKHtcbiAgICAgIGluc3RhbmNlT2Zmc2V0czoge1xuICAgICAgICBzaXplOiAyLFxuICAgICAgICBhY2Nlc3NvcjogJ2dldEljb25PZmZzZXRzJ1xuICAgICAgfSxcbiAgICAgIGluc3RhbmNlUGlja2luZ0NvbG9yczoge1xuICAgICAgICB0eXBlOiA1MTIxLFxuICAgICAgICBzaXplOiAzLFxuICAgICAgICBhY2Nlc3NvcjogKG9iamVjdCwge1xuICAgICAgICAgIGluZGV4LFxuICAgICAgICAgIHRhcmdldDogdmFsdWVcbiAgICAgICAgfSkgPT4gdGhpcy5lbmNvZGVQaWNraW5nQ29sb3IoaW5kZXgsIHZhbHVlKVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlU3RhdGUocGFyYW1zKSB7XG4gICAgc3VwZXIudXBkYXRlU3RhdGUocGFyYW1zKTtcbiAgICBjb25zdCB7XG4gICAgICBwcm9wcyxcbiAgICAgIG9sZFByb3BzXG4gICAgfSA9IHBhcmFtcztcbiAgICBsZXQge1xuICAgICAgb3V0bGluZUNvbG9yXG4gICAgfSA9IHByb3BzO1xuXG4gICAgaWYgKG91dGxpbmVDb2xvciAhPT0gb2xkUHJvcHMub3V0bGluZUNvbG9yKSB7XG4gICAgICBvdXRsaW5lQ29sb3IgPSBvdXRsaW5lQ29sb3IubWFwKHggPT4geCAvIDI1NSk7XG4gICAgICBvdXRsaW5lQ29sb3JbM10gPSBOdW1iZXIuaXNGaW5pdGUob3V0bGluZUNvbG9yWzNdKSA/IG91dGxpbmVDb2xvclszXSA6IDE7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgb3V0bGluZUNvbG9yXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXByb3BzLnNkZiAmJiBwcm9wcy5vdXRsaW5lV2lkdGgpIHtcbiAgICAgIGxvZy53YXJuKFwiXCIuY29uY2F0KHRoaXMuaWQsIFwiOiBmb250U2V0dGluZ3Muc2RmIGlzIHJlcXVpcmVkIHRvIHJlbmRlciBvdXRsaW5lXCIpKSgpO1xuICAgIH1cbiAgfVxuXG4gIGRyYXcocGFyYW1zKSB7XG4gICAgY29uc3Qge1xuICAgICAgc2RmLFxuICAgICAgc21vb3RoaW5nLFxuICAgICAgb3V0bGluZVdpZHRoXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3Qge1xuICAgICAgb3V0bGluZUNvbG9yXG4gICAgfSA9IHRoaXMuc3RhdGU7XG4gICAgcGFyYW1zLnVuaWZvcm1zID0geyAuLi5wYXJhbXMudW5pZm9ybXMsXG4gICAgICBidWZmZXI6IERFRkFVTFRfQlVGRkVSLFxuICAgICAgb3V0bGluZUJ1ZmZlcjogb3V0bGluZVdpZHRoID8gTWF0aC5tYXgoc21vb3RoaW5nLCBERUZBVUxUX0JVRkZFUiAqICgxIC0gb3V0bGluZVdpZHRoKSkgOiAtMSxcbiAgICAgIGdhbW1hOiBzbW9vdGhpbmcsXG4gICAgICBzZGY6IEJvb2xlYW4oc2RmKSxcbiAgICAgIG91dGxpbmVDb2xvclxuICAgIH07XG4gICAgc3VwZXIuZHJhdyhwYXJhbXMpO1xuICB9XG5cbiAgZ2V0SW5zdGFuY2VPZmZzZXQoaWNvbnMpIHtcbiAgICByZXR1cm4gaWNvbnMgPyBBcnJheS5mcm9tKGljb25zKS5tYXAoaWNvbiA9PiBzdXBlci5nZXRJbnN0YW5jZU9mZnNldChpY29uKSkgOiBFTVBUWV9BUlJBWTtcbiAgfVxuXG4gIGdldEluc3RhbmNlQ29sb3JNb2RlKGljb25zKSB7XG4gICAgcmV0dXJuIDE7XG4gIH1cblxuICBnZXRJbnN0YW5jZUljb25GcmFtZShpY29ucykge1xuICAgIHJldHVybiBpY29ucyA/IEFycmF5LmZyb20oaWNvbnMpLm1hcChpY29uID0+IHN1cGVyLmdldEluc3RhbmNlSWNvbkZyYW1lKGljb24pKSA6IEVNUFRZX0FSUkFZO1xuICB9XG5cbn1cbk11bHRpSWNvbkxheWVyLmxheWVyTmFtZSA9ICdNdWx0aUljb25MYXllcic7XG5NdWx0aUljb25MYXllci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aS1pY29uLWxheWVyLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js ***!
  \***********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME text-background-layer-fragment-shader\\n\\nprecision highp float;\\n\\nuniform bool stroked;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvoid main(void) {\\n  geometry.uv = uv;\\n\\n  vec2 pixelPosition = uv * dimensions;\\n  if (stroked) {\\n    float distToEdge = min(\\n      min(pixelPosition.x, dimensions.x - pixelPosition.x),\\n      min(pixelPosition.y, dimensions.y - pixelPosition.y)\\n    );\\n    float isBorder = smoothedge(distToEdge, vLineWidth);\\n    gl_FragColor = mix(vFillColor, vLineColor, isBorder);\\n  } else {\\n    gl_FragColor = vFillColor;\\n  }\\n\\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\\n}\\n\");\n//# sourceMappingURL=text-background-layer-fragment.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci1mcmFnbWVudC5nbHNsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS90ZXh0LWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci90ZXh0LWJhY2tncm91bmQtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcz84ZTRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiI2RlZmluZSBTSEFERVJfTkFNRSB0ZXh0LWJhY2tncm91bmQtbGF5ZXItZnJhZ21lbnQtc2hhZGVyXFxuXFxucHJlY2lzaW9uIGhpZ2hwIGZsb2F0O1xcblxcbnVuaWZvcm0gYm9vbCBzdHJva2VkO1xcblxcbnZhcnlpbmcgdmVjNCB2RmlsbENvbG9yO1xcbnZhcnlpbmcgdmVjNCB2TGluZUNvbG9yO1xcbnZhcnlpbmcgZmxvYXQgdkxpbmVXaWR0aDtcXG52YXJ5aW5nIHZlYzIgdXY7XFxudmFyeWluZyB2ZWMyIGRpbWVuc2lvbnM7XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdlb21ldHJ5LnV2ID0gdXY7XFxuXFxuICB2ZWMyIHBpeGVsUG9zaXRpb24gPSB1diAqIGRpbWVuc2lvbnM7XFxuICBpZiAoc3Ryb2tlZCkge1xcbiAgICBmbG9hdCBkaXN0VG9FZGdlID0gbWluKFxcbiAgICAgIG1pbihwaXhlbFBvc2l0aW9uLngsIGRpbWVuc2lvbnMueCAtIHBpeGVsUG9zaXRpb24ueCksXFxuICAgICAgbWluKHBpeGVsUG9zaXRpb24ueSwgZGltZW5zaW9ucy55IC0gcGl4ZWxQb3NpdGlvbi55KVxcbiAgICApO1xcbiAgICBmbG9hdCBpc0JvcmRlciA9IHNtb290aGVkZ2UoZGlzdFRvRWRnZSwgdkxpbmVXaWR0aCk7XFxuICAgIGdsX0ZyYWdDb2xvciA9IG1peCh2RmlsbENvbG9yLCB2TGluZUNvbG9yLCBpc0JvcmRlcik7XFxuICB9IGVsc2Uge1xcbiAgICBnbF9GcmFnQ29sb3IgPSB2RmlsbENvbG9yO1xcbiAgfVxcblxcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUihnbF9GcmFnQ29sb3IsIGdlb21ldHJ5KTtcXG59XFxuXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0LWJhY2tncm91bmQtbGF5ZXItZnJhZ21lbnQuZ2xzbC5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js ***!
  \*********************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"#define SHADER_NAME text-background-layer-vertex-shader\\n\\nattribute vec2 positions;\\n\\nattribute vec3 instancePositions;\\nattribute vec3 instancePositions64Low;\\nattribute vec4 instanceRects;\\nattribute float instanceSizes;\\nattribute float instanceAngles;\\nattribute vec2 instancePixelOffsets;\\nattribute float instanceLineWidths;\\nattribute vec4 instanceFillColors;\\nattribute vec4 instanceLineColors;\\nattribute vec3 instancePickingColors;\\n\\nuniform bool billboard;\\nuniform float opacity;\\nuniform float sizeScale;\\nuniform float sizeMinPixels;\\nuniform float sizeMaxPixels;\\nuniform vec4 padding;\\n\\nvarying vec4 vFillColor;\\nvarying vec4 vLineColor;\\nvarying float vLineWidth;\\nvarying vec2 uv;\\nvarying vec2 dimensions;\\n\\nvec2 rotate_by_angle(vec2 vertex, float angle) {\\n  float angle_radian = radians(angle);\\n  float cos_angle = cos(angle_radian);\\n  float sin_angle = sin(angle_radian);\\n  mat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\\n  return rotationMatrix * vertex;\\n}\\n\\nvoid main(void) {\\n  geometry.worldPosition = instancePositions;\\n  geometry.uv = positions;\\n  geometry.pickingColor = instancePickingColors;\\n  uv = positions;\\n  vLineWidth = instanceLineWidths;\\n  float sizePixels = clamp(\\n    project_size_to_pixel(instanceSizes * sizeScale),\\n    sizeMinPixels, sizeMaxPixels\\n  );\\n\\n  dimensions = instanceRects.zw * sizePixels + padding.xy + padding.zw;\\n\\n  vec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-padding.xy, padding.zw, positions);\\n  pixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\\n  pixelOffset += instancePixelOffsets;\\n  pixelOffset.y *= -1.0;\\n\\n  if (billboard)  {\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\\n    vec3 offset = vec3(pixelOffset, 0.0);\\n    DECKGL_FILTER_SIZE(offset, geometry);\\n    gl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\\n  } else {\\n    vec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\\n    DECKGL_FILTER_SIZE(offset_common, geometry);\\n    gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\\n  }\\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\\n}\\n\");\n//# sourceMappingURL=text-background-layer-vertex.glsl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci12ZXJ0ZXguZ2xzbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vdGV4dC1sYXllci90ZXh0LWJhY2tncm91bmQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyLXZlcnRleC5nbHNsLmpzP2JjODAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIFNIQURFUl9OQU1FIHRleHQtYmFja2dyb3VuZC1sYXllci12ZXJ0ZXgtc2hhZGVyXFxuXFxuYXR0cmlidXRlIHZlYzIgcG9zaXRpb25zO1xcblxcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zO1xcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUG9zaXRpb25zNjRMb3c7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VSZWN0cztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VTaXplcztcXG5hdHRyaWJ1dGUgZmxvYXQgaW5zdGFuY2VBbmdsZXM7XFxuYXR0cmlidXRlIHZlYzIgaW5zdGFuY2VQaXhlbE9mZnNldHM7XFxuYXR0cmlidXRlIGZsb2F0IGluc3RhbmNlTGluZVdpZHRocztcXG5hdHRyaWJ1dGUgdmVjNCBpbnN0YW5jZUZpbGxDb2xvcnM7XFxuYXR0cmlidXRlIHZlYzQgaW5zdGFuY2VMaW5lQ29sb3JzO1xcbmF0dHJpYnV0ZSB2ZWMzIGluc3RhbmNlUGlja2luZ0NvbG9ycztcXG5cXG51bmlmb3JtIGJvb2wgYmlsbGJvYXJkO1xcbnVuaWZvcm0gZmxvYXQgb3BhY2l0eTtcXG51bmlmb3JtIGZsb2F0IHNpemVTY2FsZTtcXG51bmlmb3JtIGZsb2F0IHNpemVNaW5QaXhlbHM7XFxudW5pZm9ybSBmbG9hdCBzaXplTWF4UGl4ZWxzO1xcbnVuaWZvcm0gdmVjNCBwYWRkaW5nO1xcblxcbnZhcnlpbmcgdmVjNCB2RmlsbENvbG9yO1xcbnZhcnlpbmcgdmVjNCB2TGluZUNvbG9yO1xcbnZhcnlpbmcgZmxvYXQgdkxpbmVXaWR0aDtcXG52YXJ5aW5nIHZlYzIgdXY7XFxudmFyeWluZyB2ZWMyIGRpbWVuc2lvbnM7XFxuXFxudmVjMiByb3RhdGVfYnlfYW5nbGUodmVjMiB2ZXJ0ZXgsIGZsb2F0IGFuZ2xlKSB7XFxuICBmbG9hdCBhbmdsZV9yYWRpYW4gPSByYWRpYW5zKGFuZ2xlKTtcXG4gIGZsb2F0IGNvc19hbmdsZSA9IGNvcyhhbmdsZV9yYWRpYW4pO1xcbiAgZmxvYXQgc2luX2FuZ2xlID0gc2luKGFuZ2xlX3JhZGlhbik7XFxuICBtYXQyIHJvdGF0aW9uTWF0cml4ID0gbWF0Mihjb3NfYW5nbGUsIC1zaW5fYW5nbGUsIHNpbl9hbmdsZSwgY29zX2FuZ2xlKTtcXG4gIHJldHVybiByb3RhdGlvbk1hdHJpeCAqIHZlcnRleDtcXG59XFxuXFxudm9pZCBtYWluKHZvaWQpIHtcXG4gIGdlb21ldHJ5LndvcmxkUG9zaXRpb24gPSBpbnN0YW5jZVBvc2l0aW9ucztcXG4gIGdlb21ldHJ5LnV2ID0gcG9zaXRpb25zO1xcbiAgZ2VvbWV0cnkucGlja2luZ0NvbG9yID0gaW5zdGFuY2VQaWNraW5nQ29sb3JzO1xcbiAgdXYgPSBwb3NpdGlvbnM7XFxuICB2TGluZVdpZHRoID0gaW5zdGFuY2VMaW5lV2lkdGhzO1xcbiAgZmxvYXQgc2l6ZVBpeGVscyA9IGNsYW1wKFxcbiAgICBwcm9qZWN0X3NpemVfdG9fcGl4ZWwoaW5zdGFuY2VTaXplcyAqIHNpemVTY2FsZSksXFxuICAgIHNpemVNaW5QaXhlbHMsIHNpemVNYXhQaXhlbHNcXG4gICk7XFxuXFxuICBkaW1lbnNpb25zID0gaW5zdGFuY2VSZWN0cy56dyAqIHNpemVQaXhlbHMgKyBwYWRkaW5nLnh5ICsgcGFkZGluZy56dztcXG5cXG4gIHZlYzIgcGl4ZWxPZmZzZXQgPSAocG9zaXRpb25zICogaW5zdGFuY2VSZWN0cy56dyArIGluc3RhbmNlUmVjdHMueHkpICogc2l6ZVBpeGVscyArIG1peCgtcGFkZGluZy54eSwgcGFkZGluZy56dywgcG9zaXRpb25zKTtcXG4gIHBpeGVsT2Zmc2V0ID0gcm90YXRlX2J5X2FuZ2xlKHBpeGVsT2Zmc2V0LCBpbnN0YW5jZUFuZ2xlcyk7XFxuICBwaXhlbE9mZnNldCArPSBpbnN0YW5jZVBpeGVsT2Zmc2V0cztcXG4gIHBpeGVsT2Zmc2V0LnkgKj0gLTEuMDtcXG5cXG4gIGlmIChiaWxsYm9hcmQpICB7XFxuICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdF9wb3NpdGlvbl90b19jbGlwc3BhY2UoaW5zdGFuY2VQb3NpdGlvbnMsIGluc3RhbmNlUG9zaXRpb25zNjRMb3csIHZlYzMoMC4wKSwgZ2VvbWV0cnkucG9zaXRpb24pO1xcbiAgICB2ZWMzIG9mZnNldCA9IHZlYzMocGl4ZWxPZmZzZXQsIDAuMCk7XFxuICAgIERFQ0tHTF9GSUxURVJfU0laRShvZmZzZXQsIGdlb21ldHJ5KTtcXG4gICAgZ2xfUG9zaXRpb24ueHkgKz0gcHJvamVjdF9waXhlbF9zaXplX3RvX2NsaXBzcGFjZShvZmZzZXQueHkpO1xcbiAgfSBlbHNlIHtcXG4gICAgdmVjMyBvZmZzZXRfY29tbW9uID0gdmVjMyhwcm9qZWN0X3BpeGVsX3NpemUocGl4ZWxPZmZzZXQpLCAwLjApO1xcbiAgICBERUNLR0xfRklMVEVSX1NJWkUob2Zmc2V0X2NvbW1vbiwgZ2VvbWV0cnkpO1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RfcG9zaXRpb25fdG9fY2xpcHNwYWNlKGluc3RhbmNlUG9zaXRpb25zLCBpbnN0YW5jZVBvc2l0aW9uczY0TG93LCBvZmZzZXRfY29tbW9uLCBnZW9tZXRyeS5wb3NpdGlvbik7XFxuICB9XFxuICBERUNLR0xfRklMVEVSX0dMX1BPU0lUSU9OKGdsX1Bvc2l0aW9uLCBnZW9tZXRyeSk7XFxuICB2RmlsbENvbG9yID0gdmVjNChpbnN0YW5jZUZpbGxDb2xvcnMucmdiLCBpbnN0YW5jZUZpbGxDb2xvcnMuYSAqIG9wYWNpdHkpO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2RmlsbENvbG9yLCBnZW9tZXRyeSk7XFxuICB2TGluZUNvbG9yID0gdmVjNChpbnN0YW5jZUxpbmVDb2xvcnMucmdiLCBpbnN0YW5jZUxpbmVDb2xvcnMuYSAqIG9wYWNpdHkpO1xcbiAgREVDS0dMX0ZJTFRFUl9DT0xPUih2TGluZUNvbG9yLCBnZW9tZXRyeSk7XFxufVxcblwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGV4dC1iYWNrZ3JvdW5kLWxheWVyLXZlcnRleC5nbHNsLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js ***!
  \*********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TextBackgroundLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/project32/project32.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/shaderlib/picking/picking.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/lib/model.js\");\n/* harmony import */ var _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @luma.gl/core */ \"./node_modules/@luma.gl/engine/dist/esm/geometry/geometry.js\");\n/* harmony import */ var _text_background_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text-background-layer-vertex.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-vertex.glsl.js\");\n/* harmony import */ var _text_background_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./text-background-layer-fragment.glsl */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer-fragment.glsl.js\");\n\n\n\n\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  padding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getSize: {\n    type: 'accessor',\n    value: 1\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  getBoundingRect: {\n    type: 'accessor',\n    value: [0, 0, 0, 0]\n  },\n  getFillColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineColor: {\n    type: 'accessor',\n    value: [0, 0, 0, 255]\n  },\n  getLineWidth: {\n    type: 'accessor',\n    value: 1\n  }\n};\nclass TextBackgroundLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  getShaders() {\n    return super.getShaders({\n      vs: _text_background_layer_vertex_glsl__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n      fs: _text_background_layer_fragment_glsl__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n      modules: [_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _deck_gl_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"]]\n    });\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: 5130,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceSizes: {\n        size: 1,\n        transition: true,\n        accessor: 'getSize',\n        defaultValue: 1\n      },\n      instanceAngles: {\n        size: 1,\n        transition: true,\n        accessor: 'getAngle'\n      },\n      instanceRects: {\n        size: 4,\n        accessor: 'getBoundingRect'\n      },\n      instancePixelOffsets: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        normalized: true,\n        type: 5121,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    super.updateState({\n      props,\n      oldProps,\n      changeFlags\n    });\n\n    if (changeFlags.extensionsChanged) {\n      var _this$state$model;\n\n      const {\n        gl\n      } = this.context;\n      (_this$state$model = this.state.model) === null || _this$state$model === void 0 ? void 0 : _this$state$model.delete();\n      this.state.model = this._getModel(gl);\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({\n    uniforms\n  }) {\n    const {\n      viewport\n    } = this.context;\n    const {\n      billboard,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      getLineWidth\n    } = this.props;\n    let {\n      padding\n    } = this.props;\n    const sizeScaleMultiplier = sizeUnits === 'pixels' ? viewport.metersPerPixel : 1;\n\n    if (padding.length < 4) {\n      padding = [padding[0], padding[1], padding[0], padding[1]];\n    }\n\n    this.state.model.setUniforms(uniforms).setUniforms({\n      billboard,\n      stroked: Boolean(getLineWidth),\n      padding,\n      sizeScale: sizeScale * sizeScaleMultiplier,\n      sizeMinPixels,\n      sizeMaxPixels\n    }).draw();\n  }\n\n  _getModel(gl) {\n    const positions = [0, 0, 1, 0, 1, 1, 0, 1];\n    return new _luma_gl_core__WEBPACK_IMPORTED_MODULE_3__[\"default\"](gl, { ...this.getShaders(),\n      id: this.props.id,\n      geometry: new _luma_gl_core__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n        drawMode: 6,\n        vertexCount: 4,\n        attributes: {\n          positions: {\n            size: 2,\n            value: new Float32Array(positions)\n          }\n        }\n      }),\n      isInstanced: true\n    });\n  }\n\n}\nTextBackgroundLayer.layerName = 'TextBackgroundLayer';\nTextBackgroundLayer.defaultProps = defaultProps;\n//# sourceMappingURL=text-background-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3RleHQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyL3RleHQtYmFja2dyb3VuZC1sYXllci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZGVjay5nbC9sYXllcnMvZGlzdC9lc20vdGV4dC1sYXllci90ZXh0LWJhY2tncm91bmQtbGF5ZXIvdGV4dC1iYWNrZ3JvdW5kLWxheWVyLmpzP2FjOGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTGF5ZXIsIHByb2plY3QzMiwgcGlja2luZyB9IGZyb20gJ0BkZWNrLmdsL2NvcmUnO1xuaW1wb3J0IHsgTW9kZWwsIEdlb21ldHJ5IH0gZnJvbSAnQGx1bWEuZ2wvY29yZSc7XG5pbXBvcnQgdnMgZnJvbSAnLi90ZXh0LWJhY2tncm91bmQtbGF5ZXItdmVydGV4Lmdsc2wnO1xuaW1wb3J0IGZzIGZyb20gJy4vdGV4dC1iYWNrZ3JvdW5kLWxheWVyLWZyYWdtZW50Lmdsc2wnO1xuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICBiaWxsYm9hcmQ6IHRydWUsXG4gIHNpemVTY2FsZTogMSxcbiAgc2l6ZVVuaXRzOiAncGl4ZWxzJyxcbiAgc2l6ZU1pblBpeGVsczogMCxcbiAgc2l6ZU1heFBpeGVsczogTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsXG4gIHBhZGRpbmc6IHtcbiAgICB0eXBlOiAnYXJyYXknLFxuICAgIHZhbHVlOiBbMCwgMCwgMCwgMF1cbiAgfSxcbiAgZ2V0UG9zaXRpb246IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiB4ID0+IHgucG9zaXRpb25cbiAgfSxcbiAgZ2V0U2l6ZToge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IDFcbiAgfSxcbiAgZ2V0QW5nbGU6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiAwXG4gIH0sXG4gIGdldFBpeGVsT2Zmc2V0OiB7XG4gICAgdHlwZTogJ2FjY2Vzc29yJyxcbiAgICB2YWx1ZTogWzAsIDBdXG4gIH0sXG4gIGdldEJvdW5kaW5nUmVjdDoge1xuICAgIHR5cGU6ICdhY2Nlc3NvcicsXG4gICAgdmFsdWU6IFswLCAwLCAwLCAwXVxuICB9LFxuICBnZXRGaWxsQ29sb3I6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiBbMCwgMCwgMCwgMjU1XVxuICB9LFxuICBnZXRMaW5lQ29sb3I6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiBbMCwgMCwgMCwgMjU1XVxuICB9LFxuICBnZXRMaW5lV2lkdGg6IHtcbiAgICB0eXBlOiAnYWNjZXNzb3InLFxuICAgIHZhbHVlOiAxXG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXh0QmFja2dyb3VuZExheWVyIGV4dGVuZHMgTGF5ZXIge1xuICBnZXRTaGFkZXJzKCkge1xuICAgIHJldHVybiBzdXBlci5nZXRTaGFkZXJzKHtcbiAgICAgIHZzLFxuICAgICAgZnMsXG4gICAgICBtb2R1bGVzOiBbcHJvamVjdDMyLCBwaWNraW5nXVxuICAgIH0pO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVN0YXRlKCkge1xuICAgIHRoaXMuZ2V0QXR0cmlidXRlTWFuYWdlcigpLmFkZEluc3RhbmNlZCh7XG4gICAgICBpbnN0YW5jZVBvc2l0aW9uczoge1xuICAgICAgICBzaXplOiAzLFxuICAgICAgICB0eXBlOiA1MTMwLFxuICAgICAgICBmcDY0OiB0aGlzLnVzZTY0Yml0UG9zaXRpb25zKCksXG4gICAgICAgIHRyYW5zaXRpb246IHRydWUsXG4gICAgICAgIGFjY2Vzc29yOiAnZ2V0UG9zaXRpb24nXG4gICAgICB9LFxuICAgICAgaW5zdGFuY2VTaXplczoge1xuICAgICAgICBzaXplOiAxLFxuICAgICAgICB0cmFuc2l0aW9uOiB0cnVlLFxuICAgICAgICBhY2Nlc3NvcjogJ2dldFNpemUnLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IDFcbiAgICAgIH0sXG4gICAgICBpbnN0YW5jZUFuZ2xlczoge1xuICAgICAgICBzaXplOiAxLFxuICAgICAgICB0cmFuc2l0aW9uOiB0cnVlLFxuICAgICAgICBhY2Nlc3NvcjogJ2dldEFuZ2xlJ1xuICAgICAgfSxcbiAgICAgIGluc3RhbmNlUmVjdHM6IHtcbiAgICAgICAgc2l6ZTogNCxcbiAgICAgICAgYWNjZXNzb3I6ICdnZXRCb3VuZGluZ1JlY3QnXG4gICAgICB9LFxuICAgICAgaW5zdGFuY2VQaXhlbE9mZnNldHM6IHtcbiAgICAgICAgc2l6ZTogMixcbiAgICAgICAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgICAgICAgYWNjZXNzb3I6ICdnZXRQaXhlbE9mZnNldCdcbiAgICAgIH0sXG4gICAgICBpbnN0YW5jZUZpbGxDb2xvcnM6IHtcbiAgICAgICAgc2l6ZTogNCxcbiAgICAgICAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgICAgICAgbm9ybWFsaXplZDogdHJ1ZSxcbiAgICAgICAgdHlwZTogNTEyMSxcbiAgICAgICAgYWNjZXNzb3I6ICdnZXRGaWxsQ29sb3InLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFswLCAwLCAwLCAyNTVdXG4gICAgICB9LFxuICAgICAgaW5zdGFuY2VMaW5lQ29sb3JzOiB7XG4gICAgICAgIHNpemU6IDQsXG4gICAgICAgIHRyYW5zaXRpb246IHRydWUsXG4gICAgICAgIG5vcm1hbGl6ZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IDUxMjEsXG4gICAgICAgIGFjY2Vzc29yOiAnZ2V0TGluZUNvbG9yJyxcbiAgICAgICAgZGVmYXVsdFZhbHVlOiBbMCwgMCwgMCwgMjU1XVxuICAgICAgfSxcbiAgICAgIGluc3RhbmNlTGluZVdpZHRoczoge1xuICAgICAgICBzaXplOiAxLFxuICAgICAgICB0cmFuc2l0aW9uOiB0cnVlLFxuICAgICAgICBhY2Nlc3NvcjogJ2dldExpbmVXaWR0aCcsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogMVxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdXBkYXRlU3RhdGUoe1xuICAgIHByb3BzLFxuICAgIG9sZFByb3BzLFxuICAgIGNoYW5nZUZsYWdzXG4gIH0pIHtcbiAgICBzdXBlci51cGRhdGVTdGF0ZSh7XG4gICAgICBwcm9wcyxcbiAgICAgIG9sZFByb3BzLFxuICAgICAgY2hhbmdlRmxhZ3NcbiAgICB9KTtcblxuICAgIGlmIChjaGFuZ2VGbGFncy5leHRlbnNpb25zQ2hhbmdlZCkge1xuICAgICAgdmFyIF90aGlzJHN0YXRlJG1vZGVsO1xuXG4gICAgICBjb25zdCB7XG4gICAgICAgIGdsXG4gICAgICB9ID0gdGhpcy5jb250ZXh0O1xuICAgICAgKF90aGlzJHN0YXRlJG1vZGVsID0gdGhpcy5zdGF0ZS5tb2RlbCkgPT09IG51bGwgfHwgX3RoaXMkc3RhdGUkbW9kZWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHN0YXRlJG1vZGVsLmRlbGV0ZSgpO1xuICAgICAgdGhpcy5zdGF0ZS5tb2RlbCA9IHRoaXMuX2dldE1vZGVsKGdsKTtcbiAgICAgIHRoaXMuZ2V0QXR0cmlidXRlTWFuYWdlcigpLmludmFsaWRhdGVBbGwoKTtcbiAgICB9XG4gIH1cblxuICBkcmF3KHtcbiAgICB1bmlmb3Jtc1xuICB9KSB7XG4gICAgY29uc3Qge1xuICAgICAgdmlld3BvcnRcbiAgICB9ID0gdGhpcy5jb250ZXh0O1xuICAgIGNvbnN0IHtcbiAgICAgIGJpbGxib2FyZCxcbiAgICAgIHNpemVTY2FsZSxcbiAgICAgIHNpemVVbml0cyxcbiAgICAgIHNpemVNaW5QaXhlbHMsXG4gICAgICBzaXplTWF4UGl4ZWxzLFxuICAgICAgZ2V0TGluZVdpZHRoXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgbGV0IHtcbiAgICAgIHBhZGRpbmdcbiAgICB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzaXplU2NhbGVNdWx0aXBsaWVyID0gc2l6ZVVuaXRzID09PSAncGl4ZWxzJyA/IHZpZXdwb3J0Lm1ldGVyc1BlclBpeGVsIDogMTtcblxuICAgIGlmIChwYWRkaW5nLmxlbmd0aCA8IDQpIHtcbiAgICAgIHBhZGRpbmcgPSBbcGFkZGluZ1swXSwgcGFkZGluZ1sxXSwgcGFkZGluZ1swXSwgcGFkZGluZ1sxXV07XG4gICAgfVxuXG4gICAgdGhpcy5zdGF0ZS5tb2RlbC5zZXRVbmlmb3Jtcyh1bmlmb3Jtcykuc2V0VW5pZm9ybXMoe1xuICAgICAgYmlsbGJvYXJkLFxuICAgICAgc3Ryb2tlZDogQm9vbGVhbihnZXRMaW5lV2lkdGgpLFxuICAgICAgcGFkZGluZyxcbiAgICAgIHNpemVTY2FsZTogc2l6ZVNjYWxlICogc2l6ZVNjYWxlTXVsdGlwbGllcixcbiAgICAgIHNpemVNaW5QaXhlbHMsXG4gICAgICBzaXplTWF4UGl4ZWxzXG4gICAgfSkuZHJhdygpO1xuICB9XG5cbiAgX2dldE1vZGVsKGdsKSB7XG4gICAgY29uc3QgcG9zaXRpb25zID0gWzAsIDAsIDEsIDAsIDEsIDEsIDAsIDFdO1xuICAgIHJldHVybiBuZXcgTW9kZWwoZ2wsIHsgLi4udGhpcy5nZXRTaGFkZXJzKCksXG4gICAgICBpZDogdGhpcy5wcm9wcy5pZCxcbiAgICAgIGdlb21ldHJ5OiBuZXcgR2VvbWV0cnkoe1xuICAgICAgICBkcmF3TW9kZTogNixcbiAgICAgICAgdmVydGV4Q291bnQ6IDQsXG4gICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICBwb3NpdGlvbnM6IHtcbiAgICAgICAgICAgIHNpemU6IDIsXG4gICAgICAgICAgICB2YWx1ZTogbmV3IEZsb2F0MzJBcnJheShwb3NpdGlvbnMpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KSxcbiAgICAgIGlzSW5zdGFuY2VkOiB0cnVlXG4gICAgfSk7XG4gIH1cblxufVxuVGV4dEJhY2tncm91bmRMYXllci5sYXllck5hbWUgPSAnVGV4dEJhY2tncm91bmRMYXllcic7XG5UZXh0QmFja2dyb3VuZExheWVyLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRleHQtYmFja2dyb3VuZC1sYXllci5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js":
/*!************************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return TextLayer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/lib/composite-layer.js\");\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/iterable-utils.js\");\n/* harmony import */ var _multi_icon_layer_multi_icon_layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./multi-icon-layer/multi-icon-layer */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/multi-icon-layer/multi-icon-layer.js\");\n/* harmony import */ var _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./font-atlas-manager */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/font-atlas-manager.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js\");\n/* harmony import */ var _text_background_layer_text_background_layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text-background-layer/text-background-layer */ \"./node_modules/@deck.gl/layers/dist/esm/text-layer/text-background-layer/text-background-layer.js\");\n\n\n\n\n\nconst DEFAULT_FONT_SETTINGS = {\n  fontSize: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_FONT_SIZE\"],\n  buffer: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_BUFFER\"],\n  sdf: false,\n  radius: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_RADIUS\"],\n  cutoff: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_CUTOFF\"],\n  smoothing: 0.1\n};\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\nconst DEFAULT_COLOR = [0, 0, 0, 255];\nconst DEFAULT_LINE_HEIGHT = 1.0;\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\nconst defaultProps = {\n  billboard: true,\n  sizeScale: 1,\n  sizeUnits: 'pixels',\n  sizeMinPixels: 0,\n  sizeMaxPixels: Number.MAX_SAFE_INTEGER,\n  background: false,\n  getBackgroundColor: {\n    type: 'accessor',\n    value: [255, 255, 255, 255]\n  },\n  getBorderColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getBorderWidth: {\n    type: 'accessor',\n    value: 0\n  },\n  backgroundPadding: {\n    type: 'array',\n    value: [0, 0, 0, 0]\n  },\n  characterSet: {\n    type: 'object',\n    value: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_CHAR_SET\"]\n  },\n  fontFamily: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_FONT_FAMILY\"],\n  fontWeight: _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_FONT_WEIGHT\"],\n  lineHeight: DEFAULT_LINE_HEIGHT,\n  outlineWidth: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  outlineColor: {\n    type: 'color',\n    value: DEFAULT_COLOR\n  },\n  fontSettings: {},\n  wordBreak: 'break-word',\n  maxWidth: {\n    type: 'number',\n    value: -1\n  },\n  getText: {\n    type: 'accessor',\n    value: x => x.text\n  },\n  getPosition: {\n    type: 'accessor',\n    value: x => x.position\n  },\n  getColor: {\n    type: 'accessor',\n    value: DEFAULT_COLOR\n  },\n  getSize: {\n    type: 'accessor',\n    value: 32\n  },\n  getAngle: {\n    type: 'accessor',\n    value: 0\n  },\n  getTextAnchor: {\n    type: 'accessor',\n    value: 'middle'\n  },\n  getAlignmentBaseline: {\n    type: 'accessor',\n    value: 'center'\n  },\n  getPixelOffset: {\n    type: 'accessor',\n    value: [0, 0]\n  },\n  backgroundColor: {\n    deprecatedFor: ['background', 'getBackgroundColor']\n  }\n};\nclass TextLayer extends _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  initializeState() {\n    this.state = {\n      styleVersion: 0,\n      fontAtlasManager: new _font_atlas_manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"]()\n    };\n  }\n\n  updateState({\n    props,\n    oldProps,\n    changeFlags\n  }) {\n    const textChanged = changeFlags.dataChanged || changeFlags.updateTriggersChanged && (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText);\n    const oldCharacterSet = this.state.characterSet;\n\n    if (textChanged) {\n      this._updateText();\n    }\n\n    const fontChanged = oldCharacterSet !== this.state.characterSet || this._fontChanged(oldProps, props);\n\n    if (fontChanged) {\n      this._updateFontAtlas(oldProps, props);\n    }\n\n    const styleChanged = fontChanged || props.lineHeight !== oldProps.lineHeight || props.wordBreak !== oldProps.wordBreak || props.maxWidth !== oldProps.maxWidth;\n\n    if (styleChanged) {\n      this.setState({\n        styleVersion: this.state.styleVersion + 1\n      });\n    }\n  }\n\n  getPickingInfo({\n    info\n  }) {\n    info.object = info.index >= 0 ? this.props.data[info.index] : null;\n    return info;\n  }\n\n  _updateFontAtlas(oldProps, props) {\n    const {\n      fontSettings,\n      fontFamily,\n      fontWeight\n    } = props;\n    const {\n      fontAtlasManager,\n      characterSet\n    } = this.state;\n    fontAtlasManager.setProps({ ...DEFAULT_FONT_SETTINGS,\n      ...fontSettings,\n      characterSet,\n      fontFamily,\n      fontWeight\n    });\n  }\n\n  _fontChanged(oldProps, props) {\n    if (oldProps.fontFamily !== props.fontFamily || oldProps.fontWeight !== props.fontWeight) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  _updateText() {\n    const {\n      data,\n      characterSet\n    } = this.props;\n    const textBuffer = data.attributes && data.attributes.getText;\n    let {\n      getText\n    } = this.props;\n    let {\n      startIndices\n    } = data;\n    let numInstances;\n    const autoCharacterSet = characterSet === 'auto' && new Set();\n\n    if (textBuffer && startIndices) {\n      const {\n        texts,\n        characterCount\n      } = Object(_utils__WEBPACK_IMPORTED_MODULE_4__[\"getTextFromBuffer\"])({ ...(ArrayBuffer.isView(textBuffer) ? {\n          value: textBuffer\n        } : textBuffer),\n        length: data.length,\n        startIndices,\n        characterSet: autoCharacterSet\n      });\n      numInstances = characterCount;\n\n      getText = (_, {\n        index\n      }) => texts[index];\n    } else {\n      const {\n        iterable,\n        objectInfo\n      } = Object(_deck_gl_core__WEBPACK_IMPORTED_MODULE_1__[\"createIterable\"])(data);\n      startIndices = [0];\n      numInstances = 0;\n\n      for (const object of iterable) {\n        objectInfo.index++;\n        const text = Array.from(getText(object, objectInfo) || '');\n\n        if (autoCharacterSet) {\n          text.forEach(autoCharacterSet.add, autoCharacterSet);\n        }\n\n        numInstances += text.length;\n        startIndices.push(numInstances);\n      }\n    }\n\n    this.setState({\n      getText,\n      startIndices,\n      numInstances,\n      characterSet: autoCharacterSet || characterSet\n    });\n  }\n\n  getBoundingRect(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {\n      getText\n    } = this.state;\n    const {\n      wordBreak,\n      maxWidth,\n      lineHeight,\n      getTextAnchor,\n      getAlignmentBaseline\n    } = this.props;\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      size: [width, height]\n    } = Object(_utils__WEBPACK_IMPORTED_MODULE_4__[\"transformParagraph\"])(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n    const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n    return [(anchorX - 1) * width / 2, (anchorY - 1) * height / 2, width, height];\n  }\n\n  getIconOffsets(object, objectInfo) {\n    const iconMapping = this.state.fontAtlasManager.mapping;\n    const {\n      getText\n    } = this.state;\n    const {\n      wordBreak,\n      maxWidth,\n      lineHeight,\n      getTextAnchor,\n      getAlignmentBaseline\n    } = this.props;\n    const paragraph = getText(object, objectInfo) || '';\n    const {\n      x,\n      y,\n      rowWidth,\n      size: [width, height]\n    } = Object(_utils__WEBPACK_IMPORTED_MODULE_4__[\"transformParagraph\"])(paragraph, lineHeight, wordBreak, maxWidth, iconMapping);\n    const anchorX = TEXT_ANCHOR[typeof getTextAnchor === 'function' ? getTextAnchor(object, objectInfo) : getTextAnchor];\n    const anchorY = ALIGNMENT_BASELINE[typeof getAlignmentBaseline === 'function' ? getAlignmentBaseline(object, objectInfo) : getAlignmentBaseline];\n    const numCharacters = x.length;\n    const offsets = new Array(numCharacters * 2);\n    let index = 0;\n\n    for (let i = 0; i < numCharacters; i++) {\n      const rowOffset = (1 - anchorX) * (width - rowWidth[i]) / 2;\n      offsets[index++] = (anchorX - 1) * width / 2 + rowOffset + x[i];\n      offsets[index++] = (anchorY - 1) * height / 2 + y[i];\n    }\n\n    return offsets;\n  }\n\n  renderLayers() {\n    const {\n      startIndices,\n      numInstances,\n      getText,\n      fontAtlasManager: {\n        scale,\n        texture,\n        mapping\n      },\n      styleVersion\n    } = this.state;\n    const {\n      data,\n      _dataDiff,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      getBackgroundColor,\n      getBorderColor,\n      getBorderWidth,\n      backgroundPadding,\n      background,\n      billboard,\n      fontSettings,\n      outlineWidth,\n      outlineColor,\n      sizeScale,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions,\n      updateTriggers\n    } = this.props;\n    const CharactersLayerClass = this.getSubLayerClass('characters', _multi_icon_layer_multi_icon_layer__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    const BackgroundLayerClass = this.getSubLayerClass('background', _text_background_layer_text_background_layer__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n    return [background && new BackgroundLayerClass({\n      getFillColor: getBackgroundColor,\n      getLineColor: getBorderColor,\n      getLineWidth: getBorderWidth,\n      padding: backgroundPadding,\n      getPosition,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      sizeScale: sizeScale / this.state.fontAtlasManager.props.fontSize,\n      sizeUnits,\n      sizeMinPixels,\n      sizeMaxPixels,\n      transitions: transitions && {\n        getPosition: transitions.getPosition,\n        getAngle: transitions.getAngle,\n        getSize: transitions.getSize,\n        getFillColor: transitions.getBackgroundColor,\n        getLineColor: transitions.getBorderColor,\n        getLineWidth: transitions.getBorderWidth,\n        getPixelOffset: transitions.getPixelOffset\n      }\n    }, this.getSubLayerProps({\n      id: 'background',\n      updateTriggers: {\n        getPosition: updateTriggers.getPosition,\n        getAngle: updateTriggers.getAngle,\n        getSize: updateTriggers.getSize,\n        getFillColor: updateTriggers.getBackgroundColor,\n        getLineColor: updateTriggers.getBorderColor,\n        getLineWidth: updateTriggers.getBorderWidth,\n        getPixelOffset: updateTriggers.getPixelOffset,\n        getBoundingRect: {\n          getText: updateTriggers.getText,\n          getTextAnchor: updateTriggers.getTextAnchor,\n          getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n          styleVersion\n        }\n      }\n    }), {\n      data: data.attributes ? {\n        length: data.length,\n        attributes: data.attributes.background || {}\n      } : data,\n      _dataDiff,\n      autoHighlight: false,\n      getBoundingRect: this.getBoundingRect.bind(this)\n    }), new CharactersLayerClass({\n      sdf: fontSettings.sdf,\n      smoothing: Number.isFinite(fontSettings.smoothing) ? fontSettings.smoothing : DEFAULT_FONT_SETTINGS.smoothing,\n      outlineWidth,\n      outlineColor,\n      iconAtlas: texture,\n      iconMapping: mapping,\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      billboard,\n      sizeScale: sizeScale * scale,\n      sizeUnits,\n      sizeMinPixels: sizeMinPixels * scale,\n      sizeMaxPixels: sizeMaxPixels * scale,\n      transitions: transitions && {\n        getPosition: transitions.getPosition,\n        getAngle: transitions.getAngle,\n        getColor: transitions.getColor,\n        getSize: transitions.getSize,\n        getPixelOffset: transitions.getPixelOffset\n      }\n    }, this.getSubLayerProps({\n      id: 'characters',\n      updateTriggers: {\n        getIcon: updateTriggers.getText,\n        getPosition: updateTriggers.getPosition,\n        getAngle: updateTriggers.getAngle,\n        getColor: updateTriggers.getColor,\n        getSize: updateTriggers.getSize,\n        getPixelOffset: updateTriggers.getPixelOffset,\n        getIconOffsets: {\n          getText: updateTriggers.getText,\n          getTextAnchor: updateTriggers.getTextAnchor,\n          getAlignmentBaseline: updateTriggers.getAlignmentBaseline,\n          styleVersion\n        }\n      }\n    }), {\n      data,\n      _dataDiff,\n      startIndices,\n      numInstances,\n      getIconOffsets: this.getIconOffsets.bind(this),\n      getIcon: getText\n    })];\n  }\n\n}\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n//# sourceMappingURL=text-layer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/text-layer.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js ***!
  \*******************************************************************/
/*! exports provided: nextPowOfTwo, buildMapping, autoWrapping, transformParagraph, getTextFromBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nextPowOfTwo\", function() { return nextPowOfTwo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildMapping\", function() { return buildMapping; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"autoWrapping\", function() { return autoWrapping; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformParagraph\", function() { return transformParagraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTextFromBuffer\", function() { return getTextFromBuffer; });\n/* harmony import */ var _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @deck.gl/core */ \"./node_modules/@deck.gl/core/dist/esm/utils/log.js\");\n\nconst MISSING_CHAR_WIDTH = 32;\nconst SINGLE_LINE = [];\nfunction nextPowOfTwo(number) {\n  return Math.pow(2, Math.ceil(Math.log2(number)));\n}\nfunction buildMapping({\n  characterSet,\n  getFontWidth,\n  fontHeight,\n  buffer,\n  maxCanvasWidth,\n  mapping = {},\n  xOffset = 0,\n  yOffset = 0\n}) {\n  let row = 0;\n  let x = xOffset;\n  let i = 0;\n\n  for (const char of characterSet) {\n    if (!mapping[char]) {\n      const width = getFontWidth(char, i++);\n\n      if (x + width + buffer * 2 > maxCanvasWidth) {\n        x = 0;\n        row++;\n      }\n\n      mapping[char] = {\n        x: x + buffer,\n        y: yOffset + row * (fontHeight + buffer * 2) + buffer,\n        width,\n        height: fontHeight\n      };\n      x += width + buffer * 2;\n    }\n  }\n\n  const rowHeight = fontHeight + buffer * 2;\n  return {\n    mapping,\n    xOffset: x,\n    yOffset: yOffset + row * rowHeight,\n    canvasHeight: nextPowOfTwo(yOffset + (row + 1) * rowHeight)\n  };\n}\n\nfunction getTextWidth(text, startIndex, endIndex, mapping) {\n  let width = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = text[i];\n    let frameWidth = null;\n    const frame = mapping && mapping[character];\n\n    if (frame) {\n      frameWidth = frame.width;\n    }\n\n    width += frameWidth;\n  }\n\n  return width;\n}\n\nfunction breakAll(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  let rowStartCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const textWidth = getTextWidth(text, i, i + 1, iconMapping);\n\n    if (rowOffsetLeft + textWidth > maxWidth) {\n      if (rowStartCharIndex < i) {\n        target.push(i);\n      }\n\n      rowStartCharIndex = i;\n      rowOffsetLeft = 0;\n    }\n\n    rowOffsetLeft += textWidth;\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction breakWord(text, startIndex, endIndex, maxWidth, iconMapping, target) {\n  let rowStartCharIndex = startIndex;\n  let groupStartCharIndex = startIndex;\n  let groupEndCharIndex = startIndex;\n  let rowOffsetLeft = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    if (text[i] === ' ') {\n      groupEndCharIndex = i + 1;\n    } else if (text[i + 1] === ' ' || i + 1 === endIndex) {\n      groupEndCharIndex = i + 1;\n    }\n\n    if (groupEndCharIndex > groupStartCharIndex) {\n      let groupWidth = getTextWidth(text, groupStartCharIndex, groupEndCharIndex, iconMapping);\n\n      if (rowOffsetLeft + groupWidth > maxWidth) {\n        if (rowStartCharIndex < groupStartCharIndex) {\n          target.push(groupStartCharIndex);\n          rowStartCharIndex = groupStartCharIndex;\n          rowOffsetLeft = 0;\n        }\n\n        if (groupWidth > maxWidth) {\n          groupWidth = breakAll(text, groupStartCharIndex, groupEndCharIndex, maxWidth, iconMapping, target);\n          rowStartCharIndex = target[target.length - 1];\n        }\n      }\n\n      groupStartCharIndex = groupEndCharIndex;\n      rowOffsetLeft += groupWidth;\n    }\n  }\n\n  return rowOffsetLeft;\n}\n\nfunction autoWrapping(text, wordBreak, maxWidth, iconMapping, startIndex = 0, endIndex) {\n  if (endIndex === undefined) {\n    endIndex = text.length;\n  }\n\n  const result = [];\n\n  if (wordBreak === 'break-all') {\n    breakAll(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  } else {\n    breakWord(text, startIndex, endIndex, maxWidth, iconMapping, result);\n  }\n\n  return result;\n}\n\nfunction transformRow(line, startIndex, endIndex, iconMapping, leftOffsets, rowSize) {\n  let x = 0;\n  let rowHeight = 0;\n\n  for (let i = startIndex; i < endIndex; i++) {\n    const character = line[i];\n    const frame = iconMapping[character];\n\n    if (frame) {\n      if (!rowHeight) {\n        rowHeight = frame.height;\n      }\n\n      leftOffsets[i] = x + frame.width / 2;\n      x += frame.width;\n    } else {\n      _deck_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(\"Missing character: \".concat(character, \" (\").concat(character.codePointAt(0), \")\"))();\n      leftOffsets[i] = x;\n      x += MISSING_CHAR_WIDTH;\n    }\n  }\n\n  rowSize[0] = x;\n  rowSize[1] = rowHeight;\n}\n\nfunction transformParagraph(paragraph, lineHeight, wordBreak, maxWidth, iconMapping) {\n  paragraph = Array.from(paragraph);\n  const numCharacters = paragraph.length;\n  const x = new Array(numCharacters);\n  const y = new Array(numCharacters);\n  const rowWidth = new Array(numCharacters);\n  const autoWrappingEnabled = (wordBreak === 'break-word' || wordBreak === 'break-all') && isFinite(maxWidth) && maxWidth > 0;\n  const size = [0, 0];\n  const rowSize = [];\n  let rowOffsetTop = 0;\n  let lineStartIndex = 0;\n  let lineEndIndex = 0;\n\n  for (let i = 0; i <= numCharacters; i++) {\n    const char = paragraph[i];\n\n    if (char === '\\n' || i === numCharacters) {\n      lineEndIndex = i;\n    }\n\n    if (lineEndIndex > lineStartIndex) {\n      const rows = autoWrappingEnabled ? autoWrapping(paragraph, wordBreak, maxWidth, iconMapping, lineStartIndex, lineEndIndex) : SINGLE_LINE;\n\n      for (let rowIndex = 0; rowIndex <= rows.length; rowIndex++) {\n        const rowStart = rowIndex === 0 ? lineStartIndex : rows[rowIndex - 1];\n        const rowEnd = rowIndex < rows.length ? rows[rowIndex] : lineEndIndex;\n        transformRow(paragraph, rowStart, rowEnd, iconMapping, x, rowSize);\n\n        for (let j = rowStart; j < rowEnd; j++) {\n          y[j] = rowOffsetTop + rowSize[1] / 2;\n          rowWidth[j] = rowSize[0];\n        }\n\n        rowOffsetTop = rowOffsetTop + rowSize[1] * lineHeight;\n        size[0] = Math.max(size[0], rowSize[0]);\n      }\n\n      lineStartIndex = lineEndIndex;\n    }\n\n    if (char === '\\n') {\n      x[lineStartIndex] = 0;\n      y[lineStartIndex] = 0;\n      rowWidth[lineStartIndex] = 0;\n      lineStartIndex++;\n    }\n  }\n\n  size[1] = rowOffsetTop;\n  return {\n    x,\n    y,\n    rowWidth,\n    size\n  };\n}\nfunction getTextFromBuffer({\n  value,\n  length,\n  stride,\n  offset,\n  startIndices,\n  characterSet\n}) {\n  const bytesPerElement = value.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : 1;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const characterCount = startIndices[length] || Math.ceil((value.length - elementOffset) / elementStride);\n  const autoCharacterSet = characterSet && new Set();\n  const texts = new Array(length);\n  let codes = value;\n\n  if (elementStride > 1 || elementOffset > 0) {\n    codes = new value.constructor(characterCount);\n\n    for (let i = 0; i < characterCount; i++) {\n      codes[i] = value[i * elementStride + elementOffset];\n    }\n  }\n\n  for (let index = 0; index < length; index++) {\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || characterCount;\n    const codesAtIndex = codes.subarray(startIndex, endIndex);\n    texts[index] = String.fromCodePoint.apply(null, codesAtIndex);\n\n    if (autoCharacterSet) {\n      codesAtIndex.forEach(autoCharacterSet.add, autoCharacterSet);\n    }\n  }\n\n  if (autoCharacterSet) {\n    for (const charCode of autoCharacterSet) {\n      characterSet.add(String.fromCodePoint(charCode));\n    }\n  }\n\n  return {\n    texts,\n    characterCount\n  };\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/text-layer/utils.js\n");

/***/ }),

/***/ "./node_modules/@deck.gl/layers/dist/esm/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@deck.gl/layers/dist/esm/utils.js ***!
  \********************************************************/
/*! exports provided: replaceInRange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"replaceInRange\", function() { return replaceInRange; });\nfunction replaceInRange({\n  data,\n  getIndex,\n  dataRange,\n  replace\n}) {\n  const {\n    startRow = 0,\n    endRow = Infinity\n  } = dataRange;\n  const count = data.length;\n  let replaceStart = count;\n  let replaceEnd = count;\n\n  for (let i = 0; i < count; i++) {\n    const row = getIndex(data[i]);\n\n    if (replaceStart > i && row >= startRow) {\n      replaceStart = i;\n    }\n\n    if (row >= endRow) {\n      replaceEnd = i;\n      break;\n    }\n  }\n\n  let index = replaceStart;\n  const dataLengthChanged = replaceEnd - replaceStart !== replace.length;\n  const endChunk = dataLengthChanged && data.slice(replaceEnd);\n\n  for (let i = 0; i < replace.length; i++) {\n    data[index++] = replace[i];\n  }\n\n  if (dataLengthChanged) {\n    for (let i = 0; i < endChunk.length; i++) {\n      data[index++] = endChunk[i];\n    }\n\n    data.length = index;\n  }\n\n  return {\n    startRow: replaceStart,\n    endRow: replaceStart + replace.length\n  };\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGRlY2suZ2wvbGF5ZXJzL2Rpc3QvZXNtL3V0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BkZWNrLmdsL2xheWVycy9kaXN0L2VzbS91dGlscy5qcz8yMjZkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiByZXBsYWNlSW5SYW5nZSh7XG4gIGRhdGEsXG4gIGdldEluZGV4LFxuICBkYXRhUmFuZ2UsXG4gIHJlcGxhY2Vcbn0pIHtcbiAgY29uc3Qge1xuICAgIHN0YXJ0Um93ID0gMCxcbiAgICBlbmRSb3cgPSBJbmZpbml0eVxuICB9ID0gZGF0YVJhbmdlO1xuICBjb25zdCBjb3VudCA9IGRhdGEubGVuZ3RoO1xuICBsZXQgcmVwbGFjZVN0YXJ0ID0gY291bnQ7XG4gIGxldCByZXBsYWNlRW5kID0gY291bnQ7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgY29uc3Qgcm93ID0gZ2V0SW5kZXgoZGF0YVtpXSk7XG5cbiAgICBpZiAocmVwbGFjZVN0YXJ0ID4gaSAmJiByb3cgPj0gc3RhcnRSb3cpIHtcbiAgICAgIHJlcGxhY2VTdGFydCA9IGk7XG4gICAgfVxuXG4gICAgaWYgKHJvdyA+PSBlbmRSb3cpIHtcbiAgICAgIHJlcGxhY2VFbmQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgbGV0IGluZGV4ID0gcmVwbGFjZVN0YXJ0O1xuICBjb25zdCBkYXRhTGVuZ3RoQ2hhbmdlZCA9IHJlcGxhY2VFbmQgLSByZXBsYWNlU3RhcnQgIT09IHJlcGxhY2UubGVuZ3RoO1xuICBjb25zdCBlbmRDaHVuayA9IGRhdGFMZW5ndGhDaGFuZ2VkICYmIGRhdGEuc2xpY2UocmVwbGFjZUVuZCk7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXBsYWNlLmxlbmd0aDsgaSsrKSB7XG4gICAgZGF0YVtpbmRleCsrXSA9IHJlcGxhY2VbaV07XG4gIH1cblxuICBpZiAoZGF0YUxlbmd0aENoYW5nZWQpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVuZENodW5rLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkYXRhW2luZGV4KytdID0gZW5kQ2h1bmtbaV07XG4gICAgfVxuXG4gICAgZGF0YS5sZW5ndGggPSBpbmRleDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc3RhcnRSb3c6IHJlcGxhY2VTdGFydCxcbiAgICBlbmRSb3c6IHJlcGxhY2VTdGFydCArIHJlcGxhY2UubGVuZ3RoXG4gIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@deck.gl/layers/dist/esm/utils.js\n");

/***/ }),

/***/ "./node_modules/@mapbox/tiny-sdf/index.js":
/*!************************************************!*\
  !*** ./node_modules/@mapbox/tiny-sdf/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = TinySDF;\nmodule.exports.default = TinySDF;\n\nvar INF = 1e20;\n\nfunction TinySDF(fontSize, buffer, radius, cutoff, fontFamily, fontWeight) {\n    this.fontSize = fontSize || 24;\n    this.buffer = buffer === undefined ? 3 : buffer;\n    this.cutoff = cutoff || 0.25;\n    this.fontFamily = fontFamily || 'sans-serif';\n    this.fontWeight = fontWeight || 'normal';\n    this.radius = radius || 8;\n\n    // For backwards compatibility, we honor the implicit contract that the\n    // size of the returned bitmap will be fontSize + buffer * 2\n    var size = this.size = this.fontSize + this.buffer * 2;\n    // Glyphs may be slightly larger than their fontSize. The canvas already\n    // has buffer space, but create extra buffer space in the output grid for the\n    // \"halo\" to extend into (if metric extraction is enabled)\n    var gridSize = size + this.buffer * 2;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = size;\n\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.font = this.fontWeight + ' ' + this.fontSize + 'px ' + this.fontFamily;\n\n    this.ctx.textAlign = 'left'; // Necessary so that RTL text doesn't have different alignment\n    this.ctx.fillStyle = 'black';\n\n    // temporary arrays for the distance transform\n    this.gridOuter = new Float64Array(gridSize * gridSize);\n    this.gridInner = new Float64Array(gridSize * gridSize);\n    this.f = new Float64Array(gridSize);\n    this.z = new Float64Array(gridSize + 1);\n    this.v = new Uint16Array(gridSize);\n\n    this.useMetrics = this.ctx.measureText('A').actualBoundingBoxLeft !== undefined;\n\n    // hack around https://bugzilla.mozilla.org/show_bug.cgi?id=737852\n    this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\n}\n\nfunction prepareGrids(imgData, width, height, glyphWidth, glyphHeight, gridOuter, gridInner) {\n    // Initialize grids outside the glyph range to alpha 0\n    gridOuter.fill(INF, 0, width * height);\n    gridInner.fill(0, 0, width * height);\n\n    var offset = (width - glyphWidth) / 2; // This is zero if we're not extracting metrics\n\n    for (var y = 0; y < glyphHeight; y++) {\n        for (var x = 0; x < glyphWidth; x++) {\n            var j = (y + offset) * width + x + offset;\n            var a = imgData.data[4 * (y * glyphWidth + x) + 3] / 255; // alpha value\n            if (a === 1) {\n                gridOuter[j] = 0;\n                gridInner[j] = INF;\n            } else if (a === 0) {\n                gridOuter[j] = INF;\n                gridInner[j] = 0;\n            } else {\n                var b = Math.max(0, 0.5 - a);\n                var c = Math.max(0, a - 0.5);\n                gridOuter[j] = b * b;\n                gridInner[j] = c * c;\n            }\n        }\n    }\n}\n\nfunction extractAlpha(alphaChannel, width, height, gridOuter, gridInner, radius, cutoff) {\n    for (var i = 0; i < width * height; i++) {\n        var d = Math.sqrt(gridOuter[i]) - Math.sqrt(gridInner[i]);\n        alphaChannel[i] = Math.round(255 - 255 * (d / radius + cutoff));\n    }\n}\n\nTinySDF.prototype._draw = function (char, getMetrics) {\n    var textMetrics = this.ctx.measureText(char);\n    // Older browsers only expose the glyph width\n    // This is enough for basic layout with all glyphs using the same fixed size\n    var advance = textMetrics.width;\n\n    var doubleBuffer = 2 * this.buffer;\n    var width, glyphWidth, height, glyphHeight, top;\n\n    var imgTop, imgLeft, baselinePosition;\n    // If the browser supports bounding box metrics, we can generate a smaller\n    // SDF. This is a significant performance win.\n    if (getMetrics && this.useMetrics) {\n        // The integer/pixel part of the top alignment is encoded in metrics.top\n        // The remainder is implicitly encoded in the rasterization\n        top = Math.floor(textMetrics.actualBoundingBoxAscent);\n        baselinePosition = this.buffer + Math.ceil(textMetrics.actualBoundingBoxAscent);\n        imgTop = this.buffer;\n        imgLeft = this.buffer;\n\n        // If the glyph overflows the canvas size, it will be clipped at the\n        // bottom/right\n        glyphWidth = Math.min(this.size,\n            Math.ceil(textMetrics.actualBoundingBoxRight - textMetrics.actualBoundingBoxLeft));\n        glyphHeight = Math.min(this.size - imgTop,\n            Math.ceil(textMetrics.actualBoundingBoxAscent + textMetrics.actualBoundingBoxDescent));\n\n        width = glyphWidth + doubleBuffer;\n        height = glyphHeight + doubleBuffer;\n        this.ctx.textBaseline = 'alphabetic';\n    } else {\n        width = glyphWidth = this.size;\n        height = glyphHeight = this.size;\n        // 19 points is an approximation of the \"cap height\" ascent from alphabetic\n        // baseline (even though actual drawing is from middle baseline, we can\n        // use the approximation because every glyph fills the em box)\n        top = 19 * this.fontSize / 24;\n        imgTop = imgLeft = 0;\n        baselinePosition = this.middle;\n        this.ctx.textBaseline = 'middle';\n    }\n\n    var imgData;\n    if (glyphWidth && glyphHeight) {\n        this.ctx.clearRect(imgLeft, imgTop, glyphWidth, glyphHeight);\n        this.ctx.fillText(char, this.buffer, baselinePosition);\n        imgData = this.ctx.getImageData(imgLeft, imgTop, glyphWidth, glyphHeight);\n    }\n\n    var alphaChannel = new Uint8ClampedArray(width * height);\n\n    prepareGrids(imgData, width, height, glyphWidth, glyphHeight, this.gridOuter, this.gridInner);\n\n    edt(this.gridOuter, width, height, this.f, this.v, this.z);\n    edt(this.gridInner, width, height, this.f, this.v, this.z);\n\n    extractAlpha(alphaChannel, width, height, this.gridOuter, this.gridInner, this.radius, this.cutoff);\n\n    return {\n        data: alphaChannel,\n        metrics: {\n            width: glyphWidth,\n            height: glyphHeight,\n            sdfWidth: width,\n            sdfHeight: height,\n            top: top,\n            left: 0,\n            advance: advance\n        }\n    };\n};\n\nTinySDF.prototype.draw = function (char) {\n    return this._draw(char, false).data;\n};\n\nTinySDF.prototype.drawWithMetrics = function (char) {\n    return this._draw(char, true);\n};\n\n// 2D Euclidean squared distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\nfunction edt(data, width, height, f, v, z) {\n    for (var x = 0; x < width; x++) edt1d(data, x, width, height, f, v, z);\n    for (var y = 0; y < height; y++) edt1d(data, y * width, 1, width, f, v, z);\n}\n\n// 1D squared distance transform\nfunction edt1d(grid, offset, stride, length, f, v, z) {\n    var q, k, s, r;\n    v[0] = 0;\n    z[0] = -INF;\n    z[1] = INF;\n\n    for (q = 0; q < length; q++) f[q] = grid[offset + q * stride];\n\n    for (q = 1, k = 0, s = 0; q < length; q++) {\n        do {\n            r = v[k];\n            s = (f[q] - f[r] + q * q - r * r) / (q - r) / 2;\n        } while (s <= z[k] && --k > -1);\n\n        k++;\n        v[k] = q;\n        z[k] = s;\n        z[k + 1] = INF;\n    }\n\n    for (q = 0, k = 0; q < length; q++) {\n        while (z[k + 1] < q) k++;\n        r = v[k];\n        grid[offset + q * stride] = f[r] + (q - r) * (q - r);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@mapbox/tiny-sdf/index.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js":
/*!***************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js ***!
  \***************************************************************/
/*! exports provided: cutPolylineByGrid, cutPolygonByGrid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cutPolylineByGrid\", function() { return cutPolylineByGrid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cutPolygonByGrid\", function() { return cutPolygonByGrid; });\n/* harmony import */ var _lineclip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lineclip */ \"./node_modules/@math.gl/polygon/dist/esm/lineclip.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/@math.gl/polygon/dist/esm/utils.js\");\n\n\nfunction cutPolylineByGrid(positions, options = {}) {\n  const {\n    size = 2,\n    broken = false,\n    gridResolution = 10,\n    gridOffset = [0, 0],\n    startIndex = 0,\n    endIndex = positions.length\n  } = options;\n  const numPoints = (endIndex - startIndex) / size;\n  let part = [];\n  const result = [part];\n  const a = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPointAtIndex\"])(positions, 0, size, startIndex);\n  let b;\n  let codeB;\n  const cell = getGridCell(a, gridResolution, gridOffset, []);\n  const scratchPoint = [];\n  Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(part, a);\n\n  for (let i = 1; i < numPoints; i++) {\n    b = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPointAtIndex\"])(positions, i, size, startIndex, b);\n    codeB = Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"bitCode\"])(b, cell);\n\n    while (codeB) {\n      Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"intersect\"])(a, b, codeB, cell, scratchPoint);\n      const codeAlt = Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"bitCode\"])(scratchPoint, cell);\n\n      if (codeAlt) {\n        Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"intersect\"])(a, scratchPoint, codeAlt, cell, scratchPoint);\n        codeB = codeAlt;\n      }\n\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(part, scratchPoint);\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"copy\"])(a, scratchPoint);\n      moveToNeighborCell(cell, gridResolution, codeB);\n\n      if (broken && part.length > size) {\n        part = [];\n        result.push(part);\n        Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(part, a);\n      }\n\n      codeB = Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"bitCode\"])(b, cell);\n    }\n\n    Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(part, b);\n    Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"copy\"])(a, b);\n  }\n\n  return broken ? result : result[0];\n}\nconst TYPE_INSIDE = 0;\nconst TYPE_BORDER = 1;\n\nfunction concatInPlace(arr1, arr2) {\n  for (let i = 0; i < arr2.length; i++) {\n    arr1.push(arr2[i]);\n  }\n\n  return arr1;\n}\n\nfunction cutPolygonByGrid(positions, holeIndices, options = {}) {\n  if (!positions.length) {\n    return [];\n  }\n\n  const {\n    size = 2,\n    gridResolution = 10,\n    gridOffset = [0, 0],\n    edgeTypes = false\n  } = options;\n  const result = [];\n  const queue = [{\n    pos: positions,\n    types: edgeTypes && new Array(positions.length / size).fill(TYPE_BORDER),\n    holes: holeIndices || []\n  }];\n  const bbox = [[], []];\n  let cell = [];\n\n  while (queue.length) {\n    const {\n      pos,\n      types,\n      holes\n    } = queue.shift();\n    getBoundingBox(pos, size, holes[0] || pos.length, bbox);\n    cell = getGridCell(bbox[0], gridResolution, gridOffset, cell);\n    const code = Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"bitCode\"])(bbox[1], cell);\n\n    if (code) {\n      let parts = bisectPolygon(pos, types, size, 0, holes[0] || pos.length, cell, code);\n      const polygonLow = {\n        pos: parts[0].pos,\n        types: parts[0].types,\n        holes: []\n      };\n      const polygonHigh = {\n        pos: parts[1].pos,\n        types: parts[1].types,\n        holes: []\n      };\n      queue.push(polygonLow, polygonHigh);\n\n      for (let i = 0; i < holes.length; i++) {\n        parts = bisectPolygon(pos, types, size, holes[i], holes[i + 1] || pos.length, cell, code);\n\n        if (parts[0]) {\n          polygonLow.holes.push(polygonLow.pos.length);\n          polygonLow.pos = concatInPlace(polygonLow.pos, parts[0].pos);\n\n          if (edgeTypes) {\n            polygonLow.types = concatInPlace(polygonLow.types, parts[0].types);\n          }\n        }\n\n        if (parts[1]) {\n          polygonHigh.holes.push(polygonHigh.pos.length);\n          polygonHigh.pos = concatInPlace(polygonHigh.pos, parts[1].pos);\n\n          if (edgeTypes) {\n            polygonHigh.types = concatInPlace(polygonHigh.types, parts[1].types);\n          }\n        }\n      }\n    } else {\n      const polygon = {\n        positions: pos\n      };\n\n      if (edgeTypes) {\n        polygon.edgeTypes = types;\n      }\n\n      if (holes.length) {\n        polygon.holeIndices = holes;\n      }\n\n      result.push(polygon);\n    }\n  }\n\n  return result;\n}\n\nfunction bisectPolygon(positions, edgeTypes, size, startIndex, endIndex, bbox, edge) {\n  const numPoints = (endIndex - startIndex) / size;\n  const resultLow = [];\n  const resultHigh = [];\n  const typesLow = [];\n  const typesHigh = [];\n  const scratchPoint = [];\n  let p;\n  let side;\n  let type;\n  const prev = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPointAtIndex\"])(positions, numPoints - 1, size, startIndex);\n  let prevSide = Math.sign(edge & 8 ? prev[1] - bbox[3] : prev[0] - bbox[2]);\n  let prevType = edgeTypes && edgeTypes[numPoints - 1];\n  let lowPointCount = 0;\n  let highPointCount = 0;\n\n  for (let i = 0; i < numPoints; i++) {\n    p = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPointAtIndex\"])(positions, i, size, startIndex, p);\n    side = Math.sign(edge & 8 ? p[1] - bbox[3] : p[0] - bbox[2]);\n    type = edgeTypes && edgeTypes[startIndex / size + i];\n\n    if (side && prevSide && prevSide !== side) {\n      Object(_lineclip__WEBPACK_IMPORTED_MODULE_0__[\"intersect\"])(prev, p, edge, bbox, scratchPoint);\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(resultLow, scratchPoint) && typesLow.push(prevType);\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(resultHigh, scratchPoint) && typesHigh.push(prevType);\n    }\n\n    if (side <= 0) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(resultLow, p) && typesLow.push(type);\n      lowPointCount -= side;\n    } else if (typesLow.length) {\n      typesLow[typesLow.length - 1] = TYPE_INSIDE;\n    }\n\n    if (side >= 0) {\n      Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(resultHigh, p) && typesHigh.push(type);\n      highPointCount += side;\n    } else if (typesHigh.length) {\n      typesHigh[typesHigh.length - 1] = TYPE_INSIDE;\n    }\n\n    Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"copy\"])(prev, p);\n    prevSide = side;\n    prevType = type;\n  }\n\n  return [lowPointCount ? {\n    pos: resultLow,\n    types: edgeTypes && typesLow\n  } : null, highPointCount ? {\n    pos: resultHigh,\n    types: edgeTypes && typesHigh\n  } : null];\n}\n\nfunction getGridCell(p, gridResolution, gridOffset, out) {\n  const left = Math.floor((p[0] - gridOffset[0]) / gridResolution) * gridResolution + gridOffset[0];\n  const bottom = Math.floor((p[1] - gridOffset[1]) / gridResolution) * gridResolution + gridOffset[1];\n  out[0] = left;\n  out[1] = bottom;\n  out[2] = left + gridResolution;\n  out[3] = bottom + gridResolution;\n  return out;\n}\n\nfunction moveToNeighborCell(cell, gridResolution, edge) {\n  if (edge & 8) {\n    cell[1] += gridResolution;\n    cell[3] += gridResolution;\n  } else if (edge & 4) {\n    cell[1] -= gridResolution;\n    cell[3] -= gridResolution;\n  } else if (edge & 2) {\n    cell[0] += gridResolution;\n    cell[2] += gridResolution;\n  } else if (edge & 1) {\n    cell[0] -= gridResolution;\n    cell[2] -= gridResolution;\n  }\n}\n\nfunction getBoundingBox(positions, size, endIndex, out) {\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  for (let i = 0; i < endIndex; i += size) {\n    const x = positions[i];\n    const y = positions[i + 1];\n    minX = x < minX ? x : minX;\n    maxX = x > maxX ? x : maxX;\n    minY = y < minY ? y : minY;\n    maxY = y > maxY ? y : maxY;\n  }\n\n  out[0][0] = minX;\n  out[0][1] = minY;\n  out[1][0] = maxX;\n  out[1][1] = maxY;\n  return out;\n}\n//# sourceMappingURL=cut-by-grid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js ***!
  \**************************************************************************/
/*! exports provided: cutPolylineByMercatorBounds, cutPolygonByMercatorBounds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cutPolylineByMercatorBounds\", function() { return cutPolylineByMercatorBounds; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cutPolygonByMercatorBounds\", function() { return cutPolygonByMercatorBounds; });\n/* harmony import */ var _cut_by_grid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cut-by-grid */ \"./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./node_modules/@math.gl/polygon/dist/esm/utils.js\");\n\n\nconst DEFAULT_MAX_LATITUDE = 85.051129;\nfunction cutPolylineByMercatorBounds(positions, options = {}) {\n  const {\n    size = 2,\n    startIndex = 0,\n    endIndex = positions.length,\n    normalize = true\n  } = options;\n  const newPositions = positions.slice(startIndex, endIndex);\n  wrapLongitudesForShortestPath(newPositions, size, 0, endIndex - startIndex);\n  const parts = Object(_cut_by_grid__WEBPACK_IMPORTED_MODULE_0__[\"cutPolylineByGrid\"])(newPositions, {\n    size,\n    broken: true,\n    gridResolution: 360,\n    gridOffset: [-180, -180]\n  });\n\n  if (normalize) {\n    for (const part of parts) {\n      shiftLongitudesIntoRange(part, size);\n    }\n  }\n\n  return parts;\n}\nfunction cutPolygonByMercatorBounds(positions, holeIndices, options = {}) {\n  const {\n    size = 2,\n    normalize = true,\n    edgeTypes = false\n  } = options;\n  holeIndices = holeIndices || [];\n  const newPositions = [];\n  const newHoleIndices = [];\n  let srcStartIndex = 0;\n  let targetIndex = 0;\n\n  for (let ringIndex = 0; ringIndex <= holeIndices.length; ringIndex++) {\n    const srcEndIndex = holeIndices[ringIndex] || positions.length;\n    const targetStartIndex = targetIndex;\n    const splitIndex = findSplitIndex(positions, size, srcStartIndex, srcEndIndex);\n\n    for (let i = splitIndex; i < srcEndIndex; i++) {\n      newPositions[targetIndex++] = positions[i];\n    }\n\n    for (let i = srcStartIndex; i < splitIndex; i++) {\n      newPositions[targetIndex++] = positions[i];\n    }\n\n    wrapLongitudesForShortestPath(newPositions, size, targetStartIndex, targetIndex);\n    insertPoleVertices(newPositions, size, targetStartIndex, targetIndex, options.maxLatitude);\n    srcStartIndex = srcEndIndex;\n    newHoleIndices[ringIndex] = targetIndex;\n  }\n\n  newHoleIndices.pop();\n  const parts = Object(_cut_by_grid__WEBPACK_IMPORTED_MODULE_0__[\"cutPolygonByGrid\"])(newPositions, newHoleIndices, {\n    size,\n    gridResolution: 360,\n    gridOffset: [-180, -180],\n    edgeTypes\n  });\n\n  if (normalize) {\n    for (const part of parts) {\n      shiftLongitudesIntoRange(part.positions, size);\n    }\n  }\n\n  return parts;\n}\n\nfunction findSplitIndex(positions, size, startIndex, endIndex) {\n  let maxLat = -1;\n  let pointIndex = -1;\n\n  for (let i = startIndex + 1; i < endIndex; i += size) {\n    const lat = Math.abs(positions[i]);\n\n    if (lat > maxLat) {\n      maxLat = lat;\n      pointIndex = i - 1;\n    }\n  }\n\n  return pointIndex;\n}\n\nfunction insertPoleVertices(positions, size, startIndex, endIndex, maxLatitude = DEFAULT_MAX_LATITUDE) {\n  const firstLng = positions[startIndex];\n  const lastLng = positions[endIndex - size];\n\n  if (Math.abs(firstLng - lastLng) > 180) {\n    const p = Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPointAtIndex\"])(positions, 0, size, startIndex);\n    p[0] += Math.round((lastLng - firstLng) / 360) * 360;\n    Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(positions, p);\n    p[1] = Math.sign(p[1]) * maxLatitude;\n    Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(positions, p);\n    p[0] = firstLng;\n    Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"push\"])(positions, p);\n  }\n}\n\nfunction wrapLongitudesForShortestPath(positions, size, startIndex, endIndex) {\n  let prevLng = positions[0];\n  let lng;\n\n  for (let i = startIndex; i < endIndex; i += size) {\n    lng = positions[i];\n    const delta = lng - prevLng;\n\n    if (delta > 180 || delta < -180) {\n      lng -= Math.round(delta / 360) * 360;\n    }\n\n    positions[i] = prevLng = lng;\n  }\n}\n\nfunction shiftLongitudesIntoRange(positions, size) {\n  let refLng;\n  const pointCount = positions.length / size;\n\n  for (let i = 0; i < pointCount; i++) {\n    refLng = positions[i * size];\n\n    if ((refLng + 180) % 360 !== 0) {\n      break;\n    }\n  }\n\n  const delta = -Math.round(refLng / 360) * 360;\n\n  if (delta === 0) {\n    return;\n  }\n\n  for (let i = 0; i < pointCount; i++) {\n    positions[i * size] += delta;\n  }\n}\n//# sourceMappingURL=cut-by-mercator-bounds.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9jdXQtYnktbWVyY2F0b3ItYm91bmRzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3BvbHlnb24vZGlzdC9lc20vY3V0LWJ5LW1lcmNhdG9yLWJvdW5kcy5qcz84ZWU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGN1dFBvbHlsaW5lQnlHcmlkLCBjdXRQb2x5Z29uQnlHcmlkIH0gZnJvbSAnLi9jdXQtYnktZ3JpZCc7XG5pbXBvcnQgeyBnZXRQb2ludEF0SW5kZXgsIHB1c2ggfSBmcm9tICcuL3V0aWxzJztcbmNvbnN0IERFRkFVTFRfTUFYX0xBVElUVURFID0gODUuMDUxMTI5O1xuZXhwb3J0IGZ1bmN0aW9uIGN1dFBvbHlsaW5lQnlNZXJjYXRvckJvdW5kcyhwb3NpdGlvbnMsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7XG4gICAgc2l6ZSA9IDIsXG4gICAgc3RhcnRJbmRleCA9IDAsXG4gICAgZW5kSW5kZXggPSBwb3NpdGlvbnMubGVuZ3RoLFxuICAgIG5vcm1hbGl6ZSA9IHRydWVcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IG5ld1Bvc2l0aW9ucyA9IHBvc2l0aW9ucy5zbGljZShzdGFydEluZGV4LCBlbmRJbmRleCk7XG4gIHdyYXBMb25naXR1ZGVzRm9yU2hvcnRlc3RQYXRoKG5ld1Bvc2l0aW9ucywgc2l6ZSwgMCwgZW5kSW5kZXggLSBzdGFydEluZGV4KTtcbiAgY29uc3QgcGFydHMgPSBjdXRQb2x5bGluZUJ5R3JpZChuZXdQb3NpdGlvbnMsIHtcbiAgICBzaXplLFxuICAgIGJyb2tlbjogdHJ1ZSxcbiAgICBncmlkUmVzb2x1dGlvbjogMzYwLFxuICAgIGdyaWRPZmZzZXQ6IFstMTgwLCAtMTgwXVxuICB9KTtcblxuICBpZiAobm9ybWFsaXplKSB7XG4gICAgZm9yIChjb25zdCBwYXJ0IG9mIHBhcnRzKSB7XG4gICAgICBzaGlmdExvbmdpdHVkZXNJbnRvUmFuZ2UocGFydCwgc2l6ZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHBhcnRzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGN1dFBvbHlnb25CeU1lcmNhdG9yQm91bmRzKHBvc2l0aW9ucywgaG9sZUluZGljZXMsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7XG4gICAgc2l6ZSA9IDIsXG4gICAgbm9ybWFsaXplID0gdHJ1ZSxcbiAgICBlZGdlVHlwZXMgPSBmYWxzZVxuICB9ID0gb3B0aW9ucztcbiAgaG9sZUluZGljZXMgPSBob2xlSW5kaWNlcyB8fCBbXTtcbiAgY29uc3QgbmV3UG9zaXRpb25zID0gW107XG4gIGNvbnN0IG5ld0hvbGVJbmRpY2VzID0gW107XG4gIGxldCBzcmNTdGFydEluZGV4ID0gMDtcbiAgbGV0IHRhcmdldEluZGV4ID0gMDtcblxuICBmb3IgKGxldCByaW5nSW5kZXggPSAwOyByaW5nSW5kZXggPD0gaG9sZUluZGljZXMubGVuZ3RoOyByaW5nSW5kZXgrKykge1xuICAgIGNvbnN0IHNyY0VuZEluZGV4ID0gaG9sZUluZGljZXNbcmluZ0luZGV4XSB8fCBwb3NpdGlvbnMubGVuZ3RoO1xuICAgIGNvbnN0IHRhcmdldFN0YXJ0SW5kZXggPSB0YXJnZXRJbmRleDtcbiAgICBjb25zdCBzcGxpdEluZGV4ID0gZmluZFNwbGl0SW5kZXgocG9zaXRpb25zLCBzaXplLCBzcmNTdGFydEluZGV4LCBzcmNFbmRJbmRleCk7XG5cbiAgICBmb3IgKGxldCBpID0gc3BsaXRJbmRleDsgaSA8IHNyY0VuZEluZGV4OyBpKyspIHtcbiAgICAgIG5ld1Bvc2l0aW9uc1t0YXJnZXRJbmRleCsrXSA9IHBvc2l0aW9uc1tpXTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gc3JjU3RhcnRJbmRleDsgaSA8IHNwbGl0SW5kZXg7IGkrKykge1xuICAgICAgbmV3UG9zaXRpb25zW3RhcmdldEluZGV4KytdID0gcG9zaXRpb25zW2ldO1xuICAgIH1cblxuICAgIHdyYXBMb25naXR1ZGVzRm9yU2hvcnRlc3RQYXRoKG5ld1Bvc2l0aW9ucywgc2l6ZSwgdGFyZ2V0U3RhcnRJbmRleCwgdGFyZ2V0SW5kZXgpO1xuICAgIGluc2VydFBvbGVWZXJ0aWNlcyhuZXdQb3NpdGlvbnMsIHNpemUsIHRhcmdldFN0YXJ0SW5kZXgsIHRhcmdldEluZGV4LCBvcHRpb25zLm1heExhdGl0dWRlKTtcbiAgICBzcmNTdGFydEluZGV4ID0gc3JjRW5kSW5kZXg7XG4gICAgbmV3SG9sZUluZGljZXNbcmluZ0luZGV4XSA9IHRhcmdldEluZGV4O1xuICB9XG5cbiAgbmV3SG9sZUluZGljZXMucG9wKCk7XG4gIGNvbnN0IHBhcnRzID0gY3V0UG9seWdvbkJ5R3JpZChuZXdQb3NpdGlvbnMsIG5ld0hvbGVJbmRpY2VzLCB7XG4gICAgc2l6ZSxcbiAgICBncmlkUmVzb2x1dGlvbjogMzYwLFxuICAgIGdyaWRPZmZzZXQ6IFstMTgwLCAtMTgwXSxcbiAgICBlZGdlVHlwZXNcbiAgfSk7XG5cbiAgaWYgKG5vcm1hbGl6ZSkge1xuICAgIGZvciAoY29uc3QgcGFydCBvZiBwYXJ0cykge1xuICAgICAgc2hpZnRMb25naXR1ZGVzSW50b1JhbmdlKHBhcnQucG9zaXRpb25zLCBzaXplKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcGFydHM7XG59XG5cbmZ1bmN0aW9uIGZpbmRTcGxpdEluZGV4KHBvc2l0aW9ucywgc2l6ZSwgc3RhcnRJbmRleCwgZW5kSW5kZXgpIHtcbiAgbGV0IG1heExhdCA9IC0xO1xuICBsZXQgcG9pbnRJbmRleCA9IC0xO1xuXG4gIGZvciAobGV0IGkgPSBzdGFydEluZGV4ICsgMTsgaSA8IGVuZEluZGV4OyBpICs9IHNpemUpIHtcbiAgICBjb25zdCBsYXQgPSBNYXRoLmFicyhwb3NpdGlvbnNbaV0pO1xuXG4gICAgaWYgKGxhdCA+IG1heExhdCkge1xuICAgICAgbWF4TGF0ID0gbGF0O1xuICAgICAgcG9pbnRJbmRleCA9IGkgLSAxO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwb2ludEluZGV4O1xufVxuXG5mdW5jdGlvbiBpbnNlcnRQb2xlVmVydGljZXMocG9zaXRpb25zLCBzaXplLCBzdGFydEluZGV4LCBlbmRJbmRleCwgbWF4TGF0aXR1ZGUgPSBERUZBVUxUX01BWF9MQVRJVFVERSkge1xuICBjb25zdCBmaXJzdExuZyA9IHBvc2l0aW9uc1tzdGFydEluZGV4XTtcbiAgY29uc3QgbGFzdExuZyA9IHBvc2l0aW9uc1tlbmRJbmRleCAtIHNpemVdO1xuXG4gIGlmIChNYXRoLmFicyhmaXJzdExuZyAtIGxhc3RMbmcpID4gMTgwKSB7XG4gICAgY29uc3QgcCA9IGdldFBvaW50QXRJbmRleChwb3NpdGlvbnMsIDAsIHNpemUsIHN0YXJ0SW5kZXgpO1xuICAgIHBbMF0gKz0gTWF0aC5yb3VuZCgobGFzdExuZyAtIGZpcnN0TG5nKSAvIDM2MCkgKiAzNjA7XG4gICAgcHVzaChwb3NpdGlvbnMsIHApO1xuICAgIHBbMV0gPSBNYXRoLnNpZ24ocFsxXSkgKiBtYXhMYXRpdHVkZTtcbiAgICBwdXNoKHBvc2l0aW9ucywgcCk7XG4gICAgcFswXSA9IGZpcnN0TG5nO1xuICAgIHB1c2gocG9zaXRpb25zLCBwKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB3cmFwTG9uZ2l0dWRlc0ZvclNob3J0ZXN0UGF0aChwb3NpdGlvbnMsIHNpemUsIHN0YXJ0SW5kZXgsIGVuZEluZGV4KSB7XG4gIGxldCBwcmV2TG5nID0gcG9zaXRpb25zWzBdO1xuICBsZXQgbG5nO1xuXG4gIGZvciAobGV0IGkgPSBzdGFydEluZGV4OyBpIDwgZW5kSW5kZXg7IGkgKz0gc2l6ZSkge1xuICAgIGxuZyA9IHBvc2l0aW9uc1tpXTtcbiAgICBjb25zdCBkZWx0YSA9IGxuZyAtIHByZXZMbmc7XG5cbiAgICBpZiAoZGVsdGEgPiAxODAgfHwgZGVsdGEgPCAtMTgwKSB7XG4gICAgICBsbmcgLT0gTWF0aC5yb3VuZChkZWx0YSAvIDM2MCkgKiAzNjA7XG4gICAgfVxuXG4gICAgcG9zaXRpb25zW2ldID0gcHJldkxuZyA9IGxuZztcbiAgfVxufVxuXG5mdW5jdGlvbiBzaGlmdExvbmdpdHVkZXNJbnRvUmFuZ2UocG9zaXRpb25zLCBzaXplKSB7XG4gIGxldCByZWZMbmc7XG4gIGNvbnN0IHBvaW50Q291bnQgPSBwb3NpdGlvbnMubGVuZ3RoIC8gc2l6ZTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50Q291bnQ7IGkrKykge1xuICAgIHJlZkxuZyA9IHBvc2l0aW9uc1tpICogc2l6ZV07XG5cbiAgICBpZiAoKHJlZkxuZyArIDE4MCkgJSAzNjAgIT09IDApIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGRlbHRhID0gLU1hdGgucm91bmQocmVmTG5nIC8gMzYwKSAqIDM2MDtcblxuICBpZiAoZGVsdGEgPT09IDApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHBvaW50Q291bnQ7IGkrKykge1xuICAgIHBvc2l0aW9uc1tpICogc2l6ZV0gKz0gZGVsdGE7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWN1dC1ieS1tZXJjYXRvci1ib3VuZHMuanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/earcut.js":
/*!**********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/earcut.js ***!
  \**********************************************************/
/*! exports provided: earcut */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"earcut\", function() { return earcut; });\n/* harmony import */ var _polygon_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon-utils */ \"./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\");\n\nfunction earcut(data, holeIndices, dim, areas) {\n  dim = dim || 2;\n  const hasHoles = holeIndices && holeIndices.length;\n  const outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n  let outerNode = linkedList(data, 0, outerLen, dim, true, areas && areas[0]);\n  const triangles = [];\n  if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n  let invSize;\n  let maxX;\n  let maxY;\n  let minX;\n  let minY;\n  let x;\n  let y;\n  if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim, areas);\n\n  if (data.length > 80 * dim) {\n    minX = maxX = data[0];\n    minY = maxY = data[1];\n\n    for (let i = dim; i < outerLen; i += dim) {\n      x = data[i];\n      y = data[i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n    }\n\n    invSize = Math.max(maxX - minX, maxY - minY);\n    invSize = invSize !== 0 ? 1 / invSize : 0;\n  }\n\n  earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n  return triangles;\n}\n\nfunction linkedList(data, start, end, dim, clockwise, area) {\n  let i;\n  let last;\n\n  if (area === undefined) {\n    area = Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_0__[\"getPolygonSignedArea\"])(data, {\n      start,\n      end,\n      size: dim\n    });\n  }\n\n  if (clockwise === area < 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n}\n\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  let p = start;\n  let again;\n\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n}\n\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return;\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n  let stop = ear;\n  let prev;\n  let next;\n\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      triangles.push(prev.i / dim);\n      triangles.push(ear.i / dim);\n      triangles.push(next.i / dim);\n      removeNode(ear);\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n\n    ear = next;\n\n    if (ear === stop) {\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n\n      break;\n    }\n  }\n}\n\nfunction isEar(ear) {\n  const a = ear.prev;\n  const b = ear;\n  const c = ear.next;\n  if (area(a, b, c) >= 0) return false;\n  let p = ear.next.next;\n\n  while (p !== ear.prev) {\n    if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n  const a = ear.prev;\n  const b = ear;\n  const c = ear.next;\n  if (area(a, b, c) >= 0) return false;\n  const minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x;\n  const minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y;\n  const maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x;\n  const maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y;\n  const minZ = zOrder(minTX, minTY, minX, minY, invSize);\n  const maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n  let p = ear.prevZ;\n  let n = ear.nextZ;\n\n  while (p && p.z >= minZ && n && n.z <= maxZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n    if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  while (p && p.z >= minZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  }\n\n  while (n && n.z <= maxZ) {\n    if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n    n = n.nextZ;\n  }\n\n  return true;\n}\n\nfunction cureLocalIntersections(start, triangles, dim) {\n  let p = start;\n\n  do {\n    const a = p.prev;\n    const b = p.next.next;\n\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim);\n      triangles.push(p.i / dim);\n      triangles.push(b.i / dim);\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n\n    p = p.next;\n  } while (p !== start);\n\n  return filterPoints(p);\n}\n\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  let a = start;\n\n  do {\n    let b = a.next.next;\n\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        let c = splitPolygon(a, b);\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next);\n        earcutLinked(a, triangles, dim, minX, minY, invSize);\n        earcutLinked(c, triangles, dim, minX, minY, invSize);\n        return;\n      }\n\n      b = b.next;\n    }\n\n    a = a.next;\n  } while (a !== start);\n}\n\nfunction eliminateHoles(data, holeIndices, outerNode, dim, areas) {\n  const queue = [];\n  let i;\n  let len;\n  let start;\n  let end;\n  let list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false, areas && areas[i + 1]);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX);\n\n  for (i = 0; i < queue.length; i++) {\n    eliminateHole(queue[i], outerNode);\n    outerNode = filterPoints(outerNode, outerNode.next);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n}\n\nfunction eliminateHole(hole, outerNode) {\n  outerNode = findHoleBridge(hole, outerNode);\n\n  if (outerNode) {\n    const b = splitPolygon(outerNode, hole);\n    filterPoints(outerNode, outerNode.next);\n    filterPoints(b, b.next);\n  }\n}\n\nfunction findHoleBridge(hole, outerNode) {\n  let p = outerNode;\n  const hx = hole.x;\n  const hy = hole.y;\n  let qx = -Infinity;\n  let m;\n\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      const x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n      if (x <= hx && x > qx) {\n        qx = x;\n\n        if (x === hx) {\n          if (hy === p.y) return p;\n          if (hy === p.next.y) return p.next;\n        }\n\n        m = p.x < p.next.x ? p : p.next;\n      }\n    }\n\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n  if (hx === qx) return m;\n  const stop = m;\n  const mx = m.x;\n  const my = m.y;\n  let tanMin = Infinity;\n  let tan;\n  p = m;\n\n  do {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x);\n\n      if (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  } while (p !== stop);\n\n  return m;\n}\n\nfunction sectorContainsSector(m, p) {\n  return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\nfunction indexCurve(start, minX, minY, invSize) {\n  let p = start;\n\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n}\n\nfunction sortLinked(list) {\n  let e;\n  let i;\n  let inSize = 1;\n  let numMerges;\n  let p;\n  let pSize;\n  let q;\n  let qSize;\n  let tail;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n\n      qSize = inSize;\n\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n}\n\nfunction zOrder(x, y, minX, minY, invSize) {\n  x = 32767 * (x - minX) * invSize;\n  y = 32767 * (y - minY) * invSize;\n  x = (x | x << 8) & 0x00ff00ff;\n  x = (x | x << 4) & 0x0f0f0f0f;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00ff00ff;\n  y = (y | y << 4) & 0x0f0f0f0f;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n}\n\nfunction getLeftmost(start) {\n  let p = start;\n  let leftmost = start;\n\n  do {\n    if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n}\n\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && (area(a.prev, a, b.prev) || area(a, b.prev, b)) || equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0);\n}\n\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\nfunction intersects(p1, q1, p2, q2) {\n  const o1 = sign(area(p1, q1, p2));\n  const o2 = sign(area(p1, q1, q2));\n  const o3 = sign(area(p2, q2, p1));\n  const o4 = sign(area(p2, q2, q1));\n  if (o1 !== o2 && o3 !== o4) return true;\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true;\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true;\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true;\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true;\n  return false;\n}\n\nfunction onSegment(p, q, r) {\n  return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n  return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\nfunction intersectsPolygon(a, b) {\n  let p = a;\n\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n}\n\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\nfunction middleInside(a, b) {\n  let p = a;\n  let inside = false;\n  const px = (a.x + b.x) / 2;\n  const py = (a.y + b.y) / 2;\n\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n}\n\nfunction splitPolygon(a, b) {\n  const a2 = new Node(a.i, a.x, a.y);\n  const b2 = new Node(b.i, b.x, b.y);\n  const an = a.next;\n  const bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n}\n\nfunction insertNode(i, x, y, last) {\n  const p = new Node(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n  this.i = i;\n  this.x = x;\n  this.y = y;\n  this.prev = null;\n  this.next = null;\n  this.z = null;\n  this.prevZ = null;\n  this.nextZ = null;\n  this.steiner = false;\n}\n//# sourceMappingURL=earcut.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/earcut.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/index.js ***!
  \*********************************************************/
/*! exports provided: Polygon, getPolygonSignedArea, getPolygonWindingDirection, forEachSegmentInPolygon, modifyPolygonWindingDirection, WINDING, earcut, clipPolygon, clipPolyline, cutPolygonByGrid, cutPolylineByGrid, cutPolylineByMercatorBounds, cutPolygonByMercatorBounds, _Polygon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygon */ \"./node_modules/@math.gl/polygon/dist/esm/polygon.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Polygon\", function() { return _polygon__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _polygon_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polygon-utils */ \"./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getPolygonSignedArea\", function() { return _polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPolygonSignedArea\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getPolygonWindingDirection\", function() { return _polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPolygonWindingDirection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"forEachSegmentInPolygon\", function() { return _polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEachSegmentInPolygon\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"modifyPolygonWindingDirection\", function() { return _polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"modifyPolygonWindingDirection\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WINDING\", function() { return _polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"WINDING\"]; });\n\n/* harmony import */ var _earcut__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./earcut */ \"./node_modules/@math.gl/polygon/dist/esm/earcut.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"earcut\", function() { return _earcut__WEBPACK_IMPORTED_MODULE_2__[\"earcut\"]; });\n\n/* harmony import */ var _lineclip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lineclip */ \"./node_modules/@math.gl/polygon/dist/esm/lineclip.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clipPolygon\", function() { return _lineclip__WEBPACK_IMPORTED_MODULE_3__[\"clipPolygon\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"clipPolyline\", function() { return _lineclip__WEBPACK_IMPORTED_MODULE_3__[\"clipPolyline\"]; });\n\n/* harmony import */ var _cut_by_grid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cut-by-grid */ \"./node_modules/@math.gl/polygon/dist/esm/cut-by-grid.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cutPolygonByGrid\", function() { return _cut_by_grid__WEBPACK_IMPORTED_MODULE_4__[\"cutPolygonByGrid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cutPolylineByGrid\", function() { return _cut_by_grid__WEBPACK_IMPORTED_MODULE_4__[\"cutPolylineByGrid\"]; });\n\n/* harmony import */ var _cut_by_mercator_bounds__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cut-by-mercator-bounds */ \"./node_modules/@math.gl/polygon/dist/esm/cut-by-mercator-bounds.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cutPolylineByMercatorBounds\", function() { return _cut_by_mercator_bounds__WEBPACK_IMPORTED_MODULE_5__[\"cutPolylineByMercatorBounds\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cutPolygonByMercatorBounds\", function() { return _cut_by_mercator_bounds__WEBPACK_IMPORTED_MODULE_5__[\"cutPolygonByMercatorBounds\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"_Polygon\", function() { return _polygon__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC9wb2x5Z29uL2Rpc3QvZXNtL2luZGV4LmpzPzcyOWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBQb2x5Z29uIH0gZnJvbSAnLi9wb2x5Z29uJztcbmV4cG9ydCB7IGdldFBvbHlnb25TaWduZWRBcmVhLCBnZXRQb2x5Z29uV2luZGluZ0RpcmVjdGlvbiwgZm9yRWFjaFNlZ21lbnRJblBvbHlnb24sIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uLCBXSU5ESU5HIH0gZnJvbSAnLi9wb2x5Z29uLXV0aWxzJztcbmV4cG9ydCB7IGVhcmN1dCB9IGZyb20gJy4vZWFyY3V0JztcbmV4cG9ydCB7IGNsaXBQb2x5Z29uLCBjbGlwUG9seWxpbmUgfSBmcm9tICcuL2xpbmVjbGlwJztcbmV4cG9ydCB7IGN1dFBvbHlnb25CeUdyaWQsIGN1dFBvbHlsaW5lQnlHcmlkIH0gZnJvbSAnLi9jdXQtYnktZ3JpZCc7XG5leHBvcnQgeyBjdXRQb2x5bGluZUJ5TWVyY2F0b3JCb3VuZHMsIGN1dFBvbHlnb25CeU1lcmNhdG9yQm91bmRzIH0gZnJvbSAnLi9jdXQtYnktbWVyY2F0b3ItYm91bmRzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgX1BvbHlnb24gfSBmcm9tICcuL3BvbHlnb24nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/index.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/lineclip.js":
/*!************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/lineclip.js ***!
  \************************************************************/
/*! exports provided: clipPolyline, clipPolygon, intersect, bitCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clipPolyline\", function() { return clipPolyline; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clipPolygon\", function() { return clipPolygon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intersect\", function() { return intersect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bitCode\", function() { return bitCode; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./node_modules/@math.gl/polygon/dist/esm/utils.js\");\n\nfunction clipPolyline(positions, bbox, options = {}) {\n  const {\n    size = 2,\n    startIndex = 0,\n    endIndex = positions.length\n  } = options;\n  const numPoints = (endIndex - startIndex) / size;\n  const result = [];\n  let part = [];\n  let a;\n  let b;\n  let codeA = -1;\n  let codeB;\n  let lastCode;\n\n  for (let i = 1; i < numPoints; i++) {\n    a = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getPointAtIndex\"])(positions, i - 1, size, startIndex, a);\n    b = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getPointAtIndex\"])(positions, i, size, startIndex, b);\n\n    if (codeA < 0) {\n      codeA = bitCode(a, bbox);\n    }\n\n    codeB = lastCode = bitCode(b, bbox);\n\n    while (true) {\n      if (!(codeA | codeB)) {\n        Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"push\"])(part, a);\n\n        if (codeB !== lastCode) {\n          Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"push\"])(part, b);\n\n          if (i < numPoints - 1) {\n            result.push(part);\n            part = [];\n          }\n        } else if (i === numPoints - 1) {\n          Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"push\"])(part, b);\n        }\n\n        break;\n      } else if (codeA & codeB) {\n        break;\n      } else if (codeA) {\n        intersect(a, b, codeA, bbox, a);\n        codeA = bitCode(a, bbox);\n      } else {\n        intersect(a, b, codeB, bbox, b);\n        codeB = bitCode(b, bbox);\n      }\n    }\n\n    codeA = lastCode;\n  }\n\n  if (part.length) result.push(part);\n  return result;\n}\nfunction clipPolygon(positions, bbox, options = {}) {\n  const {\n    size = 2,\n    endIndex = positions.length\n  } = options;\n  let {\n    startIndex = 0\n  } = options;\n  let numPoints = (endIndex - startIndex) / size;\n  let result;\n  let p;\n  let prev;\n  let inside;\n  let prevInside;\n\n  for (let edge = 1; edge <= 8; edge *= 2) {\n    result = [];\n    prev = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getPointAtIndex\"])(positions, numPoints - 1, size, startIndex, prev);\n    prevInside = !(bitCode(prev, bbox) & edge);\n\n    for (let i = 0; i < numPoints; i++) {\n      p = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"getPointAtIndex\"])(positions, i, size, startIndex, p);\n      inside = !(bitCode(p, bbox) & edge);\n      if (inside !== prevInside) Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"push\"])(result, intersect(prev, p, edge, bbox));\n      if (inside) Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"push\"])(result, p);\n      Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"copy\"])(prev, p);\n      prevInside = inside;\n    }\n\n    positions = result;\n    startIndex = 0;\n    numPoints = result.length / size;\n    if (!numPoints) break;\n  }\n\n  return result;\n}\nfunction intersect(a, b, edge, bbox, out = []) {\n  let t;\n  let snap;\n\n  if (edge & 8) {\n    t = (bbox[3] - a[1]) / (b[1] - a[1]);\n    snap = 3;\n  } else if (edge & 4) {\n    t = (bbox[1] - a[1]) / (b[1] - a[1]);\n    snap = 1;\n  } else if (edge & 2) {\n    t = (bbox[2] - a[0]) / (b[0] - a[0]);\n    snap = 2;\n  } else if (edge & 1) {\n    t = (bbox[0] - a[0]) / (b[0] - a[0]);\n    snap = 0;\n  } else {\n    return null;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    out[i] = (snap & 1) === i ? bbox[snap] : t * (b[i] - a[i]) + a[i];\n  }\n\n  return out;\n}\nfunction bitCode(p, bbox) {\n  let code = 0;\n  if (p[0] < bbox[0]) code |= 1;else if (p[0] > bbox[2]) code |= 2;\n  if (p[1] < bbox[1]) code |= 4;else if (p[1] > bbox[3]) code |= 8;\n  return code;\n}\n//# sourceMappingURL=lineclip.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9saW5lY2xpcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC9wb2x5Z29uL2Rpc3QvZXNtL2xpbmVjbGlwLmpzP2NkMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHVzaCwgY29weSwgZ2V0UG9pbnRBdEluZGV4IH0gZnJvbSAnLi91dGlscyc7XG5leHBvcnQgZnVuY3Rpb24gY2xpcFBvbHlsaW5lKHBvc2l0aW9ucywgYmJveCwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHtcbiAgICBzaXplID0gMixcbiAgICBzdGFydEluZGV4ID0gMCxcbiAgICBlbmRJbmRleCA9IHBvc2l0aW9ucy5sZW5ndGhcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IG51bVBvaW50cyA9IChlbmRJbmRleCAtIHN0YXJ0SW5kZXgpIC8gc2l6ZTtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGxldCBwYXJ0ID0gW107XG4gIGxldCBhO1xuICBsZXQgYjtcbiAgbGV0IGNvZGVBID0gLTE7XG4gIGxldCBjb2RlQjtcbiAgbGV0IGxhc3RDb2RlO1xuXG4gIGZvciAobGV0IGkgPSAxOyBpIDwgbnVtUG9pbnRzOyBpKyspIHtcbiAgICBhID0gZ2V0UG9pbnRBdEluZGV4KHBvc2l0aW9ucywgaSAtIDEsIHNpemUsIHN0YXJ0SW5kZXgsIGEpO1xuICAgIGIgPSBnZXRQb2ludEF0SW5kZXgocG9zaXRpb25zLCBpLCBzaXplLCBzdGFydEluZGV4LCBiKTtcblxuICAgIGlmIChjb2RlQSA8IDApIHtcbiAgICAgIGNvZGVBID0gYml0Q29kZShhLCBiYm94KTtcbiAgICB9XG5cbiAgICBjb2RlQiA9IGxhc3RDb2RlID0gYml0Q29kZShiLCBiYm94KTtcblxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICBpZiAoIShjb2RlQSB8IGNvZGVCKSkge1xuICAgICAgICBwdXNoKHBhcnQsIGEpO1xuXG4gICAgICAgIGlmIChjb2RlQiAhPT0gbGFzdENvZGUpIHtcbiAgICAgICAgICBwdXNoKHBhcnQsIGIpO1xuXG4gICAgICAgICAgaWYgKGkgPCBudW1Qb2ludHMgLSAxKSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChwYXJ0KTtcbiAgICAgICAgICAgIHBhcnQgPSBbXTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoaSA9PT0gbnVtUG9pbnRzIC0gMSkge1xuICAgICAgICAgIHB1c2gocGFydCwgYik7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcbiAgICAgIH0gZWxzZSBpZiAoY29kZUEgJiBjb2RlQikge1xuICAgICAgICBicmVhaztcbiAgICAgIH0gZWxzZSBpZiAoY29kZUEpIHtcbiAgICAgICAgaW50ZXJzZWN0KGEsIGIsIGNvZGVBLCBiYm94LCBhKTtcbiAgICAgICAgY29kZUEgPSBiaXRDb2RlKGEsIGJib3gpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW50ZXJzZWN0KGEsIGIsIGNvZGVCLCBiYm94LCBiKTtcbiAgICAgICAgY29kZUIgPSBiaXRDb2RlKGIsIGJib3gpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvZGVBID0gbGFzdENvZGU7XG4gIH1cblxuICBpZiAocGFydC5sZW5ndGgpIHJlc3VsdC5wdXNoKHBhcnQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsaXBQb2x5Z29uKHBvc2l0aW9ucywgYmJveCwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHtcbiAgICBzaXplID0gMixcbiAgICBlbmRJbmRleCA9IHBvc2l0aW9ucy5sZW5ndGhcbiAgfSA9IG9wdGlvbnM7XG4gIGxldCB7XG4gICAgc3RhcnRJbmRleCA9IDBcbiAgfSA9IG9wdGlvbnM7XG4gIGxldCBudW1Qb2ludHMgPSAoZW5kSW5kZXggLSBzdGFydEluZGV4KSAvIHNpemU7XG4gIGxldCByZXN1bHQ7XG4gIGxldCBwO1xuICBsZXQgcHJldjtcbiAgbGV0IGluc2lkZTtcbiAgbGV0IHByZXZJbnNpZGU7XG5cbiAgZm9yIChsZXQgZWRnZSA9IDE7IGVkZ2UgPD0gODsgZWRnZSAqPSAyKSB7XG4gICAgcmVzdWx0ID0gW107XG4gICAgcHJldiA9IGdldFBvaW50QXRJbmRleChwb3NpdGlvbnMsIG51bVBvaW50cyAtIDEsIHNpemUsIHN0YXJ0SW5kZXgsIHByZXYpO1xuICAgIHByZXZJbnNpZGUgPSAhKGJpdENvZGUocHJldiwgYmJveCkgJiBlZGdlKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtUG9pbnRzOyBpKyspIHtcbiAgICAgIHAgPSBnZXRQb2ludEF0SW5kZXgocG9zaXRpb25zLCBpLCBzaXplLCBzdGFydEluZGV4LCBwKTtcbiAgICAgIGluc2lkZSA9ICEoYml0Q29kZShwLCBiYm94KSAmIGVkZ2UpO1xuICAgICAgaWYgKGluc2lkZSAhPT0gcHJldkluc2lkZSkgcHVzaChyZXN1bHQsIGludGVyc2VjdChwcmV2LCBwLCBlZGdlLCBiYm94KSk7XG4gICAgICBpZiAoaW5zaWRlKSBwdXNoKHJlc3VsdCwgcCk7XG4gICAgICBjb3B5KHByZXYsIHApO1xuICAgICAgcHJldkluc2lkZSA9IGluc2lkZTtcbiAgICB9XG5cbiAgICBwb3NpdGlvbnMgPSByZXN1bHQ7XG4gICAgc3RhcnRJbmRleCA9IDA7XG4gICAgbnVtUG9pbnRzID0gcmVzdWx0Lmxlbmd0aCAvIHNpemU7XG4gICAgaWYgKCFudW1Qb2ludHMpIGJyZWFrO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnNlY3QoYSwgYiwgZWRnZSwgYmJveCwgb3V0ID0gW10pIHtcbiAgbGV0IHQ7XG4gIGxldCBzbmFwO1xuXG4gIGlmIChlZGdlICYgOCkge1xuICAgIHQgPSAoYmJveFszXSAtIGFbMV0pIC8gKGJbMV0gLSBhWzFdKTtcbiAgICBzbmFwID0gMztcbiAgfSBlbHNlIGlmIChlZGdlICYgNCkge1xuICAgIHQgPSAoYmJveFsxXSAtIGFbMV0pIC8gKGJbMV0gLSBhWzFdKTtcbiAgICBzbmFwID0gMTtcbiAgfSBlbHNlIGlmIChlZGdlICYgMikge1xuICAgIHQgPSAoYmJveFsyXSAtIGFbMF0pIC8gKGJbMF0gLSBhWzBdKTtcbiAgICBzbmFwID0gMjtcbiAgfSBlbHNlIGlmIChlZGdlICYgMSkge1xuICAgIHQgPSAoYmJveFswXSAtIGFbMF0pIC8gKGJbMF0gLSBhWzBdKTtcbiAgICBzbmFwID0gMDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgIG91dFtpXSA9IChzbmFwICYgMSkgPT09IGkgPyBiYm94W3NuYXBdIDogdCAqIChiW2ldIC0gYVtpXSkgKyBhW2ldO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBiaXRDb2RlKHAsIGJib3gpIHtcbiAgbGV0IGNvZGUgPSAwO1xuICBpZiAocFswXSA8IGJib3hbMF0pIGNvZGUgfD0gMTtlbHNlIGlmIChwWzBdID4gYmJveFsyXSkgY29kZSB8PSAyO1xuICBpZiAocFsxXSA8IGJib3hbMV0pIGNvZGUgfD0gNDtlbHNlIGlmIChwWzFdID4gYmJveFszXSkgY29kZSB8PSA4O1xuICByZXR1cm4gY29kZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpbmVjbGlwLmpzLm1hcCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/lineclip.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js ***!
  \*****************************************************************/
/*! exports provided: WINDING, modifyPolygonWindingDirection, getPolygonWindingDirection, getPolygonSignedArea, forEachSegmentInPolygon, modifyPolygonWindingDirectionPoints, getPolygonWindingDirectionPoints, getPolygonSignedAreaPoints, forEachSegmentInPolygonPoints */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WINDING\", function() { return WINDING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modifyPolygonWindingDirection\", function() { return modifyPolygonWindingDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPolygonWindingDirection\", function() { return getPolygonWindingDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPolygonSignedArea\", function() { return getPolygonSignedArea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEachSegmentInPolygon\", function() { return forEachSegmentInPolygon; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"modifyPolygonWindingDirectionPoints\", function() { return modifyPolygonWindingDirectionPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPolygonWindingDirectionPoints\", function() { return getPolygonWindingDirectionPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPolygonSignedAreaPoints\", function() { return getPolygonSignedAreaPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEachSegmentInPolygonPoints\", function() { return forEachSegmentInPolygonPoints; });\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/core */ \"./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n\nconst WINDING = {\n  CLOCKWISE: 1,\n  COUNTER_CLOCKWISE: -1\n};\nfunction modifyPolygonWindingDirection(points, direction, options = {}) {\n  const windingDirection = getPolygonWindingDirection(points, options);\n\n  if (windingDirection !== direction) {\n    reversePolygon(points, options);\n    return true;\n  }\n\n  return false;\n}\nfunction getPolygonWindingDirection(points, options = {}) {\n  return Math.sign(getPolygonSignedArea(points, options));\n}\nfunction getPolygonSignedArea(points, options = {}) {\n  const {\n    start = 0,\n    end = points.length\n  } = options;\n  const dim = options.size || 2;\n  let area = 0;\n\n  for (let i = start, j = end - dim; i < end; i += dim) {\n    area += (points[i] - points[j]) * (points[i + 1] + points[j + 1]);\n    j = i;\n  }\n\n  return area / 2;\n}\nfunction forEachSegmentInPolygon(points, visitor, options = {}) {\n  const {\n    start = 0,\n    end = points.length,\n    size = 2,\n    isClosed\n  } = options;\n  const numPoints = (end - start) / size;\n\n  for (let i = 0; i < numPoints - 1; ++i) {\n    visitor(points[start + i * size], points[start + i * size + 1], points[start + (i + 1) * size], points[start + (i + 1) * size + 1], i, i + 1);\n  }\n\n  const endPointIndex = start + (numPoints - 1) * size;\n  const isClosedEx = isClosed || Object(_math_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"equals\"])(points[start], points[endPointIndex]) && Object(_math_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"equals\"])(points[start + 1], points[endPointIndex + 1]);\n\n  if (!isClosedEx) {\n    visitor(points[endPointIndex], points[endPointIndex + 1], points[start], points[start + 1], numPoints - 1, 0);\n  }\n}\n\nfunction reversePolygon(points, options) {\n  const {\n    start = 0,\n    end = points.length,\n    size = 2\n  } = options;\n  const numPoints = (end - start) / size;\n  const numSwaps = Math.floor(numPoints / 2);\n\n  for (let i = 0; i < numSwaps; ++i) {\n    const b1 = start + i * size;\n    const b2 = start + (numPoints - 1 - i) * size;\n\n    for (let j = 0; j < size; ++j) {\n      const tmp = points[b1 + j];\n      points[b1 + j] = points[b2 + j];\n      points[b2 + j] = tmp;\n    }\n  }\n}\n\nfunction modifyPolygonWindingDirectionPoints(points, direction, options = {}) {\n  const currentDirection = getPolygonWindingDirectionPoints(points, options);\n\n  if (currentDirection !== direction) {\n    points.reverse();\n    return true;\n  }\n\n  return false;\n}\nfunction getPolygonWindingDirectionPoints(points, options = {}) {\n  return Math.sign(getPolygonSignedAreaPoints(points, options));\n}\nfunction getPolygonSignedAreaPoints(points, options = {}) {\n  const {\n    start = 0,\n    end = points.length\n  } = options;\n  let area = 0;\n\n  for (let i = start, j = end - 1; i < end; ++i) {\n    area += (points[i][0] - points[j][0]) * (points[i][1] + points[j][1]);\n    j = i;\n  }\n\n  return area / 2;\n}\nfunction forEachSegmentInPolygonPoints(points, visitor, options = {}) {\n  const {\n    start = 0,\n    end = points.length,\n    isClosed\n  } = options;\n\n  for (let i = start; i < end - 1; ++i) {\n    visitor(points[i], points[i + 1], i, i + 1);\n  }\n\n  const isClosedEx = isClosed || Object(_math_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"equals\"])(points[end - 1], points[0]);\n\n  if (!isClosedEx) {\n    visitor(points[end - 1], points[0], end - 1, 0);\n  }\n}\n//# sourceMappingURL=polygon-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9wb2x5Z29uLXV0aWxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3BvbHlnb24vZGlzdC9lc20vcG9seWdvbi11dGlscy5qcz9mODI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVxdWFscyB9IGZyb20gJ0BtYXRoLmdsL2NvcmUnO1xuZXhwb3J0IGNvbnN0IFdJTkRJTkcgPSB7XG4gIENMT0NLV0lTRTogMSxcbiAgQ09VTlRFUl9DTE9DS1dJU0U6IC0xXG59O1xuZXhwb3J0IGZ1bmN0aW9uIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uKHBvaW50cywgZGlyZWN0aW9uLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3Qgd2luZGluZ0RpcmVjdGlvbiA9IGdldFBvbHlnb25XaW5kaW5nRGlyZWN0aW9uKHBvaW50cywgb3B0aW9ucyk7XG5cbiAgaWYgKHdpbmRpbmdEaXJlY3Rpb24gIT09IGRpcmVjdGlvbikge1xuICAgIHJldmVyc2VQb2x5Z29uKHBvaW50cywgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9seWdvbldpbmRpbmdEaXJlY3Rpb24ocG9pbnRzLCBvcHRpb25zID0ge30pIHtcbiAgcmV0dXJuIE1hdGguc2lnbihnZXRQb2x5Z29uU2lnbmVkQXJlYShwb2ludHMsIG9wdGlvbnMpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQb2x5Z29uU2lnbmVkQXJlYShwb2ludHMsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7XG4gICAgc3RhcnQgPSAwLFxuICAgIGVuZCA9IHBvaW50cy5sZW5ndGhcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IGRpbSA9IG9wdGlvbnMuc2l6ZSB8fCAyO1xuICBsZXQgYXJlYSA9IDA7XG5cbiAgZm9yIChsZXQgaSA9IHN0YXJ0LCBqID0gZW5kIC0gZGltOyBpIDwgZW5kOyBpICs9IGRpbSkge1xuICAgIGFyZWEgKz0gKHBvaW50c1tpXSAtIHBvaW50c1tqXSkgKiAocG9pbnRzW2kgKyAxXSArIHBvaW50c1tqICsgMV0pO1xuICAgIGogPSBpO1xuICB9XG5cbiAgcmV0dXJuIGFyZWEgLyAyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvckVhY2hTZWdtZW50SW5Qb2x5Z29uKHBvaW50cywgdmlzaXRvciwgb3B0aW9ucyA9IHt9KSB7XG4gIGNvbnN0IHtcbiAgICBzdGFydCA9IDAsXG4gICAgZW5kID0gcG9pbnRzLmxlbmd0aCxcbiAgICBzaXplID0gMixcbiAgICBpc0Nsb3NlZFxuICB9ID0gb3B0aW9ucztcbiAgY29uc3QgbnVtUG9pbnRzID0gKGVuZCAtIHN0YXJ0KSAvIHNpemU7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Qb2ludHMgLSAxOyArK2kpIHtcbiAgICB2aXNpdG9yKHBvaW50c1tzdGFydCArIGkgKiBzaXplXSwgcG9pbnRzW3N0YXJ0ICsgaSAqIHNpemUgKyAxXSwgcG9pbnRzW3N0YXJ0ICsgKGkgKyAxKSAqIHNpemVdLCBwb2ludHNbc3RhcnQgKyAoaSArIDEpICogc2l6ZSArIDFdLCBpLCBpICsgMSk7XG4gIH1cblxuICBjb25zdCBlbmRQb2ludEluZGV4ID0gc3RhcnQgKyAobnVtUG9pbnRzIC0gMSkgKiBzaXplO1xuICBjb25zdCBpc0Nsb3NlZEV4ID0gaXNDbG9zZWQgfHwgZXF1YWxzKHBvaW50c1tzdGFydF0sIHBvaW50c1tlbmRQb2ludEluZGV4XSkgJiYgZXF1YWxzKHBvaW50c1tzdGFydCArIDFdLCBwb2ludHNbZW5kUG9pbnRJbmRleCArIDFdKTtcblxuICBpZiAoIWlzQ2xvc2VkRXgpIHtcbiAgICB2aXNpdG9yKHBvaW50c1tlbmRQb2ludEluZGV4XSwgcG9pbnRzW2VuZFBvaW50SW5kZXggKyAxXSwgcG9pbnRzW3N0YXJ0XSwgcG9pbnRzW3N0YXJ0ICsgMV0sIG51bVBvaW50cyAtIDEsIDApO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJldmVyc2VQb2x5Z29uKHBvaW50cywgb3B0aW9ucykge1xuICBjb25zdCB7XG4gICAgc3RhcnQgPSAwLFxuICAgIGVuZCA9IHBvaW50cy5sZW5ndGgsXG4gICAgc2l6ZSA9IDJcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IG51bVBvaW50cyA9IChlbmQgLSBzdGFydCkgLyBzaXplO1xuICBjb25zdCBudW1Td2FwcyA9IE1hdGguZmxvb3IobnVtUG9pbnRzIC8gMik7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1Td2FwczsgKytpKSB7XG4gICAgY29uc3QgYjEgPSBzdGFydCArIGkgKiBzaXplO1xuICAgIGNvbnN0IGIyID0gc3RhcnQgKyAobnVtUG9pbnRzIC0gMSAtIGkpICogc2l6ZTtcblxuICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2l6ZTsgKytqKSB7XG4gICAgICBjb25zdCB0bXAgPSBwb2ludHNbYjEgKyBqXTtcbiAgICAgIHBvaW50c1tiMSArIGpdID0gcG9pbnRzW2IyICsgal07XG4gICAgICBwb2ludHNbYjIgKyBqXSA9IHRtcDtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uUG9pbnRzKHBvaW50cywgZGlyZWN0aW9uLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgY3VycmVudERpcmVjdGlvbiA9IGdldFBvbHlnb25XaW5kaW5nRGlyZWN0aW9uUG9pbnRzKHBvaW50cywgb3B0aW9ucyk7XG5cbiAgaWYgKGN1cnJlbnREaXJlY3Rpb24gIT09IGRpcmVjdGlvbikge1xuICAgIHBvaW50cy5yZXZlcnNlKCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9seWdvbldpbmRpbmdEaXJlY3Rpb25Qb2ludHMocG9pbnRzLCBvcHRpb25zID0ge30pIHtcbiAgcmV0dXJuIE1hdGguc2lnbihnZXRQb2x5Z29uU2lnbmVkQXJlYVBvaW50cyhwb2ludHMsIG9wdGlvbnMpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQb2x5Z29uU2lnbmVkQXJlYVBvaW50cyhwb2ludHMsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCB7XG4gICAgc3RhcnQgPSAwLFxuICAgIGVuZCA9IHBvaW50cy5sZW5ndGhcbiAgfSA9IG9wdGlvbnM7XG4gIGxldCBhcmVhID0gMDtcblxuICBmb3IgKGxldCBpID0gc3RhcnQsIGogPSBlbmQgLSAxOyBpIDwgZW5kOyArK2kpIHtcbiAgICBhcmVhICs9IChwb2ludHNbaV1bMF0gLSBwb2ludHNbal1bMF0pICogKHBvaW50c1tpXVsxXSArIHBvaW50c1tqXVsxXSk7XG4gICAgaiA9IGk7XG4gIH1cblxuICByZXR1cm4gYXJlYSAvIDI7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9yRWFjaFNlZ21lbnRJblBvbHlnb25Qb2ludHMocG9pbnRzLCB2aXNpdG9yLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3Qge1xuICAgIHN0YXJ0ID0gMCxcbiAgICBlbmQgPSBwb2ludHMubGVuZ3RoLFxuICAgIGlzQ2xvc2VkXG4gIH0gPSBvcHRpb25zO1xuXG4gIGZvciAobGV0IGkgPSBzdGFydDsgaSA8IGVuZCAtIDE7ICsraSkge1xuICAgIHZpc2l0b3IocG9pbnRzW2ldLCBwb2ludHNbaSArIDFdLCBpLCBpICsgMSk7XG4gIH1cblxuICBjb25zdCBpc0Nsb3NlZEV4ID0gaXNDbG9zZWQgfHwgZXF1YWxzKHBvaW50c1tlbmQgLSAxXSwgcG9pbnRzWzBdKTtcblxuICBpZiAoIWlzQ2xvc2VkRXgpIHtcbiAgICB2aXNpdG9yKHBvaW50c1tlbmQgLSAxXSwgcG9pbnRzWzBdLCBlbmQgLSAxLCAwKTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9seWdvbi11dGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/polygon.js":
/*!***********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/polygon.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Polygon; });\n/* harmony import */ var _math_gl_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @math.gl/core */ \"./node_modules/@math.gl/core/dist/esm/lib/common.js\");\n/* harmony import */ var _polygon_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polygon-utils */ \"./node_modules/@math.gl/polygon/dist/esm/polygon-utils.js\");\n\n\nclass Polygon {\n  constructor(points, options = {}) {\n    this.points = points;\n    this.isFlatArray = !Object(_math_gl_core__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(points[0]);\n    this.options = {\n      start: options.start || 0,\n      end: options.end || points.length,\n      size: options.size || 2,\n      isClosed: options.isClosed\n    };\n    Object.freeze(this);\n  }\n\n  getSignedArea() {\n    if (this.isFlatArray) return Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPolygonSignedArea\"])(this.points, this.options);\n    return Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"getPolygonSignedAreaPoints\"])(this.points, this.options);\n  }\n\n  getArea() {\n    return Math.abs(this.getSignedArea());\n  }\n\n  getWindingDirection() {\n    return Math.sign(this.getSignedArea());\n  }\n\n  forEachSegment(visitor) {\n    if (this.isFlatArray) {\n      Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEachSegmentInPolygon\"])(this.points, (x1, y1, x2, y2, i1, i2) => {\n        visitor([x1, y1], [x2, y2], i1, i2);\n      }, this.options);\n    } else {\n      Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEachSegmentInPolygonPoints\"])(this.points, visitor, this.options);\n    }\n  }\n\n  modifyWindingDirection(direction) {\n    if (this.isFlatArray) {\n      return Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"modifyPolygonWindingDirection\"])(this.points, direction, this.options);\n    }\n\n    return Object(_polygon_utils__WEBPACK_IMPORTED_MODULE_1__[\"modifyPolygonWindingDirectionPoints\"])(this.points, direction, this.options);\n  }\n\n}\n//# sourceMappingURL=polygon.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS9wb2x5Z29uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRoLmdsL3BvbHlnb24vZGlzdC9lc20vcG9seWdvbi5qcz85MGJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQXJyYXkgfSBmcm9tICdAbWF0aC5nbC9jb3JlJztcbmltcG9ydCB7IGdldFBvbHlnb25TaWduZWRBcmVhLCBmb3JFYWNoU2VnbWVudEluUG9seWdvbiwgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb24sIGdldFBvbHlnb25TaWduZWRBcmVhUG9pbnRzLCBmb3JFYWNoU2VnbWVudEluUG9seWdvblBvaW50cywgbW9kaWZ5UG9seWdvbldpbmRpbmdEaXJlY3Rpb25Qb2ludHMgfSBmcm9tICcuL3BvbHlnb24tdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9seWdvbiB7XG4gIGNvbnN0cnVjdG9yKHBvaW50cywgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5wb2ludHMgPSBwb2ludHM7XG4gICAgdGhpcy5pc0ZsYXRBcnJheSA9ICFpc0FycmF5KHBvaW50c1swXSk7XG4gICAgdGhpcy5vcHRpb25zID0ge1xuICAgICAgc3RhcnQ6IG9wdGlvbnMuc3RhcnQgfHwgMCxcbiAgICAgIGVuZDogb3B0aW9ucy5lbmQgfHwgcG9pbnRzLmxlbmd0aCxcbiAgICAgIHNpemU6IG9wdGlvbnMuc2l6ZSB8fCAyLFxuICAgICAgaXNDbG9zZWQ6IG9wdGlvbnMuaXNDbG9zZWRcbiAgICB9O1xuICAgIE9iamVjdC5mcmVlemUodGhpcyk7XG4gIH1cblxuICBnZXRTaWduZWRBcmVhKCkge1xuICAgIGlmICh0aGlzLmlzRmxhdEFycmF5KSByZXR1cm4gZ2V0UG9seWdvblNpZ25lZEFyZWEodGhpcy5wb2ludHMsIHRoaXMub3B0aW9ucyk7XG4gICAgcmV0dXJuIGdldFBvbHlnb25TaWduZWRBcmVhUG9pbnRzKHRoaXMucG9pbnRzLCB0aGlzLm9wdGlvbnMpO1xuICB9XG5cbiAgZ2V0QXJlYSgpIHtcbiAgICByZXR1cm4gTWF0aC5hYnModGhpcy5nZXRTaWduZWRBcmVhKCkpO1xuICB9XG5cbiAgZ2V0V2luZGluZ0RpcmVjdGlvbigpIHtcbiAgICByZXR1cm4gTWF0aC5zaWduKHRoaXMuZ2V0U2lnbmVkQXJlYSgpKTtcbiAgfVxuXG4gIGZvckVhY2hTZWdtZW50KHZpc2l0b3IpIHtcbiAgICBpZiAodGhpcy5pc0ZsYXRBcnJheSkge1xuICAgICAgZm9yRWFjaFNlZ21lbnRJblBvbHlnb24odGhpcy5wb2ludHMsICh4MSwgeTEsIHgyLCB5MiwgaTEsIGkyKSA9PiB7XG4gICAgICAgIHZpc2l0b3IoW3gxLCB5MV0sIFt4MiwgeTJdLCBpMSwgaTIpO1xuICAgICAgfSwgdGhpcy5vcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yRWFjaFNlZ21lbnRJblBvbHlnb25Qb2ludHModGhpcy5wb2ludHMsIHZpc2l0b3IsIHRoaXMub3B0aW9ucyk7XG4gICAgfVxuICB9XG5cbiAgbW9kaWZ5V2luZGluZ0RpcmVjdGlvbihkaXJlY3Rpb24pIHtcbiAgICBpZiAodGhpcy5pc0ZsYXRBcnJheSkge1xuICAgICAgcmV0dXJuIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uKHRoaXMucG9pbnRzLCBkaXJlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1vZGlmeVBvbHlnb25XaW5kaW5nRGlyZWN0aW9uUG9pbnRzKHRoaXMucG9pbnRzLCBkaXJlY3Rpb24sIHRoaXMub3B0aW9ucyk7XG4gIH1cblxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9seWdvbi5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/polygon.js\n");

/***/ }),

/***/ "./node_modules/@math.gl/polygon/dist/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@math.gl/polygon/dist/esm/utils.js ***!
  \*********************************************************/
/*! exports provided: push, copy, getPointAtIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"push\", function() { return push; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"copy\", function() { return copy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPointAtIndex\", function() { return getPointAtIndex; });\nfunction push(target, source) {\n  const size = source.length;\n  const startIndex = target.length;\n\n  if (startIndex > 0) {\n    let isDuplicate = true;\n\n    for (let i = 0; i < size; i++) {\n      if (target[startIndex - size + i] !== source[i]) {\n        isDuplicate = false;\n        break;\n      }\n    }\n\n    if (isDuplicate) {\n      return false;\n    }\n  }\n\n  for (let i = 0; i < size; i++) {\n    target[startIndex + i] = source[i];\n  }\n\n  return true;\n}\nfunction copy(target, source) {\n  const size = source.length;\n\n  for (let i = 0; i < size; i++) {\n    target[i] = source[i];\n  }\n}\nfunction getPointAtIndex(positions, index, size, offset, out = []) {\n  const startI = offset + index * size;\n\n  for (let i = 0; i < size; i++) {\n    out[i] = positions[startI + i];\n  }\n\n  return out;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGguZ2wvcG9seWdvbi9kaXN0L2VzbS91dGlscy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0aC5nbC9wb2x5Z29uL2Rpc3QvZXNtL3V0aWxzLmpzP2I5ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHB1c2godGFyZ2V0LCBzb3VyY2UpIHtcbiAgY29uc3Qgc2l6ZSA9IHNvdXJjZS5sZW5ndGg7XG4gIGNvbnN0IHN0YXJ0SW5kZXggPSB0YXJnZXQubGVuZ3RoO1xuXG4gIGlmIChzdGFydEluZGV4ID4gMCkge1xuICAgIGxldCBpc0R1cGxpY2F0ZSA9IHRydWU7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgICAgaWYgKHRhcmdldFtzdGFydEluZGV4IC0gc2l6ZSArIGldICE9PSBzb3VyY2VbaV0pIHtcbiAgICAgICAgaXNEdXBsaWNhdGUgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzRHVwbGljYXRlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaXplOyBpKyspIHtcbiAgICB0YXJnZXRbc3RhcnRJbmRleCArIGldID0gc291cmNlW2ldO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29weSh0YXJnZXQsIHNvdXJjZSkge1xuICBjb25zdCBzaXplID0gc291cmNlLmxlbmd0aDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgIHRhcmdldFtpXSA9IHNvdXJjZVtpXTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFBvaW50QXRJbmRleChwb3NpdGlvbnMsIGluZGV4LCBzaXplLCBvZmZzZXQsIG91dCA9IFtdKSB7XG4gIGNvbnN0IHN0YXJ0SSA9IG9mZnNldCArIGluZGV4ICogc2l6ZTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHNpemU7IGkrKykge1xuICAgIG91dFtpXSA9IHBvc2l0aW9uc1tzdGFydEkgKyBpXTtcbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@math.gl/polygon/dist/esm/utils.js\n");

/***/ }),

/***/ "./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Geojson/Geojson.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Geojson/Geojson.js ***!
  \********************************************************************************************/
/*! exports provided: getLayer, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLayer\", function() { return getLayer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var deck_gl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! deck.gl */ \"./node_modules/@deck.gl/layers/dist/esm/geojson-layer/geojson-layer.js\");\n/* harmony import */ var _DeckGLContainer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../DeckGLContainer */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/DeckGLContainer.js\");\n/* harmony import */ var _utils_colors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/colors */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/colors.js\");\n/* harmony import */ var _utils_sandbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/sandbox */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/utils/sandbox.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/common.js\");\n/* harmony import */ var _TooltipRow__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../TooltipRow */ \"./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/TooltipRow.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable react/no-array-index-key */\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\n // TODO import geojsonExtent from 'geojson-extent';\n\n\n\n\n\n\nconst propertyMap = {\n  fillColor: 'fillColor',\n  color: 'fillColor',\n  fill: 'fillColor',\n  'fill-color': 'fillColor',\n  strokeColor: 'strokeColor',\n  'stroke-color': 'strokeColor',\n  'stroke-width': 'strokeWidth'\n};\n\nconst alterProps = (props, propOverrides) => {\n  const newProps = {};\n  Object.keys(props).forEach(k => {\n    if (k in propertyMap) {\n      newProps[propertyMap[k]] = props[k];\n    } else {\n      newProps[k] = props[k];\n    }\n  });\n\n  if (typeof props.fillColor === 'string') {\n    newProps.fillColor = Object(_utils_colors__WEBPACK_IMPORTED_MODULE_4__[\"hexToRGB\"])(props.fillColor);\n  }\n\n  if (typeof props.strokeColor === 'string') {\n    newProps.strokeColor = Object(_utils_colors__WEBPACK_IMPORTED_MODULE_4__[\"hexToRGB\"])(props.strokeColor);\n  }\n\n  return _extends({}, newProps, {}, propOverrides);\n};\n\nlet features;\n\nconst recurseGeoJson = (node, propOverrides, extraProps) => {\n  if (node && node.features) {\n    node.features.forEach(obj => {\n      recurseGeoJson(obj, propOverrides, node.extraProps || extraProps);\n    });\n  }\n\n  if (node && node.geometry) {\n    const newNode = _extends({}, node, {\n      properties: alterProps(node.properties, propOverrides)\n    });\n\n    if (!newNode.extraProps) {\n      newNode.extraProps = extraProps;\n    }\n\n    features.push(newNode);\n  }\n};\n\nfunction setTooltipContent(o) {\n  return o.object.extraProps && react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(\"div\", {\n    className: \"deckgl-tooltip\"\n  }, Object.keys(o.object.extraProps).map((prop, index) => react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_TooltipRow__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    key: \"prop-\" + index,\n    label: prop + \": \",\n    value: \"\" + o.object.extraProps[prop]\n  })));\n}\n\nfunction getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const fc = fd.fill_color_picker;\n  const sc = fd.stroke_color_picker;\n  const fillColor = [fc.r, fc.g, fc.b, 255 * fc.a];\n  const strokeColor = [sc.r, sc.g, sc.b, 255 * sc.a];\n  const propOverrides = {};\n\n  if (fillColor[3] > 0) {\n    propOverrides.fillColor = fillColor;\n  }\n\n  if (strokeColor[3] > 0) {\n    propOverrides.strokeColor = strokeColor;\n  }\n\n  features = [];\n  recurseGeoJson(payload.data, propOverrides);\n  let jsFnMutator;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    jsFnMutator = Object(_utils_sandbox__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(fd.js_data_mutator);\n    features = jsFnMutator(features);\n  }\n\n  return new deck_gl__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_extends({\n    id: \"geojson-layer-\" + fd.slice_id,\n    filled: fd.filled,\n    data: features,\n    stroked: fd.stroked,\n    extruded: fd.extruded,\n    pointRadiusScale: fd.point_radius_scale\n  }, Object(_common__WEBPACK_IMPORTED_MODULE_6__[\"commonLayerProps\"])(fd, setTooltip, setTooltipContent)));\n}\nconst propTypes = {\n  formData: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  payload: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  setControlValue: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,\n  viewport: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,\n  onAddFilter: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func\n};\nconst defaultProps = {\n  onAddFilter() {}\n\n};\n\nclass DeckGLGeoJson extends react__WEBPACK_IMPORTED_MODULE_0___default.a.Component {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"containerRef\", react__WEBPACK_IMPORTED_MODULE_0___default.a.createRef());\n\n    _defineProperty(this, \"setTooltip\", tooltip => {\n      const {\n        current\n      } = this.containerRef;\n\n      if (current) {\n        current.setTooltip(tooltip);\n      }\n    });\n  }\n\n  render() {\n    const {\n      formData,\n      payload,\n      setControlValue,\n      onAddFilter,\n      viewport\n    } = this.props; // TODO get this to work\n    // if (formData.autozoom) {\n    //   viewport = common.fitViewport(viewport, geojsonExtent(payload.data.features));\n    // }\n\n    const layer = getLayer(formData, payload, onAddFilter, this.setTooltip);\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_DeckGLContainer__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      ref: this.containerRef,\n      mapboxApiAccessToken: payload.data.mapboxApiKey,\n      viewport: viewport,\n      layers: [layer],\n      mapStyle: formData.mapbox_style,\n      setControlValue: setControlValue\n    });\n  }\n\n}\n\nDeckGLGeoJson.propTypes = propTypes;\nDeckGLGeoJson.defaultProps = defaultProps;\n/* harmony default export */ __webpack_exports__[\"default\"] = (DeckGLGeoJson);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@superset-ui/legacy-preset-chart-deckgl/esm/layers/Geojson/Geojson.js\n");

/***/ }),

/***/ "./node_modules/earcut/src/earcut.js":
/*!*******************************************!*\
  !*** ./node_modules/earcut/src/earcut.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    var filteredBridge = filterPoints(bridge, bridge.next);\n    filterPoints(bridgeReverse, bridgeReverse.next);\n\n    // Check if input node was removed by the filtering\n    return outerNode === bridge ? filteredBridge : outerNode;\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/earcut/src/earcut.js\n");

/***/ })

}]);